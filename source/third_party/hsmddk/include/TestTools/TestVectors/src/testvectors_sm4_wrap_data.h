/* testvectors_sm4_wrap_data.h
 *
 * Description: SM4-WRAP test vector data, automatically generated from
 *              stdvect.sm4.sm4_wrap.py
 */

/* -------------------------------------------------------------------------- */
/*                                                                            */
/*   Module        : DDK-130_bsd                                              */
/*   Version       : 4.1.1                                                    */
/*   Configuration : DDK_EIP130_BSD                                           */
/*                                                                            */
/*   Date          : 2023-Mar-10                                              */
/*                                                                            */
/* Copyright (c) 2014-2023 by Rambus, Inc. and/or its subsidiaries.           */
/*                                                                            */
/* Redistribution and use in source and binary forms, with or without         */
/* modification, are permitted provided that the following conditions are     */
/* met:                                                                       */
/*                                                                            */
/* 1. Redistributions of source code must retain the above copyright          */
/* notice, this list of conditions and the following disclaimer.              */
/*                                                                            */
/* 2. Redistributions in binary form must reproduce the above copyright       */
/* notice, this list of conditions and the following disclaimer in the        */
/* documentation and/or other materials provided with the distribution.       */
/*                                                                            */
/* 3. Neither the name of the copyright holder nor the names of its           */
/* contributors may be used to endorse or promote products derived from       */
/* this software without specific prior written permission.                   */
/*                                                                            */
/* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS        */
/* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT          */
/* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR      */
/* A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT       */
/* HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,     */
/* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT           */
/* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,      */
/* DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY      */
/* THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT        */
/* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE      */
/* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.       */
/* -------------------------------------------------------------------------- */

#ifndef INCLUDE_GUARD_TESTVECTORS_SM4_WRAP_DATA_H
#define INCLUDE_GUARD_TESTVECTORS_SM4_WRAP_DATA_H

#include <third_party/hsmddk/include/Kit/DriverFramework/Basic_Defs_API/incl/basic_defs.h>

/* KW vectors */
static const uint8_t TC1_key[] =
{
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
};

static const uint8_t TC1_ptx[] =
{
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF
};

static const uint8_t TC1_ctx[] =
{
    0xc7, 0x2e, 0x8d, 0xbf, 0xef, 0xe8, 0x56, 0x25,
    0x9f, 0xff, 0x77, 0xde, 0x20, 0x23, 0xb3, 0x80,
    0xa9, 0xe2, 0xd0, 0xb8, 0xac, 0xb9, 0xb6, 0xf6
};

static const uint8_t TC2_key[] =
{
    0x01, 0x11, 0x21, 0x51, 0x61, 0x7a, 0xa1, 0x31,
    0x41, 0x51, 0x61, 0x7a, 0x01, 0x11, 0x20, 0x01
};

static const uint8_t TC2_ptx[] =
{
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF,
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07
};

static const uint8_t TC2_ctx[] =
{
    0x7e, 0x75, 0xd6, 0x34, 0xa0, 0xe0, 0x04, 0x5b,
    0xd4, 0x46, 0x2a, 0xfd, 0x71, 0x81, 0x29, 0x31,
    0x8b, 0x6a, 0xab, 0x79, 0x02, 0xfe, 0x07, 0xd5,
    0x0b, 0x37, 0x9d, 0xc0, 0x70, 0x88, 0x0a, 0x3a
};

static const uint8_t TC3_key[] =
{
    0xdd, 0xdd, 0xee, 0xee, 0xff, 0xff, 0xaa, 0xaa,
    0xbb, 0xbb, 0xaa, 0xaa, 0xbb, 0xbb, 0xcc, 0xcc
};

static const uint8_t TC3_ptx[] =
{
    0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77,
    0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xDD, 0xEE, 0xFF,
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
    0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
};

static const uint8_t TC3_ctx[] =
{
    0x4e, 0x90, 0x3a, 0x3d, 0xe9, 0x90, 0x9e, 0x42,
    0x00, 0x4e, 0xc3, 0xc9, 0x30, 0x83, 0xb6, 0xec,
    0x7b, 0x50, 0x52, 0xe4, 0xdd, 0xaf, 0x22, 0x55,
    0xc5, 0x2e, 0xe7, 0x7b, 0x9b, 0xdf, 0xf3, 0x69,
    0x44, 0x8b, 0x34, 0x29, 0x51, 0x33, 0x63, 0xb3
};

/* KWP vectors */
static const uint8_t TC4_key[] =
{
    0x58, 0x40, 0xDF, 0x6E, 0x29, 0xB0, 0x2A, 0xF1, 0xAB, 0x49, 0x3B, 0x70, 0x5B, 0xF1, 0x6E, 0xA1
};
static const uint8_t TC4_ptx[] =
{
    0xC3, 0x7B, 0x7E, 0x64, 0x92, 0x58, 0x43, 0x40, 0xBE, 0xD1, 0x22, 0x07, 0x80, 0x89, 0x41, 0x15,
    0x50, 0x68, 0xF7, 0x38
};
static const uint8_t TC4_ctx[] =
{
    0xC4, 0x7D, 0x86, 0x25, 0x38, 0x15, 0x61, 0x50, 0x60, 0x82, 0x69, 0x63, 0x82, 0x68, 0x43, 0xEB,
    0x1B, 0xE3, 0x9E, 0xCD, 0x9A, 0x03, 0x2D, 0x04, 0xB2, 0x2A, 0x71, 0x0E, 0xB9, 0x3D, 0x63, 0xE0
};
static const uint8_t TC5_key[] =
{
    0x58, 0x40, 0xDF, 0x6E, 0x29, 0xB0, 0x2A, 0xF1, 0xAB, 0x49, 0x3B, 0x70, 0x5B, 0xF1, 0x6E, 0xA1
};
static const uint8_t TC5_ptx[] =
{
    0x46, 0x6F, 0x72, 0x50, 0x61, 0x73, 0x69
};
static const uint8_t TC5_ctx[] =
{
    0xE4, 0xE0, 0xDE, 0x4B, 0x93, 0x8D, 0xE5, 0xC3, 0x94, 0x4F, 0x9E, 0x45, 0x27, 0x79, 0xCF, 0x26
};


#endif /* INCLUDE_GUARD_TESTVECTORS_SM4_WRAP_DATA_H */

/* end of file testvectors_sm4_wrap_data.h */
