%%{
/*
 * Copyright (c) 2023 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== TCAN455X.Board.c.xdt ========
 */

let tcan = args[0];
let instances = tcan.$instances;
let inst = instances[0];
let spiIndex = inst.sharedSpiInstance.$name;

%%}

#include <ti/drivers/can/TCAN455X.h>

/*
 *  =============================== TCAN455X ===============================
 */

#define TCAN455X_TASK_STACK_SIZE `inst.taskStackSize`

static uint32_t TCAN455X_taskStack[TCAN455X_TASK_STACK_SIZE / 4];

/*
 *  ======== TCAN455X_config ========
 */
const TCAN455X_Config TCAN455X_config = {
    .clkFreqMHz    = `inst.clkFreqMHz`,
    .spiIndex      = `spiIndex`,
    .spiBitRate    = `inst.spiBitRate`,
    .taskStack     = TCAN455X_taskStack,
    .taskPri       = `inst.taskPri`,
    .taskStackSize = TCAN455X_TASK_STACK_SIZE,
    .spiCSPin      = `inst.csPinInstance.$name`,
    .interruptPin  = `inst.intPinInstance.$name`
};
