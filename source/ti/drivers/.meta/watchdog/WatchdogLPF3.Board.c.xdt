%%{
/*
 * Copyright (c) 2022 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== WatchdogLPF3.Board.c.xdt ========
 */

    let Watchdog    = args[0];
    let instances   = Watchdog.$instances;

    if (instances.length == 0) return;

    let inst        = instances[0];
    let countDef    = Watchdog.defaultInstanceName + "COUNT";

    /* get ti/drivers common utility functions */
    let Common = system.getScript("/ti/drivers/Common.js");

    let declarations = Common.genBoardDeclarations(instances);
%%}
/*
 *  =============================== Watchdog ===============================
 */

#include <ti/drivers/Watchdog.h>
#include <ti/drivers/watchdog/WatchdogLPF3.h>

#define `countDef` `instances.length`


WatchdogLPF3_Object WatchdogLPF3_objects[`countDef`];

const WatchdogLPF3_HWAttrs WatchdogLPF3_hwAttrs[`countDef`] = {
    /* `inst.$name`: period = `inst.period` */
    {
        .reloadValue = `inst.period`
    },
};

const Watchdog_Config Watchdog_config[`countDef`] = {
    /* `inst.$name` */
    {
        .fxnTablePtr = &WatchdogLPF3_fxnTable,
        .object      = &WatchdogLPF3_objects[`inst.$name`],
        .hwAttrs     = &WatchdogLPF3_hwAttrs[`inst.$name`]
    }
};

`declarations`
const uint_least8_t Watchdog_count = `countDef`;
