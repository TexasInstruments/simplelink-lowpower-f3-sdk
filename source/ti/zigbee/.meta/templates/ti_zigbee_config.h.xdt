/******************************************************************************
 Group: CMCU LPRF
 $Target Device: DEVICES $

 ******************************************************************************
 $License: BSD3 2024 $
 ******************************************************************************
 $Release Name: PACKAGE NAME $
 $Release Date: PACKAGE RELEASE DATE $
 *****************************************************************************/

/*
 *  ======== ti_zigbee_config.h.xdt ========
 */
%%{
/* Static module and submodules */
const zigbee = system.modules['/ti/zigbee/zigbee'].$static;
const common = system.getScript("/ti/zigbee/zigbee_common.js");

/* GPDF Security Key */
const GPDF_SEC_KEY_LEN = 16;
let gpdfSecurityKey = "";
let defaultChanlist =  "0";

if (zigbee.deviceType.includes("gpd"))
{
    gpdfSecurityKey = "{";
    let i;
    for(i = 0; i < GPDF_SEC_KEY_LEN; i++)
    {
        gpdfSecurityKey += "0x";
        gpdfSecurityKey += zigbee.gpdSecurity.gpdfSecurityKey.substring((2*i), (2*i)+2);
        gpdfSecurityKey += ",";
    }
    gpdfSecurityKey = gpdfSecurityKey.slice(0,-1);
    gpdfSecurityKey += "}";
}
else
{
    defaultChanlist = common.chanArrToBitmask(zigbee.primaryChannels);
}
%%}
/*
 *                           ti_zigbee_config.h
 *
 *  DO NOT EDIT - This file was generated by the SysConfig tool.
 *
 *  Macros used to define a TI Z-Stack ZigBee device.
 *
 */

#ifndef TI_ZIGBEE_CONFIG_H
#define TI_ZIGBEE_CONFIG_H

#ifdef __cplusplus
extern "C"
{
#endif


/******************************************************************************
 * INCLUDES
 */
% if (!zigbee.deviceType.includes("gpd")) {
#include "zboss_api.h"
%}
/******************************************************************************
 * CONSTANTS
 */

/******************************************************************************
 * CONFIGURATION
 */

% if (zigbee.deviceType.includes("gpd")) {
#ifndef CHANNEL_LIST
#define CHANNEL_LIST            {`zigbee.gpdRf.channels`}
#endif



#ifndef GPD_APP_ID_TYPE
#define GPD_APP_ID_TYPE         `zigbee.gpdNetwork.gpdIDType`
#endif

#ifndef GPD_SRC_ID
#define GPD_SRC_ID              `zigbee.gpdNetwork.gpdID`
#endif

#ifndef SECURITY_LEVEL
#define SECURITY_LEVEL          `zigbee.gpdSecurity.gpdfSecurityLevel`
#endif

#ifndef SECURITY_KEY_TYPE
#define SECURITY_KEY_TYPE       `zigbee.gpdSecurity.gpdfSecurityKeyType`
#endif

#ifndef SECURITY_KEY
#define SECURITY_KEY            `gpdfSecurityKey`
#endif

#ifndef GPDF_REPETITIONS
#define GPDF_REPETITIONS        `zigbee.gpdAdvanced.gpdfRetries`
#endif

#ifndef UNIDIR_DEVICE
#define UNIDIR_DEVICE           `(zigbee.gpdAdvanced.uniDirComm) ? "ZB_TRUE" : "ZB_FALSE"`
#endif

#ifndef BATTERYLESS_DEVICE
#define BATTERYLESS_DEVICE      `(zigbee.gpdAdvanced.batteryless) ? "ZB_TRUE" : "ZB_FALSE"`
#endif
% }
% else
% {
#ifndef DEFAULT_CHANLIST
#define DEFAULT_CHANLIST            `defaultChanlist`
#endif

/* Value used by end device when sending End Device Timeout Request */
#ifndef ED_TIMEOUT_VALUE
#define ED_TIMEOUT_VALUE        `zigbee.endDeviceTimeout`
#endif

%%{
const allZeroReg = new RegExp("^[0]{" + common.NWK_KEY_LEN * 2 + "}$", "g");
const allZeroKey = allZeroReg.test(zigbee.defaultNwkKey)

/* Default network key */
let defaultNwkKey = "{";
let i = 0;
for(i = 0; i < common.NWK_KEY_LEN; i++)
{
    defaultNwkKey += "0x";
    defaultNwkKey += zigbee.defaultNwkKey.substring((2*i), (2*i)+2);
    defaultNwkKey += ",";
}
defaultNwkKey = defaultNwkKey.slice(0,-1);
defaultNwkKey += "}";
%%}
%     if(allZeroKey === false) {
/* Default network key. */
#ifndef DEFAULT_NWK_KEY
#define DEFAULT_NWK_KEY           `defaultNwkKey`
#endif
%     }

#ifndef MAX_CHILDREN
#define MAX_CHILDREN             `zigbee.nwkMaxChildren`
#endif

% if (zigbee.zigbeeRevision != "r22") {
#ifndef MAX_ED_CAPACITY
#define MAX_ED_CAPACITY          `zigbee.nwkMaxEDCapacity`
#endif
%}

#ifndef ED_RX_ALWAYS_ON
#define ED_RX_ALWAYS_ON         `(zigbee.powerModeOperation === "alwaysOn") ? "ZB_TRUE" : "ZB_FALSE"`
#endif

/* The number of milliseconds to wait between data request polls to the coordinator. */
#ifndef ED_POLL_RATE
#define ED_POLL_RATE             `zigbee.pollPeriod`
#endif
% }

#ifdef __cplusplus
}  /* end of extern "C" */
#endif

#endif /* TI_ZIGBEE_CONFIG_H */