// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:19
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40081000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBEregs.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40081000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBEregs.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBEregs.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: c16b512ac1def3b16902710da773240a734a3d92
//
// ===========================================================================


#ifndef __PBE_REGS_H
#define __PBE_REGS_H

#ifndef __HW_TYPES_H__ 
  #ifndef HWREG
    #define HWREG(x) (*((volatile unsigned long *)(x)))
  #endif
#endif
#define PBE_BASE 0x40081000UL
#define RF24_PBE_BASE 0x40081000UL
// --------------------------------------------------------------
// ENABLE
// 
#define PBE_ENABLE_ADR (PBE_BASE + 0x0000UL)
static volatile unsigned long* const SP_PBE_ENABLE = (unsigned long*) PBE_ENABLE_ADR;
#define S_PBE_ENABLE (*SP_PBE_ENABLE)
#define RF24_PBE_O_ENABLE                        0
// bitfield: ENABLE_MDMF
#define PBE_ENABLE_MDMF                              2UL
#define RF24_PBE_ENABLE_MDMF_S                   2UL
#define PBE_ENABLE_MDMF_BM                           0x00000004UL
#define RF24_PBE_ENABLE_MDMF_M                   0x00000004UL
// enums for bitfield ENABLE_MDMF (width: 1)UL
#define PBE_ENABLE_MDMF_DIS                          0x0UL
#define PBE_ENABLE_MDMF_EN                           0x1UL
// bitfield: ENABLE_LOCTIM
#define PBE_ENABLE_LOCTIM                            1UL
#define RF24_PBE_ENABLE_LOCTIM_S                 1UL
#define PBE_ENABLE_LOCTIM_BM                         0x00000002UL
#define RF24_PBE_ENABLE_LOCTIM_M                 0x00000002UL
// enums for bitfield ENABLE_LOCTIM (width: 1)UL
#define PBE_ENABLE_LOCTIM_DIS                        0x0UL
#define PBE_ENABLE_LOCTIM_EN                         0x1UL
// bitfield: ENABLE_TOPSM
#define PBE_ENABLE_TOPSM                             0UL
#define RF24_PBE_ENABLE_TOPSM_S                  0UL
#define PBE_ENABLE_TOPSM_BM                          0x00000001UL
#define RF24_PBE_ENABLE_TOPSM_M                  0x00000001UL
// enums for bitfield ENABLE_TOPSM (width: 1)UL
#define PBE_ENABLE_TOPSM_DIS                         0x0UL
#define PBE_ENABLE_TOPSM_EN                          0x1UL
// --------------------------------------------------------------
// FWSRC
// 
#define PBE_FWSRC_ADR (PBE_BASE + 0x0004UL)
static volatile unsigned long* const SP_PBE_FWSRC = (unsigned long*) PBE_FWSRC_ADR;
#define S_PBE_FWSRC (*SP_PBE_FWSRC)
#define RF24_PBE_O_FWSRC                         4
// bitfield: FWSRC_DATARAM
#define PBE_FWSRC_DATARAM                            2UL
#define RF24_PBE_FWSRC_DATARAM_S                 2UL
#define PBE_FWSRC_DATARAM_BM                         0x00000004UL
#define RF24_PBE_FWSRC_DATARAM_M                 0x00000004UL
// enums for bitfield FWSRC_DATARAM (width: 1)UL
#define PBE_FWSRC_DATARAM_PBERAM                     0x0UL
#define PBE_FWSRC_DATARAM_S2RRAM                     0x1UL
// bitfield: FWSRC_FWRAM
#define PBE_FWSRC_FWRAM                              1UL
#define RF24_PBE_FWSRC_FWRAM_S                   1UL
#define PBE_FWSRC_FWRAM_BM                           0x00000002UL
#define RF24_PBE_FWSRC_FWRAM_M                   0x00000002UL
// enums for bitfield FWSRC_FWRAM (width: 1)UL
#define PBE_FWSRC_FWRAM_PBERAM                       0x0UL
#define PBE_FWSRC_FWRAM_S2RRAM                       0x1UL
// bitfield: FWSRC_BANK
#define PBE_FWSRC_BANK                               0UL
#define RF24_PBE_FWSRC_BANK_S                    0UL
#define PBE_FWSRC_BANK_BM                            0x00000001UL
#define RF24_PBE_FWSRC_BANK_M                    0x00000001UL
// enums for bitfield FWSRC_BANK (width: 1)UL
#define PBE_FWSRC_BANK_ZERO                          0x0UL
#define PBE_FWSRC_BANK_ONE                           0x1UL
// --------------------------------------------------------------
// INIT
// 
#define PBE_INIT_ADR (PBE_BASE + 0x0008UL)
static volatile unsigned long* const SP_PBE_INIT = (unsigned long*) PBE_INIT_ADR;
#define S_PBE_INIT (*SP_PBE_INIT)
#define RF24_PBE_O_INIT                          8
// bitfield: INIT_RFE
#define PBE_INIT_RFE                                 4UL
#define RF24_PBE_INIT_RFE_S                      4UL
#define PBE_INIT_RFE_BM                              0x00000010UL
#define RF24_PBE_INIT_RFE_M                      0x00000010UL
// enums for bitfield INIT_RFE (width: 1)UL
#define PBE_INIT_RFE_NO_EFFECT                       0x0UL
#define PBE_INIT_RFE_RESET                           0x1UL
// bitfield: INIT_MDM
#define PBE_INIT_MDM                                 3UL
#define RF24_PBE_INIT_MDM_S                      3UL
#define PBE_INIT_MDM_BM                              0x00000008UL
#define RF24_PBE_INIT_MDM_M                      0x00000008UL
// enums for bitfield INIT_MDM (width: 1)UL
#define PBE_INIT_MDM_NO_EFFECT                       0x0UL
#define PBE_INIT_MDM_RESET                           0x1UL
// bitfield: INIT_MDMF
#define PBE_INIT_MDMF                                2UL
#define RF24_PBE_INIT_MDMF_S                     2UL
#define PBE_INIT_MDMF_BM                             0x00000004UL
#define RF24_PBE_INIT_MDMF_M                     0x00000004UL
// enums for bitfield INIT_MDMF (width: 1)UL
#define PBE_INIT_MDMF_NO_EFFECT                      0x0UL
#define PBE_INIT_MDMF_RESET                          0x1UL
// bitfield: INIT_LOCTIM
#define PBE_INIT_LOCTIM                              1UL
#define RF24_PBE_INIT_LOCTIM_S                   1UL
#define PBE_INIT_LOCTIM_BM                           0x00000002UL
#define RF24_PBE_INIT_LOCTIM_M                   0x00000002UL
// enums for bitfield INIT_LOCTIM (width: 1)UL
#define PBE_INIT_LOCTIM_NO_EFFECT                    0x0UL
#define PBE_INIT_LOCTIM_RESET                        0x1UL
// bitfield: INIT_TOPSM
#define PBE_INIT_TOPSM                               0UL
#define RF24_PBE_INIT_TOPSM_S                    0UL
#define PBE_INIT_TOPSM_BM                            0x00000001UL
#define RF24_PBE_INIT_TOPSM_M                    0x00000001UL
// enums for bitfield INIT_TOPSM (width: 1)UL
#define PBE_INIT_TOPSM_NO_EFFECT                     0x0UL
#define PBE_INIT_TOPSM_RESET                         0x1UL
// --------------------------------------------------------------
// STROBES0
// 
#define PBE_STROBES0_ADR (PBE_BASE + 0x000CUL)
static volatile unsigned long* const SP_PBE_STROBES0 = (unsigned long*) PBE_STROBES0_ADR;
#define S_PBE_STROBES0 (*SP_PBE_STROBES0)
#define RF24_PBE_O_STROBES0                      12
// bitfield: STROBES0_TIMCAPT1
#define PBE_STROBES0_TIMCAPT1                        6UL
#define RF24_PBE_STROBES0_TIMCAPT1_S             6UL
#define PBE_STROBES0_TIMCAPT1_BM                     0x00000040UL
#define RF24_PBE_STROBES0_TIMCAPT1_M             0x00000040UL
// enums for bitfield STROBES0_TIMCAPT1 (width: 1)UL
#define PBE_STROBES0_TIMCAPT1_ZERO                   0x0UL
#define PBE_STROBES0_TIMCAPT1_ONE                    0x1UL
// bitfield: STROBES0_TIMCAPT0
#define PBE_STROBES0_TIMCAPT0                        5UL
#define RF24_PBE_STROBES0_TIMCAPT0_S             5UL
#define PBE_STROBES0_TIMCAPT0_BM                     0x00000020UL
#define RF24_PBE_STROBES0_TIMCAPT0_M             0x00000020UL
// enums for bitfield STROBES0_TIMCAPT0 (width: 1)UL
#define PBE_STROBES0_TIMCAPT0_ZERO                   0x0UL
#define PBE_STROBES0_TIMCAPT0_ONE                    0x1UL
// bitfield: STROBES0_S2RTRIG
#define PBE_STROBES0_S2RTRIG                         4UL
#define RF24_PBE_STROBES0_S2RTRIG_S              4UL
#define PBE_STROBES0_S2RTRIG_BM                      0x00000010UL
#define RF24_PBE_STROBES0_S2RTRIG_M              0x00000010UL
// enums for bitfield STROBES0_S2RTRIG (width: 1)UL
#define PBE_STROBES0_S2RTRIG_NO_EFFECT               0x0UL
#define PBE_STROBES0_S2RTRIG_ARM                     0x1UL
// bitfield: STROBES0_DMATRIG
#define PBE_STROBES0_DMATRIG                         3UL
#define RF24_PBE_STROBES0_DMATRIG_S              3UL
#define PBE_STROBES0_DMATRIG_BM                      0x00000008UL
#define RF24_PBE_STROBES0_DMATRIG_M              0x00000008UL
// enums for bitfield STROBES0_DMATRIG (width: 1)UL
#define PBE_STROBES0_DMATRIG_NO_EFFECT               0x0UL
#define PBE_STROBES0_DMATRIG_ARM                     0x1UL
// bitfield: STROBES0_SYSTCAPT2
#define PBE_STROBES0_SYSTCAPT2                       2UL
#define RF24_PBE_STROBES0_SYSTCAPT2_S            2UL
#define PBE_STROBES0_SYSTCAPT2_BM                    0x00000004UL
#define RF24_PBE_STROBES0_SYSTCAPT2_M            0x00000004UL
// enums for bitfield STROBES0_SYSTCAPT2 (width: 1)UL
#define PBE_STROBES0_SYSTCAPT2_ZERO                  0x0UL
#define PBE_STROBES0_SYSTCAPT2_ONE                   0x1UL
// bitfield: STROBES0_SYSTCAPT1
#define PBE_STROBES0_SYSTCAPT1                       1UL
#define RF24_PBE_STROBES0_SYSTCAPT1_S            1UL
#define PBE_STROBES0_SYSTCAPT1_BM                    0x00000002UL
#define RF24_PBE_STROBES0_SYSTCAPT1_M            0x00000002UL
// enums for bitfield STROBES0_SYSTCAPT1 (width: 1)UL
#define PBE_STROBES0_SYSTCAPT1_ZERO                  0x0UL
#define PBE_STROBES0_SYSTCAPT1_ONE                   0x1UL
// bitfield: STROBES0_SYSTCAPT0
#define PBE_STROBES0_SYSTCAPT0                       0UL
#define RF24_PBE_STROBES0_SYSTCAPT0_S            0UL
#define PBE_STROBES0_SYSTCAPT0_BM                    0x00000001UL
#define RF24_PBE_STROBES0_SYSTCAPT0_M            0x00000001UL
// enums for bitfield STROBES0_SYSTCAPT0 (width: 1)UL
#define PBE_STROBES0_SYSTCAPT0_ZERO                  0x0UL
#define PBE_STROBES0_SYSTCAPT0_ONE                   0x1UL
// --------------------------------------------------------------
// IRQ
// 
#define PBE_IRQ_ADR (PBE_BASE + 0x0010UL)
static volatile unsigned long* const SP_PBE_IRQ = (unsigned long*) PBE_IRQ_ADR;
#define S_PBE_IRQ (*SP_PBE_IRQ)
#define RF24_PBE_O_IRQ                           16
// bitfield: IRQ_SOFT15
#define PBE_IRQ_SOFT15                               15UL
#define RF24_PBE_IRQ_SOFT15_S                    15UL
#define PBE_IRQ_SOFT15_BM                            0x00008000UL
#define RF24_PBE_IRQ_SOFT15_M                    0x00008000UL
// enums for bitfield IRQ_SOFT15 (width: 1)UL
#define PBE_IRQ_SOFT15_OFF                           0x0UL
#define PBE_IRQ_SOFT15_ON                            0x1UL
// bitfield: IRQ_SOFT14
#define PBE_IRQ_SOFT14                               14UL
#define RF24_PBE_IRQ_SOFT14_S                    14UL
#define PBE_IRQ_SOFT14_BM                            0x00004000UL
#define RF24_PBE_IRQ_SOFT14_M                    0x00004000UL
// enums for bitfield IRQ_SOFT14 (width: 1)UL
#define PBE_IRQ_SOFT14_OFF                           0x0UL
#define PBE_IRQ_SOFT14_ON                            0x1UL
// bitfield: IRQ_SOFT13
#define PBE_IRQ_SOFT13                               13UL
#define RF24_PBE_IRQ_SOFT13_S                    13UL
#define PBE_IRQ_SOFT13_BM                            0x00002000UL
#define RF24_PBE_IRQ_SOFT13_M                    0x00002000UL
// enums for bitfield IRQ_SOFT13 (width: 1)UL
#define PBE_IRQ_SOFT13_OFF                           0x0UL
#define PBE_IRQ_SOFT13_ON                            0x1UL
// bitfield: IRQ_SOFT12
#define PBE_IRQ_SOFT12                               12UL
#define RF24_PBE_IRQ_SOFT12_S                    12UL
#define PBE_IRQ_SOFT12_BM                            0x00001000UL
#define RF24_PBE_IRQ_SOFT12_M                    0x00001000UL
// enums for bitfield IRQ_SOFT12 (width: 1)UL
#define PBE_IRQ_SOFT12_OFF                           0x0UL
#define PBE_IRQ_SOFT12_ON                            0x1UL
// bitfield: IRQ_SOFT11
#define PBE_IRQ_SOFT11                               11UL
#define RF24_PBE_IRQ_SOFT11_S                    11UL
#define PBE_IRQ_SOFT11_BM                            0x00000800UL
#define RF24_PBE_IRQ_SOFT11_M                    0x00000800UL
// enums for bitfield IRQ_SOFT11 (width: 1)UL
#define PBE_IRQ_SOFT11_OFF                           0x0UL
#define PBE_IRQ_SOFT11_ON                            0x1UL
// bitfield: IRQ_SOFT10
#define PBE_IRQ_SOFT10                               10UL
#define RF24_PBE_IRQ_SOFT10_S                    10UL
#define PBE_IRQ_SOFT10_BM                            0x00000400UL
#define RF24_PBE_IRQ_SOFT10_M                    0x00000400UL
// enums for bitfield IRQ_SOFT10 (width: 1)UL
#define PBE_IRQ_SOFT10_OFF                           0x0UL
#define PBE_IRQ_SOFT10_ON                            0x1UL
// bitfield: IRQ_SOFT9
#define PBE_IRQ_SOFT9                                9UL
#define RF24_PBE_IRQ_SOFT9_S                     9UL
#define PBE_IRQ_SOFT9_BM                             0x00000200UL
#define RF24_PBE_IRQ_SOFT9_M                     0x00000200UL
// enums for bitfield IRQ_SOFT9 (width: 1)UL
#define PBE_IRQ_SOFT9_OFF                            0x0UL
#define PBE_IRQ_SOFT9_ON                             0x1UL
// bitfield: IRQ_SOFT8
#define PBE_IRQ_SOFT8                                8UL
#define RF24_PBE_IRQ_SOFT8_S                     8UL
#define PBE_IRQ_SOFT8_BM                             0x00000100UL
#define RF24_PBE_IRQ_SOFT8_M                     0x00000100UL
// enums for bitfield IRQ_SOFT8 (width: 1)UL
#define PBE_IRQ_SOFT8_OFF                            0x0UL
#define PBE_IRQ_SOFT8_ON                             0x1UL
// bitfield: IRQ_SOFT7
#define PBE_IRQ_SOFT7                                7UL
#define RF24_PBE_IRQ_SOFT7_S                     7UL
#define PBE_IRQ_SOFT7_BM                             0x00000080UL
#define RF24_PBE_IRQ_SOFT7_M                     0x00000080UL
// enums for bitfield IRQ_SOFT7 (width: 1)UL
#define PBE_IRQ_SOFT7_OFF                            0x0UL
#define PBE_IRQ_SOFT7_ON                             0x1UL
// bitfield: IRQ_SOFT6
#define PBE_IRQ_SOFT6                                6UL
#define RF24_PBE_IRQ_SOFT6_S                     6UL
#define PBE_IRQ_SOFT6_BM                             0x00000040UL
#define RF24_PBE_IRQ_SOFT6_M                     0x00000040UL
// enums for bitfield IRQ_SOFT6 (width: 1)UL
#define PBE_IRQ_SOFT6_OFF                            0x0UL
#define PBE_IRQ_SOFT6_ON                             0x1UL
// bitfield: IRQ_SOFT5
#define PBE_IRQ_SOFT5                                5UL
#define RF24_PBE_IRQ_SOFT5_S                     5UL
#define PBE_IRQ_SOFT5_BM                             0x00000020UL
#define RF24_PBE_IRQ_SOFT5_M                     0x00000020UL
// enums for bitfield IRQ_SOFT5 (width: 1)UL
#define PBE_IRQ_SOFT5_OFF                            0x0UL
#define PBE_IRQ_SOFT5_ON                             0x1UL
// bitfield: IRQ_SOFT4
#define PBE_IRQ_SOFT4                                4UL
#define RF24_PBE_IRQ_SOFT4_S                     4UL
#define PBE_IRQ_SOFT4_BM                             0x00000010UL
#define RF24_PBE_IRQ_SOFT4_M                     0x00000010UL
// enums for bitfield IRQ_SOFT4 (width: 1)UL
#define PBE_IRQ_SOFT4_OFF                            0x0UL
#define PBE_IRQ_SOFT4_ON                             0x1UL
// bitfield: IRQ_SOFT3
#define PBE_IRQ_SOFT3                                3UL
#define RF24_PBE_IRQ_SOFT3_S                     3UL
#define PBE_IRQ_SOFT3_BM                             0x00000008UL
#define RF24_PBE_IRQ_SOFT3_M                     0x00000008UL
// enums for bitfield IRQ_SOFT3 (width: 1)UL
#define PBE_IRQ_SOFT3_OFF                            0x0UL
#define PBE_IRQ_SOFT3_ON                             0x1UL
// bitfield: IRQ_SOFT2
#define PBE_IRQ_SOFT2                                2UL
#define RF24_PBE_IRQ_SOFT2_S                     2UL
#define PBE_IRQ_SOFT2_BM                             0x00000004UL
#define RF24_PBE_IRQ_SOFT2_M                     0x00000004UL
// enums for bitfield IRQ_SOFT2 (width: 1)UL
#define PBE_IRQ_SOFT2_OFF                            0x0UL
#define PBE_IRQ_SOFT2_ON                             0x1UL
// bitfield: IRQ_SOFT1
#define PBE_IRQ_SOFT1                                1UL
#define RF24_PBE_IRQ_SOFT1_S                     1UL
#define PBE_IRQ_SOFT1_BM                             0x00000002UL
#define RF24_PBE_IRQ_SOFT1_M                     0x00000002UL
// enums for bitfield IRQ_SOFT1 (width: 1)UL
#define PBE_IRQ_SOFT1_OFF                            0x0UL
#define PBE_IRQ_SOFT1_ON                             0x1UL
// bitfield: IRQ_SOFT0
#define PBE_IRQ_SOFT0                                0UL
#define RF24_PBE_IRQ_SOFT0_S                     0UL
#define PBE_IRQ_SOFT0_BM                             0x00000001UL
#define RF24_PBE_IRQ_SOFT0_M                     0x00000001UL
// enums for bitfield IRQ_SOFT0 (width: 1)UL
#define PBE_IRQ_SOFT0_OFF                            0x0UL
#define PBE_IRQ_SOFT0_ON                             0x1UL
// --------------------------------------------------------------
// EVT0
// 
#define PBE_EVT0_ADR (PBE_BASE + 0x0014UL)
static volatile unsigned long* const SP_PBE_EVT0 = (unsigned long*) PBE_EVT0_ADR;
#define S_PBE_EVT0 (*SP_PBE_EVT0)
#define RF24_PBE_O_EVT0                          20
// bitfield: EVT0_MDMFAEMPTY
#define PBE_EVT0_MDMFAEMPTY                          15UL
#define RF24_PBE_EVT0_MDMFAEMPTY_S               15UL
#define PBE_EVT0_MDMFAEMPTY_BM                       0x00008000UL
#define RF24_PBE_EVT0_MDMFAEMPTY_M               0x00008000UL
// enums for bitfield EVT0_MDMFAEMPTY (width: 1)UL
#define PBE_EVT0_MDMFAEMPTY_ZERO                     0x0UL
#define PBE_EVT0_MDMFAEMPTY_ONE                      0x1UL
// bitfield: EVT0_S2RSTOP
#define PBE_EVT0_S2RSTOP                             14UL
#define RF24_PBE_EVT0_S2RSTOP_S                  14UL
#define PBE_EVT0_S2RSTOP_BM                          0x00004000UL
#define RF24_PBE_EVT0_S2RSTOP_M                  0x00004000UL
// enums for bitfield EVT0_S2RSTOP (width: 1)UL
#define PBE_EVT0_S2RSTOP_ZERO                        0x0UL
#define PBE_EVT0_S2RSTOP_ONE                         0x1UL
// bitfield: EVT0_FIFOERR
#define PBE_EVT0_FIFOERR                             13UL
#define RF24_PBE_EVT0_FIFOERR_S                  13UL
#define PBE_EVT0_FIFOERR_BM                          0x00002000UL
#define RF24_PBE_EVT0_FIFOERR_M                  0x00002000UL
// enums for bitfield EVT0_FIFOERR (width: 1)UL
#define PBE_EVT0_FIFOERR_ZERO                        0x0UL
#define PBE_EVT0_FIFOERR_ONE                         0x1UL
// bitfield: EVT0_MDMFAFULL
#define PBE_EVT0_MDMFAFULL                           12UL
#define RF24_PBE_EVT0_MDMFAFULL_S                12UL
#define PBE_EVT0_MDMFAFULL_BM                        0x00001000UL
#define RF24_PBE_EVT0_MDMFAFULL_M                0x00001000UL
// enums for bitfield EVT0_MDMFAFULL (width: 1)UL
#define PBE_EVT0_MDMFAFULL_ZERO                      0x0UL
#define PBE_EVT0_MDMFAFULL_ONE                       0x1UL
// bitfield: EVT0_SYSTCMP2
#define PBE_EVT0_SYSTCMP2                            11UL
#define RF24_PBE_EVT0_SYSTCMP2_S                 11UL
#define PBE_EVT0_SYSTCMP2_BM                         0x00000800UL
#define RF24_PBE_EVT0_SYSTCMP2_M                 0x00000800UL
// enums for bitfield EVT0_SYSTCMP2 (width: 1)UL
#define PBE_EVT0_SYSTCMP2_ZERO                       0x0UL
#define PBE_EVT0_SYSTCMP2_ONE                        0x1UL
// bitfield: EVT0_SYSTCMP1
#define PBE_EVT0_SYSTCMP1                            10UL
#define RF24_PBE_EVT0_SYSTCMP1_S                 10UL
#define PBE_EVT0_SYSTCMP1_BM                         0x00000400UL
#define RF24_PBE_EVT0_SYSTCMP1_M                 0x00000400UL
// enums for bitfield EVT0_SYSTCMP1 (width: 1)UL
#define PBE_EVT0_SYSTCMP1_ZERO                       0x0UL
#define PBE_EVT0_SYSTCMP1_ONE                        0x1UL
// bitfield: EVT0_SYSTCMP0
#define PBE_EVT0_SYSTCMP0                            9UL
#define RF24_PBE_EVT0_SYSTCMP0_S                 9UL
#define PBE_EVT0_SYSTCMP0_BM                         0x00000200UL
#define RF24_PBE_EVT0_SYSTCMP0_M                 0x00000200UL
// enums for bitfield EVT0_SYSTCMP0 (width: 1)UL
#define PBE_EVT0_SYSTCMP0_ZERO                       0x0UL
#define PBE_EVT0_SYSTCMP0_ONE                        0x1UL
// bitfield: EVT0_MDMMSGBOX
#define PBE_EVT0_MDMMSGBOX                           8UL
#define RF24_PBE_EVT0_MDMMSGBOX_S                8UL
#define PBE_EVT0_MDMMSGBOX_BM                        0x00000100UL
#define RF24_PBE_EVT0_MDMMSGBOX_M                0x00000100UL
// enums for bitfield EVT0_MDMMSGBOX (width: 1)UL
#define PBE_EVT0_MDMMSGBOX_ZERO                      0x0UL
#define PBE_EVT0_MDMMSGBOX_ONE                       0x1UL
// bitfield: EVT0_RFEMSGBOX
#define PBE_EVT0_RFEMSGBOX                           7UL
#define RF24_PBE_EVT0_RFEMSGBOX_S                7UL
#define PBE_EVT0_RFEMSGBOX_BM                        0x00000080UL
#define RF24_PBE_EVT0_RFEMSGBOX_M                0x00000080UL
// enums for bitfield EVT0_RFEMSGBOX (width: 1)UL
#define PBE_EVT0_RFEMSGBOX_ZERO                      0x0UL
#define PBE_EVT0_RFEMSGBOX_ONE                       0x1UL
// bitfield: EVT0_RFEDAT
#define PBE_EVT0_RFEDAT                              6UL
#define RF24_PBE_EVT0_RFEDAT_S                   6UL
#define PBE_EVT0_RFEDAT_BM                           0x00000040UL
#define RF24_PBE_EVT0_RFEDAT_M                   0x00000040UL
// enums for bitfield EVT0_RFEDAT (width: 1)UL
#define PBE_EVT0_RFEDAT_ZERO                         0x0UL
#define PBE_EVT0_RFEDAT_ONE                          0x1UL
// bitfield: EVT0_RFECMD
#define PBE_EVT0_RFECMD                              5UL
#define RF24_PBE_EVT0_RFECMD_S                   5UL
#define PBE_EVT0_RFECMD_BM                           0x00000020UL
#define RF24_PBE_EVT0_RFECMD_M                   0x00000020UL
// enums for bitfield EVT0_RFECMD (width: 1)UL
#define PBE_EVT0_RFECMD_ZERO                         0x0UL
#define PBE_EVT0_RFECMD_ONE                          0x1UL
// bitfield: EVT0_MDMDAT
#define PBE_EVT0_MDMDAT                              4UL
#define RF24_PBE_EVT0_MDMDAT_S                   4UL
#define PBE_EVT0_MDMDAT_BM                           0x00000010UL
#define RF24_PBE_EVT0_MDMDAT_M                   0x00000010UL
// enums for bitfield EVT0_MDMDAT (width: 1)UL
#define PBE_EVT0_MDMDAT_ZERO                         0x0UL
#define PBE_EVT0_MDMDAT_ONE                          0x1UL
// bitfield: EVT0_MDMCMD
#define PBE_EVT0_MDMCMD                              3UL
#define RF24_PBE_EVT0_MDMCMD_S                   3UL
#define PBE_EVT0_MDMCMD_BM                           0x00000008UL
#define RF24_PBE_EVT0_MDMCMD_M                   0x00000008UL
// enums for bitfield EVT0_MDMCMD (width: 1)UL
#define PBE_EVT0_MDMCMD_ZERO                         0x0UL
#define PBE_EVT0_MDMCMD_ONE                          0x1UL
// bitfield: EVT0_TIMER1
#define PBE_EVT0_TIMER1                              2UL
#define RF24_PBE_EVT0_TIMER1_S                   2UL
#define PBE_EVT0_TIMER1_BM                           0x00000004UL
#define RF24_PBE_EVT0_TIMER1_M                   0x00000004UL
// enums for bitfield EVT0_TIMER1 (width: 1)UL
#define PBE_EVT0_TIMER1_ZERO                         0x0UL
#define PBE_EVT0_TIMER1_ONE                          0x1UL
// bitfield: EVT0_TIMER0
#define PBE_EVT0_TIMER0                              1UL
#define RF24_PBE_EVT0_TIMER0_S                   1UL
#define PBE_EVT0_TIMER0_BM                           0x00000002UL
#define RF24_PBE_EVT0_TIMER0_M                   0x00000002UL
// enums for bitfield EVT0_TIMER0 (width: 1)UL
#define PBE_EVT0_TIMER0_ZERO                         0x0UL
#define PBE_EVT0_TIMER0_ONE                          0x1UL
// bitfield: EVT0_PBEAPI
#define PBE_EVT0_PBEAPI                              0UL
#define RF24_PBE_EVT0_PBEAPI_S                   0UL
#define PBE_EVT0_PBEAPI_BM                           0x00000001UL
#define RF24_PBE_EVT0_PBEAPI_M                   0x00000001UL
// enums for bitfield EVT0_PBEAPI (width: 1)UL
#define PBE_EVT0_PBEAPI_ZERO                         0x0UL
#define PBE_EVT0_PBEAPI_ONE                          0x1UL
// --------------------------------------------------------------
// EVT1
// 
#define PBE_EVT1_ADR (PBE_BASE + 0x0018UL)
static volatile unsigned long* const SP_PBE_EVT1 = (unsigned long*) PBE_EVT1_ADR;
#define S_PBE_EVT1 (*SP_PBE_EVT1)
#define RF24_PBE_O_EVT1                          24
// bitfield: EVT1_TXRDBTHR
#define PBE_EVT1_TXRDBTHR                            12UL
#define RF24_PBE_EVT1_TXRDBTHR_S                 12UL
#define PBE_EVT1_TXRDBTHR_BM                         0x00001000UL
#define RF24_PBE_EVT1_TXRDBTHR_M                 0x00001000UL
// enums for bitfield EVT1_TXRDBTHR (width: 1)UL
#define PBE_EVT1_TXRDBTHR_BELOW                      0x0UL
#define PBE_EVT1_TXRDBTHR_MET                        0x1UL
// bitfield: EVT1_TXWRBTHR
#define PBE_EVT1_TXWRBTHR                            11UL
#define RF24_PBE_EVT1_TXWRBTHR_S                 11UL
#define PBE_EVT1_TXWRBTHR_BM                         0x00000800UL
#define RF24_PBE_EVT1_TXWRBTHR_M                 0x00000800UL
// enums for bitfield EVT1_TXWRBTHR (width: 1)UL
#define PBE_EVT1_TXWRBTHR_BELOW                      0x0UL
#define PBE_EVT1_TXWRBTHR_MET                        0x1UL
// bitfield: EVT1_RXRDBTHR
#define PBE_EVT1_RXRDBTHR                            10UL
#define RF24_PBE_EVT1_RXRDBTHR_S                 10UL
#define PBE_EVT1_RXRDBTHR_BM                         0x00000400UL
#define RF24_PBE_EVT1_RXRDBTHR_M                 0x00000400UL
// enums for bitfield EVT1_RXRDBTHR (width: 1)UL
#define PBE_EVT1_RXRDBTHR_BELOW                      0x0UL
#define PBE_EVT1_RXRDBTHR_MET                        0x1UL
// bitfield: EVT1_RXWRBTHR
#define PBE_EVT1_RXWRBTHR                            9UL
#define RF24_PBE_EVT1_RXWRBTHR_S                 9UL
#define PBE_EVT1_RXWRBTHR_BM                         0x00000200UL
#define RF24_PBE_EVT1_RXWRBTHR_M                 0x00000200UL
// enums for bitfield EVT1_RXWRBTHR (width: 1)UL
#define PBE_EVT1_RXWRBTHR_BELOW                      0x0UL
#define PBE_EVT1_RXWRBTHR_MET                        0x1UL
// bitfield: EVT1_MDMPROG
#define PBE_EVT1_MDMPROG                             8UL
#define RF24_PBE_EVT1_MDMPROG_S                  8UL
#define PBE_EVT1_MDMPROG_BM                          0x00000100UL
#define RF24_PBE_EVT1_MDMPROG_M                  0x00000100UL
// enums for bitfield EVT1_MDMPROG (width: 1)UL
#define PBE_EVT1_MDMPROG_ZERO                        0x0UL
#define PBE_EVT1_MDMPROG_ONE                         0x1UL
// bitfield: EVT1_PBEGPI7
#define PBE_EVT1_PBEGPI7                             7UL
#define RF24_PBE_EVT1_PBEGPI7_S                  7UL
#define PBE_EVT1_PBEGPI7_BM                          0x00000080UL
#define RF24_PBE_EVT1_PBEGPI7_M                  0x00000080UL
// enums for bitfield EVT1_PBEGPI7 (width: 1)UL
#define PBE_EVT1_PBEGPI7_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI7_ONE                         0x1UL
// bitfield: EVT1_PBEGPI6
#define PBE_EVT1_PBEGPI6                             6UL
#define RF24_PBE_EVT1_PBEGPI6_S                  6UL
#define PBE_EVT1_PBEGPI6_BM                          0x00000040UL
#define RF24_PBE_EVT1_PBEGPI6_M                  0x00000040UL
// enums for bitfield EVT1_PBEGPI6 (width: 1)UL
#define PBE_EVT1_PBEGPI6_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI6_ONE                         0x1UL
// bitfield: EVT1_PBEGPI5
#define PBE_EVT1_PBEGPI5                             5UL
#define RF24_PBE_EVT1_PBEGPI5_S                  5UL
#define PBE_EVT1_PBEGPI5_BM                          0x00000020UL
#define RF24_PBE_EVT1_PBEGPI5_M                  0x00000020UL
// enums for bitfield EVT1_PBEGPI5 (width: 1)UL
#define PBE_EVT1_PBEGPI5_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI5_ONE                         0x1UL
// bitfield: EVT1_PBEGPI4
#define PBE_EVT1_PBEGPI4                             4UL
#define RF24_PBE_EVT1_PBEGPI4_S                  4UL
#define PBE_EVT1_PBEGPI4_BM                          0x00000010UL
#define RF24_PBE_EVT1_PBEGPI4_M                  0x00000010UL
// enums for bitfield EVT1_PBEGPI4 (width: 1)UL
#define PBE_EVT1_PBEGPI4_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI4_ONE                         0x1UL
// bitfield: EVT1_PBEGPI3
#define PBE_EVT1_PBEGPI3                             3UL
#define RF24_PBE_EVT1_PBEGPI3_S                  3UL
#define PBE_EVT1_PBEGPI3_BM                          0x00000008UL
#define RF24_PBE_EVT1_PBEGPI3_M                  0x00000008UL
// enums for bitfield EVT1_PBEGPI3 (width: 1)UL
#define PBE_EVT1_PBEGPI3_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI3_ONE                         0x1UL
// bitfield: EVT1_PBEGPI2
#define PBE_EVT1_PBEGPI2                             2UL
#define RF24_PBE_EVT1_PBEGPI2_S                  2UL
#define PBE_EVT1_PBEGPI2_BM                          0x00000004UL
#define RF24_PBE_EVT1_PBEGPI2_M                  0x00000004UL
// enums for bitfield EVT1_PBEGPI2 (width: 1)UL
#define PBE_EVT1_PBEGPI2_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI2_ONE                         0x1UL
// bitfield: EVT1_PBEGPI1
#define PBE_EVT1_PBEGPI1                             1UL
#define RF24_PBE_EVT1_PBEGPI1_S                  1UL
#define PBE_EVT1_PBEGPI1_BM                          0x00000002UL
#define RF24_PBE_EVT1_PBEGPI1_M                  0x00000002UL
// enums for bitfield EVT1_PBEGPI1 (width: 1)UL
#define PBE_EVT1_PBEGPI1_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI1_ONE                         0x1UL
// bitfield: EVT1_PBEGPI0
#define PBE_EVT1_PBEGPI0                             0UL
#define RF24_PBE_EVT1_PBEGPI0_S                  0UL
#define PBE_EVT1_PBEGPI0_BM                          0x00000001UL
#define RF24_PBE_EVT1_PBEGPI0_M                  0x00000001UL
// enums for bitfield EVT1_PBEGPI0 (width: 1)UL
#define PBE_EVT1_PBEGPI0_ZERO                        0x0UL
#define PBE_EVT1_PBEGPI0_ONE                         0x1UL
// --------------------------------------------------------------
// EVTMSK0
// 
#define PBE_EVTMSK0_ADR (PBE_BASE + 0x001CUL)
static volatile unsigned long* const SP_PBE_EVTMSK0 = (unsigned long*) PBE_EVTMSK0_ADR;
#define S_PBE_EVTMSK0 (*SP_PBE_EVTMSK0)
#define RF24_PBE_O_EVTMSK0                       28
// bitfield: EVTMSK0_MDMFAEMPTY
#define PBE_EVTMSK0_MDMFAEMPTY                       15UL
#define RF24_PBE_EVTMSK0_MDMFAEMPTY_S            15UL
#define PBE_EVTMSK0_MDMFAEMPTY_BM                    0x00008000UL
#define RF24_PBE_EVTMSK0_MDMFAEMPTY_M            0x00008000UL
// enums for bitfield EVTMSK0_MDMFAEMPTY (width: 1)UL
#define PBE_EVTMSK0_MDMFAEMPTY_DIS                   0x0UL
#define PBE_EVTMSK0_MDMFAEMPTY_EN                    0x1UL
// bitfield: EVTMSK0_S2RSTOP
#define PBE_EVTMSK0_S2RSTOP                          14UL
#define RF24_PBE_EVTMSK0_S2RSTOP_S               14UL
#define PBE_EVTMSK0_S2RSTOP_BM                       0x00004000UL
#define RF24_PBE_EVTMSK0_S2RSTOP_M               0x00004000UL
// enums for bitfield EVTMSK0_S2RSTOP (width: 1)UL
#define PBE_EVTMSK0_S2RSTOP_DIS                      0x0UL
#define PBE_EVTMSK0_S2RSTOP_EN                       0x1UL
// bitfield: EVTMSK0_FIFOERR
#define PBE_EVTMSK0_FIFOERR                          13UL
#define RF24_PBE_EVTMSK0_FIFOERR_S               13UL
#define PBE_EVTMSK0_FIFOERR_BM                       0x00002000UL
#define RF24_PBE_EVTMSK0_FIFOERR_M               0x00002000UL
// enums for bitfield EVTMSK0_FIFOERR (width: 1)UL
#define PBE_EVTMSK0_FIFOERR_DIS                      0x0UL
#define PBE_EVTMSK0_FIFOERR_EN                       0x1UL
// bitfield: EVTMSK0_MDMFAFULL
#define PBE_EVTMSK0_MDMFAFULL                        12UL
#define RF24_PBE_EVTMSK0_MDMFAFULL_S             12UL
#define PBE_EVTMSK0_MDMFAFULL_BM                     0x00001000UL
#define RF24_PBE_EVTMSK0_MDMFAFULL_M             0x00001000UL
// enums for bitfield EVTMSK0_MDMFAFULL (width: 1)UL
#define PBE_EVTMSK0_MDMFAFULL_DIS                    0x0UL
#define PBE_EVTMSK0_MDMFAFULL_EN                     0x1UL
// bitfield: EVTMSK0_SYSTCMP2
#define PBE_EVTMSK0_SYSTCMP2                         11UL
#define RF24_PBE_EVTMSK0_SYSTCMP2_S              11UL
#define PBE_EVTMSK0_SYSTCMP2_BM                      0x00000800UL
#define RF24_PBE_EVTMSK0_SYSTCMP2_M              0x00000800UL
// enums for bitfield EVTMSK0_SYSTCMP2 (width: 1)UL
#define PBE_EVTMSK0_SYSTCMP2_DIS                     0x0UL
#define PBE_EVTMSK0_SYSTCMP2_EN                      0x1UL
// bitfield: EVTMSK0_SYSTCMP1
#define PBE_EVTMSK0_SYSTCMP1                         10UL
#define RF24_PBE_EVTMSK0_SYSTCMP1_S              10UL
#define PBE_EVTMSK0_SYSTCMP1_BM                      0x00000400UL
#define RF24_PBE_EVTMSK0_SYSTCMP1_M              0x00000400UL
// enums for bitfield EVTMSK0_SYSTCMP1 (width: 1)UL
#define PBE_EVTMSK0_SYSTCMP1_DIS                     0x0UL
#define PBE_EVTMSK0_SYSTCMP1_EN                      0x1UL
// bitfield: EVTMSK0_SYSTCMP0
#define PBE_EVTMSK0_SYSTCMP0                         9UL
#define RF24_PBE_EVTMSK0_SYSTCMP0_S              9UL
#define PBE_EVTMSK0_SYSTCMP0_BM                      0x00000200UL
#define RF24_PBE_EVTMSK0_SYSTCMP0_M              0x00000200UL
// enums for bitfield EVTMSK0_SYSTCMP0 (width: 1)UL
#define PBE_EVTMSK0_SYSTCMP0_DIS                     0x0UL
#define PBE_EVTMSK0_SYSTCMP0_EN                      0x1UL
// bitfield: EVTMSK0_MDMMSGBOX
#define PBE_EVTMSK0_MDMMSGBOX                        8UL
#define RF24_PBE_EVTMSK0_MDMMSGBOX_S             8UL
#define PBE_EVTMSK0_MDMMSGBOX_BM                     0x00000100UL
#define RF24_PBE_EVTMSK0_MDMMSGBOX_M             0x00000100UL
// enums for bitfield EVTMSK0_MDMMSGBOX (width: 1)UL
#define PBE_EVTMSK0_MDMMSGBOX_DIS                    0x0UL
#define PBE_EVTMSK0_MDMMSGBOX_EN                     0x1UL
// bitfield: EVTMSK0_RFEMSGBOX
#define PBE_EVTMSK0_RFEMSGBOX                        7UL
#define RF24_PBE_EVTMSK0_RFEMSGBOX_S             7UL
#define PBE_EVTMSK0_RFEMSGBOX_BM                     0x00000080UL
#define RF24_PBE_EVTMSK0_RFEMSGBOX_M             0x00000080UL
// enums for bitfield EVTMSK0_RFEMSGBOX (width: 1)UL
#define PBE_EVTMSK0_RFEMSGBOX_DIS                    0x0UL
#define PBE_EVTMSK0_RFEMSGBOX_EN                     0x1UL
// bitfield: EVTMSK0_RFEDAT
#define PBE_EVTMSK0_RFEDAT                           6UL
#define RF24_PBE_EVTMSK0_RFEDAT_S                6UL
#define PBE_EVTMSK0_RFEDAT_BM                        0x00000040UL
#define RF24_PBE_EVTMSK0_RFEDAT_M                0x00000040UL
// enums for bitfield EVTMSK0_RFEDAT (width: 1)UL
#define PBE_EVTMSK0_RFEDAT_DIS                       0x0UL
#define PBE_EVTMSK0_RFEDAT_EN                        0x1UL
// bitfield: EVTMSK0_RFECMD
#define PBE_EVTMSK0_RFECMD                           5UL
#define RF24_PBE_EVTMSK0_RFECMD_S                5UL
#define PBE_EVTMSK0_RFECMD_BM                        0x00000020UL
#define RF24_PBE_EVTMSK0_RFECMD_M                0x00000020UL
// enums for bitfield EVTMSK0_RFECMD (width: 1)UL
#define PBE_EVTMSK0_RFECMD_DIS                       0x0UL
#define PBE_EVTMSK0_RFECMD_EN                        0x1UL
// bitfield: EVTMSK0_MDMDAT
#define PBE_EVTMSK0_MDMDAT                           4UL
#define RF24_PBE_EVTMSK0_MDMDAT_S                4UL
#define PBE_EVTMSK0_MDMDAT_BM                        0x00000010UL
#define RF24_PBE_EVTMSK0_MDMDAT_M                0x00000010UL
// enums for bitfield EVTMSK0_MDMDAT (width: 1)UL
#define PBE_EVTMSK0_MDMDAT_DIS                       0x0UL
#define PBE_EVTMSK0_MDMDAT_EN                        0x1UL
// bitfield: EVTMSK0_MDMCMD
#define PBE_EVTMSK0_MDMCMD                           3UL
#define RF24_PBE_EVTMSK0_MDMCMD_S                3UL
#define PBE_EVTMSK0_MDMCMD_BM                        0x00000008UL
#define RF24_PBE_EVTMSK0_MDMCMD_M                0x00000008UL
// enums for bitfield EVTMSK0_MDMCMD (width: 1)UL
#define PBE_EVTMSK0_MDMCMD_DIS                       0x0UL
#define PBE_EVTMSK0_MDMCMD_EN                        0x1UL
// bitfield: EVTMSK0_TIMER1
#define PBE_EVTMSK0_TIMER1                           2UL
#define RF24_PBE_EVTMSK0_TIMER1_S                2UL
#define PBE_EVTMSK0_TIMER1_BM                        0x00000004UL
#define RF24_PBE_EVTMSK0_TIMER1_M                0x00000004UL
// enums for bitfield EVTMSK0_TIMER1 (width: 1)UL
#define PBE_EVTMSK0_TIMER1_DIS                       0x0UL
#define PBE_EVTMSK0_TIMER1_EN                        0x1UL
// bitfield: EVTMSK0_TIMER0
#define PBE_EVTMSK0_TIMER0                           1UL
#define RF24_PBE_EVTMSK0_TIMER0_S                1UL
#define PBE_EVTMSK0_TIMER0_BM                        0x00000002UL
#define RF24_PBE_EVTMSK0_TIMER0_M                0x00000002UL
// enums for bitfield EVTMSK0_TIMER0 (width: 1)UL
#define PBE_EVTMSK0_TIMER0_DIS                       0x0UL
#define PBE_EVTMSK0_TIMER0_EN                        0x1UL
// bitfield: EVTMSK0_PBEAPI
#define PBE_EVTMSK0_PBEAPI                           0UL
#define RF24_PBE_EVTMSK0_PBEAPI_S                0UL
#define PBE_EVTMSK0_PBEAPI_BM                        0x00000001UL
#define RF24_PBE_EVTMSK0_PBEAPI_M                0x00000001UL
// enums for bitfield EVTMSK0_PBEAPI (width: 1)UL
#define PBE_EVTMSK0_PBEAPI_DIS                       0x0UL
#define PBE_EVTMSK0_PBEAPI_EN                        0x1UL
// --------------------------------------------------------------
// EVTMSK1
// 
#define PBE_EVTMSK1_ADR (PBE_BASE + 0x0020UL)
static volatile unsigned long* const SP_PBE_EVTMSK1 = (unsigned long*) PBE_EVTMSK1_ADR;
#define S_PBE_EVTMSK1 (*SP_PBE_EVTMSK1)
#define RF24_PBE_O_EVTMSK1                       32
// bitfield: EVTMSK1_TXRDBTHR
#define PBE_EVTMSK1_TXRDBTHR                         12UL
#define RF24_PBE_EVTMSK1_TXRDBTHR_S              12UL
#define PBE_EVTMSK1_TXRDBTHR_BM                      0x00001000UL
#define RF24_PBE_EVTMSK1_TXRDBTHR_M              0x00001000UL
// enums for bitfield EVTMSK1_TXRDBTHR (width: 1)UL
#define PBE_EVTMSK1_TXRDBTHR_DIS                     0x0UL
#define PBE_EVTMSK1_TXRDBTHR_EN                      0x1UL
// bitfield: EVTMSK1_TXWRBTHR
#define PBE_EVTMSK1_TXWRBTHR                         11UL
#define RF24_PBE_EVTMSK1_TXWRBTHR_S              11UL
#define PBE_EVTMSK1_TXWRBTHR_BM                      0x00000800UL
#define RF24_PBE_EVTMSK1_TXWRBTHR_M              0x00000800UL
// enums for bitfield EVTMSK1_TXWRBTHR (width: 1)UL
#define PBE_EVTMSK1_TXWRBTHR_DIS                     0x0UL
#define PBE_EVTMSK1_TXWRBTHR_EN                      0x1UL
// bitfield: EVTMSK1_RXRDBTHR
#define PBE_EVTMSK1_RXRDBTHR                         10UL
#define RF24_PBE_EVTMSK1_RXRDBTHR_S              10UL
#define PBE_EVTMSK1_RXRDBTHR_BM                      0x00000400UL
#define RF24_PBE_EVTMSK1_RXRDBTHR_M              0x00000400UL
// enums for bitfield EVTMSK1_RXRDBTHR (width: 1)UL
#define PBE_EVTMSK1_RXRDBTHR_DIS                     0x0UL
#define PBE_EVTMSK1_RXRDBTHR_EN                      0x1UL
// bitfield: EVTMSK1_RXWRBTHR
#define PBE_EVTMSK1_RXWRBTHR                         9UL
#define RF24_PBE_EVTMSK1_RXWRBTHR_S              9UL
#define PBE_EVTMSK1_RXWRBTHR_BM                      0x00000200UL
#define RF24_PBE_EVTMSK1_RXWRBTHR_M              0x00000200UL
// enums for bitfield EVTMSK1_RXWRBTHR (width: 1)UL
#define PBE_EVTMSK1_RXWRBTHR_DIS                     0x0UL
#define PBE_EVTMSK1_RXWRBTHR_EN                      0x1UL
// bitfield: EVTMSK1_MDMPROG
#define PBE_EVTMSK1_MDMPROG                          8UL
#define RF24_PBE_EVTMSK1_MDMPROG_S               8UL
#define PBE_EVTMSK1_MDMPROG_BM                       0x00000100UL
#define RF24_PBE_EVTMSK1_MDMPROG_M               0x00000100UL
// enums for bitfield EVTMSK1_MDMPROG (width: 1)UL
#define PBE_EVTMSK1_MDMPROG_DIS                      0x0UL
#define PBE_EVTMSK1_MDMPROG_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI7
#define PBE_EVTMSK1_PBEGPI7                          7UL
#define RF24_PBE_EVTMSK1_PBEGPI7_S               7UL
#define PBE_EVTMSK1_PBEGPI7_BM                       0x00000080UL
#define RF24_PBE_EVTMSK1_PBEGPI7_M               0x00000080UL
// enums for bitfield EVTMSK1_PBEGPI7 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI7_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI7_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI6
#define PBE_EVTMSK1_PBEGPI6                          6UL
#define RF24_PBE_EVTMSK1_PBEGPI6_S               6UL
#define PBE_EVTMSK1_PBEGPI6_BM                       0x00000040UL
#define RF24_PBE_EVTMSK1_PBEGPI6_M               0x00000040UL
// enums for bitfield EVTMSK1_PBEGPI6 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI6_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI6_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI5
#define PBE_EVTMSK1_PBEGPI5                          5UL
#define RF24_PBE_EVTMSK1_PBEGPI5_S               5UL
#define PBE_EVTMSK1_PBEGPI5_BM                       0x00000020UL
#define RF24_PBE_EVTMSK1_PBEGPI5_M               0x00000020UL
// enums for bitfield EVTMSK1_PBEGPI5 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI5_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI5_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI4
#define PBE_EVTMSK1_PBEGPI4                          4UL
#define RF24_PBE_EVTMSK1_PBEGPI4_S               4UL
#define PBE_EVTMSK1_PBEGPI4_BM                       0x00000010UL
#define RF24_PBE_EVTMSK1_PBEGPI4_M               0x00000010UL
// enums for bitfield EVTMSK1_PBEGPI4 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI4_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI4_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI3
#define PBE_EVTMSK1_PBEGPI3                          3UL
#define RF24_PBE_EVTMSK1_PBEGPI3_S               3UL
#define PBE_EVTMSK1_PBEGPI3_BM                       0x00000008UL
#define RF24_PBE_EVTMSK1_PBEGPI3_M               0x00000008UL
// enums for bitfield EVTMSK1_PBEGPI3 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI3_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI3_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI2
#define PBE_EVTMSK1_PBEGPI2                          2UL
#define RF24_PBE_EVTMSK1_PBEGPI2_S               2UL
#define PBE_EVTMSK1_PBEGPI2_BM                       0x00000004UL
#define RF24_PBE_EVTMSK1_PBEGPI2_M               0x00000004UL
// enums for bitfield EVTMSK1_PBEGPI2 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI2_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI2_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI1
#define PBE_EVTMSK1_PBEGPI1                          1UL
#define RF24_PBE_EVTMSK1_PBEGPI1_S               1UL
#define PBE_EVTMSK1_PBEGPI1_BM                       0x00000002UL
#define RF24_PBE_EVTMSK1_PBEGPI1_M               0x00000002UL
// enums for bitfield EVTMSK1_PBEGPI1 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI1_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI1_EN                       0x1UL
// bitfield: EVTMSK1_PBEGPI0
#define PBE_EVTMSK1_PBEGPI0                          0UL
#define RF24_PBE_EVTMSK1_PBEGPI0_S               0UL
#define PBE_EVTMSK1_PBEGPI0_BM                       0x00000001UL
#define RF24_PBE_EVTMSK1_PBEGPI0_M               0x00000001UL
// enums for bitfield EVTMSK1_PBEGPI0 (width: 1)UL
#define PBE_EVTMSK1_PBEGPI0_DIS                      0x0UL
#define PBE_EVTMSK1_PBEGPI0_EN                       0x1UL
// --------------------------------------------------------------
// EVTCLR0
// 
#define PBE_EVTCLR0_ADR (PBE_BASE + 0x0024UL)
static volatile unsigned long* const SP_PBE_EVTCLR0 = (unsigned long*) PBE_EVTCLR0_ADR;
#define S_PBE_EVTCLR0 (*SP_PBE_EVTCLR0)
#define RF24_PBE_O_EVTCLR0                       36
// bitfield: EVTCLR0_MDMFAEMPTY
#define PBE_EVTCLR0_MDMFAEMPTY                       15UL
#define RF24_PBE_EVTCLR0_MDMFAEMPTY_S            15UL
#define PBE_EVTCLR0_MDMFAEMPTY_BM                    0x00008000UL
#define RF24_PBE_EVTCLR0_MDMFAEMPTY_M            0x00008000UL
// enums for bitfield EVTCLR0_MDMFAEMPTY (width: 1)UL
#define PBE_EVTCLR0_MDMFAEMPTY_RETAIN                0x0UL
#define PBE_EVTCLR0_MDMFAEMPTY_CLEAR                 0x1UL
// bitfield: EVTCLR0_S2RSTOP
#define PBE_EVTCLR0_S2RSTOP                          14UL
#define RF24_PBE_EVTCLR0_S2RSTOP_S               14UL
#define PBE_EVTCLR0_S2RSTOP_BM                       0x00004000UL
#define RF24_PBE_EVTCLR0_S2RSTOP_M               0x00004000UL
// enums for bitfield EVTCLR0_S2RSTOP (width: 1)UL
#define PBE_EVTCLR0_S2RSTOP_RETAIN                   0x0UL
#define PBE_EVTCLR0_S2RSTOP_CLEAR                    0x1UL
// bitfield: EVTCLR0_FIFOERR
#define PBE_EVTCLR0_FIFOERR                          13UL
#define RF24_PBE_EVTCLR0_FIFOERR_S               13UL
#define PBE_EVTCLR0_FIFOERR_BM                       0x00002000UL
#define RF24_PBE_EVTCLR0_FIFOERR_M               0x00002000UL
// enums for bitfield EVTCLR0_FIFOERR (width: 1)UL
#define PBE_EVTCLR0_FIFOERR_RETAIN                   0x0UL
#define PBE_EVTCLR0_FIFOERR_CLEAR                    0x1UL
// bitfield: EVTCLR0_MDMFAFULL
#define PBE_EVTCLR0_MDMFAFULL                        12UL
#define RF24_PBE_EVTCLR0_MDMFAFULL_S             12UL
#define PBE_EVTCLR0_MDMFAFULL_BM                     0x00001000UL
#define RF24_PBE_EVTCLR0_MDMFAFULL_M             0x00001000UL
// enums for bitfield EVTCLR0_MDMFAFULL (width: 1)UL
#define PBE_EVTCLR0_MDMFAFULL_RETAIN                 0x0UL
#define PBE_EVTCLR0_MDMFAFULL_CLEAR                  0x1UL
// bitfield: EVTCLR0_SYSTCMP2
#define PBE_EVTCLR0_SYSTCMP2                         11UL
#define RF24_PBE_EVTCLR0_SYSTCMP2_S              11UL
#define PBE_EVTCLR0_SYSTCMP2_BM                      0x00000800UL
#define RF24_PBE_EVTCLR0_SYSTCMP2_M              0x00000800UL
// enums for bitfield EVTCLR0_SYSTCMP2 (width: 1)UL
#define PBE_EVTCLR0_SYSTCMP2_RETAIN                  0x0UL
#define PBE_EVTCLR0_SYSTCMP2_CLEAR                   0x1UL
// bitfield: EVTCLR0_SYSTCMP1
#define PBE_EVTCLR0_SYSTCMP1                         10UL
#define RF24_PBE_EVTCLR0_SYSTCMP1_S              10UL
#define PBE_EVTCLR0_SYSTCMP1_BM                      0x00000400UL
#define RF24_PBE_EVTCLR0_SYSTCMP1_M              0x00000400UL
// enums for bitfield EVTCLR0_SYSTCMP1 (width: 1)UL
#define PBE_EVTCLR0_SYSTCMP1_RETAIN                  0x0UL
#define PBE_EVTCLR0_SYSTCMP1_CLEAR                   0x1UL
// bitfield: EVTCLR0_SYSTCMP0
#define PBE_EVTCLR0_SYSTCMP0                         9UL
#define RF24_PBE_EVTCLR0_SYSTCMP0_S              9UL
#define PBE_EVTCLR0_SYSTCMP0_BM                      0x00000200UL
#define RF24_PBE_EVTCLR0_SYSTCMP0_M              0x00000200UL
// enums for bitfield EVTCLR0_SYSTCMP0 (width: 1)UL
#define PBE_EVTCLR0_SYSTCMP0_RETAIN                  0x0UL
#define PBE_EVTCLR0_SYSTCMP0_CLEAR                   0x1UL
// bitfield: EVTCLR0_MDMMSGBOX
#define PBE_EVTCLR0_MDMMSGBOX                        8UL
#define RF24_PBE_EVTCLR0_MDMMSGBOX_S             8UL
#define PBE_EVTCLR0_MDMMSGBOX_BM                     0x00000100UL
#define RF24_PBE_EVTCLR0_MDMMSGBOX_M             0x00000100UL
// enums for bitfield EVTCLR0_MDMMSGBOX (width: 1)UL
#define PBE_EVTCLR0_MDMMSGBOX_RETAIN                 0x0UL
#define PBE_EVTCLR0_MDMMSGBOX_CLEAR                  0x1UL
// bitfield: EVTCLR0_RFEMSGBOX
#define PBE_EVTCLR0_RFEMSGBOX                        7UL
#define RF24_PBE_EVTCLR0_RFEMSGBOX_S             7UL
#define PBE_EVTCLR0_RFEMSGBOX_BM                     0x00000080UL
#define RF24_PBE_EVTCLR0_RFEMSGBOX_M             0x00000080UL
// enums for bitfield EVTCLR0_RFEMSGBOX (width: 1)UL
#define PBE_EVTCLR0_RFEMSGBOX_RETAIN                 0x0UL
#define PBE_EVTCLR0_RFEMSGBOX_CLEAR                  0x1UL
// bitfield: EVTCLR0_RFEDAT
#define PBE_EVTCLR0_RFEDAT                           6UL
#define RF24_PBE_EVTCLR0_RFEDAT_S                6UL
#define PBE_EVTCLR0_RFEDAT_BM                        0x00000040UL
#define RF24_PBE_EVTCLR0_RFEDAT_M                0x00000040UL
// enums for bitfield EVTCLR0_RFEDAT (width: 1)UL
#define PBE_EVTCLR0_RFEDAT_RETAIN                    0x0UL
#define PBE_EVTCLR0_RFEDAT_CLEAR                     0x1UL
// bitfield: EVTCLR0_RFECMD
#define PBE_EVTCLR0_RFECMD                           5UL
#define RF24_PBE_EVTCLR0_RFECMD_S                5UL
#define PBE_EVTCLR0_RFECMD_BM                        0x00000020UL
#define RF24_PBE_EVTCLR0_RFECMD_M                0x00000020UL
// enums for bitfield EVTCLR0_RFECMD (width: 1)UL
#define PBE_EVTCLR0_RFECMD_RETAIN                    0x0UL
#define PBE_EVTCLR0_RFECMD_CLEAR                     0x1UL
// bitfield: EVTCLR0_MDMDAT
#define PBE_EVTCLR0_MDMDAT                           4UL
#define RF24_PBE_EVTCLR0_MDMDAT_S                4UL
#define PBE_EVTCLR0_MDMDAT_BM                        0x00000010UL
#define RF24_PBE_EVTCLR0_MDMDAT_M                0x00000010UL
// enums for bitfield EVTCLR0_MDMDAT (width: 1)UL
#define PBE_EVTCLR0_MDMDAT_RETAIN                    0x0UL
#define PBE_EVTCLR0_MDMDAT_CLEAR                     0x1UL
// bitfield: EVTCLR0_MDMCMD
#define PBE_EVTCLR0_MDMCMD                           3UL
#define RF24_PBE_EVTCLR0_MDMCMD_S                3UL
#define PBE_EVTCLR0_MDMCMD_BM                        0x00000008UL
#define RF24_PBE_EVTCLR0_MDMCMD_M                0x00000008UL
// enums for bitfield EVTCLR0_MDMCMD (width: 1)UL
#define PBE_EVTCLR0_MDMCMD_RETAIN                    0x0UL
#define PBE_EVTCLR0_MDMCMD_CLEAR                     0x1UL
// bitfield: EVTCLR0_TIMER1
#define PBE_EVTCLR0_TIMER1                           2UL
#define RF24_PBE_EVTCLR0_TIMER1_S                2UL
#define PBE_EVTCLR0_TIMER1_BM                        0x00000004UL
#define RF24_PBE_EVTCLR0_TIMER1_M                0x00000004UL
// enums for bitfield EVTCLR0_TIMER1 (width: 1)UL
#define PBE_EVTCLR0_TIMER1_RETAIN                    0x0UL
#define PBE_EVTCLR0_TIMER1_CLEAR                     0x1UL
// bitfield: EVTCLR0_TIMER0
#define PBE_EVTCLR0_TIMER0                           1UL
#define RF24_PBE_EVTCLR0_TIMER0_S                1UL
#define PBE_EVTCLR0_TIMER0_BM                        0x00000002UL
#define RF24_PBE_EVTCLR0_TIMER0_M                0x00000002UL
// enums for bitfield EVTCLR0_TIMER0 (width: 1)UL
#define PBE_EVTCLR0_TIMER0_RETAIN                    0x0UL
#define PBE_EVTCLR0_TIMER0_CLEAR                     0x1UL
// bitfield: EVTCLR0_PBEAPI
#define PBE_EVTCLR0_PBEAPI                           0UL
#define RF24_PBE_EVTCLR0_PBEAPI_S                0UL
#define PBE_EVTCLR0_PBEAPI_BM                        0x00000001UL
#define RF24_PBE_EVTCLR0_PBEAPI_M                0x00000001UL
// enums for bitfield EVTCLR0_PBEAPI (width: 1)UL
#define PBE_EVTCLR0_PBEAPI_RETAIN                    0x0UL
#define PBE_EVTCLR0_PBEAPI_CLEAR                     0x1UL
// --------------------------------------------------------------
// EVTCLR1
// 
#define PBE_EVTCLR1_ADR (PBE_BASE + 0x0028UL)
static volatile unsigned long* const SP_PBE_EVTCLR1 = (unsigned long*) PBE_EVTCLR1_ADR;
#define S_PBE_EVTCLR1 (*SP_PBE_EVTCLR1)
#define RF24_PBE_O_EVTCLR1                       40
// bitfield: EVTCLR1_TXRDBTHR
#define PBE_EVTCLR1_TXRDBTHR                         12UL
#define RF24_PBE_EVTCLR1_TXRDBTHR_S              12UL
#define PBE_EVTCLR1_TXRDBTHR_BM                      0x00001000UL
#define RF24_PBE_EVTCLR1_TXRDBTHR_M              0x00001000UL
// enums for bitfield EVTCLR1_TXRDBTHR (width: 1)UL
#define PBE_EVTCLR1_TXRDBTHR_RETAIN                  0x0UL
#define PBE_EVTCLR1_TXRDBTHR_CLEAR                   0x1UL
// bitfield: EVTCLR1_TXWRBTHR
#define PBE_EVTCLR1_TXWRBTHR                         11UL
#define RF24_PBE_EVTCLR1_TXWRBTHR_S              11UL
#define PBE_EVTCLR1_TXWRBTHR_BM                      0x00000800UL
#define RF24_PBE_EVTCLR1_TXWRBTHR_M              0x00000800UL
// enums for bitfield EVTCLR1_TXWRBTHR (width: 1)UL
#define PBE_EVTCLR1_TXWRBTHR_RETAIN                  0x0UL
#define PBE_EVTCLR1_TXWRBTHR_CLEAR                   0x1UL
// bitfield: EVTCLR1_RXRDBTHR
#define PBE_EVTCLR1_RXRDBTHR                         10UL
#define RF24_PBE_EVTCLR1_RXRDBTHR_S              10UL
#define PBE_EVTCLR1_RXRDBTHR_BM                      0x00000400UL
#define RF24_PBE_EVTCLR1_RXRDBTHR_M              0x00000400UL
// enums for bitfield EVTCLR1_RXRDBTHR (width: 1)UL
#define PBE_EVTCLR1_RXRDBTHR_RETAIN                  0x0UL
#define PBE_EVTCLR1_RXRDBTHR_CLEAR                   0x1UL
// bitfield: EVTCLR1_RXWRBTHR
#define PBE_EVTCLR1_RXWRBTHR                         9UL
#define RF24_PBE_EVTCLR1_RXWRBTHR_S              9UL
#define PBE_EVTCLR1_RXWRBTHR_BM                      0x00000200UL
#define RF24_PBE_EVTCLR1_RXWRBTHR_M              0x00000200UL
// enums for bitfield EVTCLR1_RXWRBTHR (width: 1)UL
#define PBE_EVTCLR1_RXWRBTHR_RETAIN                  0x0UL
#define PBE_EVTCLR1_RXWRBTHR_CLEAR                   0x1UL
// bitfield: EVTCLR1_MDMPROG
#define PBE_EVTCLR1_MDMPROG                          8UL
#define RF24_PBE_EVTCLR1_MDMPROG_S               8UL
#define PBE_EVTCLR1_MDMPROG_BM                       0x00000100UL
#define RF24_PBE_EVTCLR1_MDMPROG_M               0x00000100UL
// enums for bitfield EVTCLR1_MDMPROG (width: 1)UL
#define PBE_EVTCLR1_MDMPROG_RETAIN                   0x0UL
#define PBE_EVTCLR1_MDMPROG_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI7
#define PBE_EVTCLR1_PBEGPI7                          7UL
#define RF24_PBE_EVTCLR1_PBEGPI7_S               7UL
#define PBE_EVTCLR1_PBEGPI7_BM                       0x00000080UL
#define RF24_PBE_EVTCLR1_PBEGPI7_M               0x00000080UL
// enums for bitfield EVTCLR1_PBEGPI7 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI7_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI7_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI6
#define PBE_EVTCLR1_PBEGPI6                          6UL
#define RF24_PBE_EVTCLR1_PBEGPI6_S               6UL
#define PBE_EVTCLR1_PBEGPI6_BM                       0x00000040UL
#define RF24_PBE_EVTCLR1_PBEGPI6_M               0x00000040UL
// enums for bitfield EVTCLR1_PBEGPI6 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI6_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI6_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI5
#define PBE_EVTCLR1_PBEGPI5                          5UL
#define RF24_PBE_EVTCLR1_PBEGPI5_S               5UL
#define PBE_EVTCLR1_PBEGPI5_BM                       0x00000020UL
#define RF24_PBE_EVTCLR1_PBEGPI5_M               0x00000020UL
// enums for bitfield EVTCLR1_PBEGPI5 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI5_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI5_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI4
#define PBE_EVTCLR1_PBEGPI4                          4UL
#define RF24_PBE_EVTCLR1_PBEGPI4_S               4UL
#define PBE_EVTCLR1_PBEGPI4_BM                       0x00000010UL
#define RF24_PBE_EVTCLR1_PBEGPI4_M               0x00000010UL
// enums for bitfield EVTCLR1_PBEGPI4 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI4_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI4_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI3
#define PBE_EVTCLR1_PBEGPI3                          3UL
#define RF24_PBE_EVTCLR1_PBEGPI3_S               3UL
#define PBE_EVTCLR1_PBEGPI3_BM                       0x00000008UL
#define RF24_PBE_EVTCLR1_PBEGPI3_M               0x00000008UL
// enums for bitfield EVTCLR1_PBEGPI3 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI3_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI3_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI2
#define PBE_EVTCLR1_PBEGPI2                          2UL
#define RF24_PBE_EVTCLR1_PBEGPI2_S               2UL
#define PBE_EVTCLR1_PBEGPI2_BM                       0x00000004UL
#define RF24_PBE_EVTCLR1_PBEGPI2_M               0x00000004UL
// enums for bitfield EVTCLR1_PBEGPI2 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI2_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI2_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI1
#define PBE_EVTCLR1_PBEGPI1                          1UL
#define RF24_PBE_EVTCLR1_PBEGPI1_S               1UL
#define PBE_EVTCLR1_PBEGPI1_BM                       0x00000002UL
#define RF24_PBE_EVTCLR1_PBEGPI1_M               0x00000002UL
// enums for bitfield EVTCLR1_PBEGPI1 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI1_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI1_CLEAR                    0x1UL
// bitfield: EVTCLR1_PBEGPI0
#define PBE_EVTCLR1_PBEGPI0                          0UL
#define RF24_PBE_EVTCLR1_PBEGPI0_S               0UL
#define PBE_EVTCLR1_PBEGPI0_BM                       0x00000001UL
#define RF24_PBE_EVTCLR1_PBEGPI0_M               0x00000001UL
// enums for bitfield EVTCLR1_PBEGPI0 (width: 1)UL
#define PBE_EVTCLR1_PBEGPI0_RETAIN                   0x0UL
#define PBE_EVTCLR1_PBEGPI0_CLEAR                    0x1UL
// --------------------------------------------------------------
// PDREQ
// 
#define PBE_PDREQ_ADR (PBE_BASE + 0x002CUL)
static volatile unsigned long* const SP_PBE_PDREQ = (unsigned long*) PBE_PDREQ_ADR;
#define S_PBE_PDREQ (*SP_PBE_PDREQ)
#define RF24_PBE_O_PDREQ                         44
// bitfield: PDREQ_TOPSMPDREQ
#define PBE_PDREQ_TOPSMPDREQ                         0UL
#define RF24_PBE_PDREQ_TOPSMPDREQ_S              0UL
#define PBE_PDREQ_TOPSMPDREQ_BM                      0x00000001UL
#define RF24_PBE_PDREQ_TOPSMPDREQ_M              0x00000001UL
// enums for bitfield PDREQ_TOPSMPDREQ (width: 1)UL
#define PBE_PDREQ_TOPSMPDREQ_OFF                     0x0UL
#define PBE_PDREQ_TOPSMPDREQ_ON                      0x1UL
// --------------------------------------------------------------
// API
// 
#define PBE_API_ADR (PBE_BASE + 0x0030UL)
static volatile unsigned long* const SP_PBE_API = (unsigned long*) PBE_API_ADR;
#define S_PBE_API (*SP_PBE_API)
#define RF24_PBE_O_API                           48
// bitfield: API_PBECMD
#define PBE_API_PBECMD                               0UL
#define RF24_PBE_API_PBECMD_S                    0UL
#define PBE_API_PBECMD_BM                            0x0000001FUL
#define RF24_PBE_API_PBECMD_M                    0x0000001FUL
// enums for bitfield API_PBECMD (width: 5)UL
#define PBE_API_PBECMD_ALLZEROS                      0x00UL
#define PBE_API_PBECMD_ALLONES                       0x1FUL
// --------------------------------------------------------------
// MCEDATOUT0
// 
#define PBE_MCEDATOUT0_ADR (PBE_BASE + 0x0034UL)
static volatile unsigned long* const SP_PBE_MCEDATOUT0 = (unsigned long*) PBE_MCEDATOUT0_ADR;
#define S_PBE_MCEDATOUT0 (*SP_PBE_MCEDATOUT0)
#define RF24_PBE_O_MCEDATOUT0                    52
// bitfield: MCEDATOUT0_VAL
#define PBE_MCEDATOUT0_VAL                           0UL
#define RF24_PBE_MCEDATOUT0_VAL_S                0UL
#define PBE_MCEDATOUT0_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_MCEDATOUT0_VAL_M                0x0000FFFFUL
// enums for bitfield MCEDATOUT0_VAL (width: 16)UL
#define PBE_MCEDATOUT0_VAL_ALLZEROS                  0x0000UL
#define PBE_MCEDATOUT0_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// MCEDATIN0
// 
#define PBE_MCEDATIN0_ADR (PBE_BASE + 0x0038UL)
static volatile unsigned long* const SP_PBE_MCEDATIN0 = (unsigned long*) PBE_MCEDATIN0_ADR;
#define S_PBE_MCEDATIN0 (*SP_PBE_MCEDATIN0)
#define RF24_PBE_O_MCEDATIN0                     56
// bitfield: MCEDATIN0_VAL
#define PBE_MCEDATIN0_VAL                            0UL
#define RF24_PBE_MCEDATIN0_VAL_S                 0UL
#define PBE_MCEDATIN0_VAL_BM                         0x0000FFFFUL
#define RF24_PBE_MCEDATIN0_VAL_M                 0x0000FFFFUL
// enums for bitfield MCEDATIN0_VAL (width: 16)UL
#define PBE_MCEDATIN0_VAL_ALLZEROS                   0x0000UL
#define PBE_MCEDATIN0_VAL_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// MCECMDOUT
// 
#define PBE_MCECMDOUT_ADR (PBE_BASE + 0x003CUL)
static volatile unsigned long* const SP_PBE_MCECMDOUT = (unsigned long*) PBE_MCECMDOUT_ADR;
#define S_PBE_MCECMDOUT (*SP_PBE_MCECMDOUT)
#define RF24_PBE_O_MCECMDOUT                     60
// bitfield: MCECMDOUT_VAL
#define PBE_MCECMDOUT_VAL                            0UL
#define RF24_PBE_MCECMDOUT_VAL_S                 0UL
#define PBE_MCECMDOUT_VAL_BM                         0x0000000FUL
#define RF24_PBE_MCECMDOUT_VAL_M                 0x0000000FUL
// enums for bitfield MCECMDOUT_VAL (width: 4)UL
#define PBE_MCECMDOUT_VAL_ALLZEROS                   0x0UL
#define PBE_MCECMDOUT_VAL_ALLONES                    0xFUL
// --------------------------------------------------------------
// MCECMDIN
// 
#define PBE_MCECMDIN_ADR (PBE_BASE + 0x0040UL)
static volatile unsigned long* const SP_PBE_MCECMDIN = (unsigned long*) PBE_MCECMDIN_ADR;
#define S_PBE_MCECMDIN (*SP_PBE_MCECMDIN)
#define RF24_PBE_O_MCECMDIN                      64
// bitfield: MCECMDIN_VAL
#define PBE_MCECMDIN_VAL                             0UL
#define RF24_PBE_MCECMDIN_VAL_S                  0UL
#define PBE_MCECMDIN_VAL_BM                          0x0000000FUL
#define RF24_PBE_MCECMDIN_VAL_M                  0x0000000FUL
// enums for bitfield MCECMDIN_VAL (width: 4)UL
#define PBE_MCECMDIN_VAL_ALLZEROS                    0x0UL
#define PBE_MCECMDIN_VAL_ALLONES                     0xFUL
// --------------------------------------------------------------
// MDMAPI
// 
#define PBE_MDMAPI_ADR (PBE_BASE + 0x0044UL)
static volatile unsigned long* const SP_PBE_MDMAPI = (unsigned long*) PBE_MDMAPI_ADR;
#define S_PBE_MDMAPI (*SP_PBE_MDMAPI)
#define RF24_PBE_O_MDMAPI                        68
// bitfield: MDMAPI_PROTOCOLID
#define PBE_MDMAPI_PROTOCOLID                        4UL
#define RF24_PBE_MDMAPI_PROTOCOLID_S             4UL
#define PBE_MDMAPI_PROTOCOLID_BM                     0x000000F0UL
#define RF24_PBE_MDMAPI_PROTOCOLID_M             0x000000F0UL
// enums for bitfield MDMAPI_PROTOCOLID (width: 4)UL
#define PBE_MDMAPI_PROTOCOLID_ALLZEROS               0x0UL
#define PBE_MDMAPI_PROTOCOLID_ALLONES                0xFUL
// bitfield: MDMAPI_MDMCMD
#define PBE_MDMAPI_MDMCMD                            0UL
#define RF24_PBE_MDMAPI_MDMCMD_S                 0UL
#define PBE_MDMAPI_MDMCMD_BM                         0x0000000FUL
#define RF24_PBE_MDMAPI_MDMCMD_M                 0x0000000FUL
// enums for bitfield MDMAPI_MDMCMD (width: 4)UL
#define PBE_MDMAPI_MDMCMD_ALLZEROS                   0x0UL
#define PBE_MDMAPI_MDMCMD_ALLONES                    0xFUL
// --------------------------------------------------------------
// MDMMSGBOX
// 
#define PBE_MDMMSGBOX_ADR (PBE_BASE + 0x0048UL)
static volatile unsigned long* const SP_PBE_MDMMSGBOX = (unsigned long*) PBE_MDMMSGBOX_ADR;
#define S_PBE_MDMMSGBOX (*SP_PBE_MDMMSGBOX)
#define RF24_PBE_O_MDMMSGBOX                     72
// bitfield: MDMMSGBOX_VALUE
#define PBE_MDMMSGBOX_VALUE                          0UL
#define RF24_PBE_MDMMSGBOX_VALUE_S               0UL
#define PBE_MDMMSGBOX_VALUE_BM                       0x000000FFUL
#define RF24_PBE_MDMMSGBOX_VALUE_M               0x000000FFUL
// enums for bitfield MDMMSGBOX_VALUE (width: 8)UL
#define PBE_MDMMSGBOX_VALUE_ALLZEROS                 0x00UL
#define PBE_MDMMSGBOX_VALUE_ALLONES                  0xFFUL
// --------------------------------------------------------------
// FREQ
// 
#define PBE_FREQ_ADR (PBE_BASE + 0x004CUL)
static volatile unsigned long* const SP_PBE_FREQ = (unsigned long*) PBE_FREQ_ADR;
#define S_PBE_FREQ (*SP_PBE_FREQ)
#define RF24_PBE_O_FREQ                          76
// bitfield: FREQ_OFFSET
#define PBE_FREQ_OFFSET                              0UL
#define RF24_PBE_FREQ_OFFSET_S                   0UL
#define PBE_FREQ_OFFSET_BM                           0x0000FFFFUL
#define RF24_PBE_FREQ_OFFSET_M                   0x0000FFFFUL
// enums for bitfield FREQ_OFFSET (width: 16)UL
#define PBE_FREQ_OFFSET_ALLZEROS                     0x0000UL
#define PBE_FREQ_OFFSET_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// MDMLQI
// 
#define PBE_MDMLQI_ADR (PBE_BASE + 0x0050UL)
static volatile unsigned long* const SP_PBE_MDMLQI = (unsigned long*) PBE_MDMLQI_ADR;
#define S_PBE_MDMLQI (*SP_PBE_MDMLQI)
#define RF24_PBE_O_MDMLQI                        80
// bitfield: MDMLQI_VAL
#define PBE_MDMLQI_VAL                               0UL
#define RF24_PBE_MDMLQI_VAL_S                    0UL
#define PBE_MDMLQI_VAL_BM                            0x000000FFUL
#define RF24_PBE_MDMLQI_VAL_M                    0x000000FFUL
// enums for bitfield MDMLQI_VAL (width: 8)UL
#define PBE_MDMLQI_VAL_ALLZEROS                      0x00UL
#define PBE_MDMLQI_VAL_ALLONES                       0xFFUL
// --------------------------------------------------------------
// RFEDATOUT0
// 
#define PBE_RFEDATOUT0_ADR (PBE_BASE + 0x0054UL)
static volatile unsigned long* const SP_PBE_RFEDATOUT0 = (unsigned long*) PBE_RFEDATOUT0_ADR;
#define S_PBE_RFEDATOUT0 (*SP_PBE_RFEDATOUT0)
#define RF24_PBE_O_RFEDATOUT0                    84
// bitfield: RFEDATOUT0_VAL
#define PBE_RFEDATOUT0_VAL                           0UL
#define RF24_PBE_RFEDATOUT0_VAL_S                0UL
#define PBE_RFEDATOUT0_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_RFEDATOUT0_VAL_M                0x0000FFFFUL
// enums for bitfield RFEDATOUT0_VAL (width: 16)UL
#define PBE_RFEDATOUT0_VAL_ALLZEROS                  0x0000UL
#define PBE_RFEDATOUT0_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// RFEDATIN0
// 
#define PBE_RFEDATIN0_ADR (PBE_BASE + 0x0058UL)
static volatile unsigned long* const SP_PBE_RFEDATIN0 = (unsigned long*) PBE_RFEDATIN0_ADR;
#define S_PBE_RFEDATIN0 (*SP_PBE_RFEDATIN0)
#define RF24_PBE_O_RFEDATIN0                     88
// bitfield: RFEDATIN0_VAL
#define PBE_RFEDATIN0_VAL                            0UL
#define RF24_PBE_RFEDATIN0_VAL_S                 0UL
#define PBE_RFEDATIN0_VAL_BM                         0x0000FFFFUL
#define RF24_PBE_RFEDATIN0_VAL_M                 0x0000FFFFUL
// enums for bitfield RFEDATIN0_VAL (width: 16)UL
#define PBE_RFEDATIN0_VAL_ALLZEROS                   0x0000UL
#define PBE_RFEDATIN0_VAL_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// RFECMDOUT
// 
#define PBE_RFECMDOUT_ADR (PBE_BASE + 0x005CUL)
static volatile unsigned long* const SP_PBE_RFECMDOUT = (unsigned long*) PBE_RFECMDOUT_ADR;
#define S_PBE_RFECMDOUT (*SP_PBE_RFECMDOUT)
#define RF24_PBE_O_RFECMDOUT                     92
// bitfield: RFECMDOUT_VAL
#define PBE_RFECMDOUT_VAL                            0UL
#define RF24_PBE_RFECMDOUT_VAL_S                 0UL
#define PBE_RFECMDOUT_VAL_BM                         0x0000000FUL
#define RF24_PBE_RFECMDOUT_VAL_M                 0x0000000FUL
// enums for bitfield RFECMDOUT_VAL (width: 4)UL
#define PBE_RFECMDOUT_VAL_ALLZEROS                   0x0UL
#define PBE_RFECMDOUT_VAL_ALLONES                    0xFUL
// --------------------------------------------------------------
// RFECMDIN
// 
#define PBE_RFECMDIN_ADR (PBE_BASE + 0x0060UL)
static volatile unsigned long* const SP_PBE_RFECMDIN = (unsigned long*) PBE_RFECMDIN_ADR;
#define S_PBE_RFECMDIN (*SP_PBE_RFECMDIN)
#define RF24_PBE_O_RFECMDIN                      96
// bitfield: RFECMDIN_VAL
#define PBE_RFECMDIN_VAL                             0UL
#define RF24_PBE_RFECMDIN_VAL_S                  0UL
#define PBE_RFECMDIN_VAL_BM                          0x0000000FUL
#define RF24_PBE_RFECMDIN_VAL_M                  0x0000000FUL
// enums for bitfield RFECMDIN_VAL (width: 4)UL
#define PBE_RFECMDIN_VAL_ALLZEROS                    0x0UL
#define PBE_RFECMDIN_VAL_ALLONES                     0xFUL
// --------------------------------------------------------------
// RFEAPI
// 
#define PBE_RFEAPI_ADR (PBE_BASE + 0x0064UL)
static volatile unsigned long* const SP_PBE_RFEAPI = (unsigned long*) PBE_RFEAPI_ADR;
#define S_PBE_RFEAPI (*SP_PBE_RFEAPI)
#define RF24_PBE_O_RFEAPI                        100
// bitfield: RFEAPI_PROTOCOLID
#define PBE_RFEAPI_PROTOCOLID                        4UL
#define RF24_PBE_RFEAPI_PROTOCOLID_S             4UL
#define PBE_RFEAPI_PROTOCOLID_BM                     0x000000F0UL
#define RF24_PBE_RFEAPI_PROTOCOLID_M             0x000000F0UL
// enums for bitfield RFEAPI_PROTOCOLID (width: 4)UL
#define PBE_RFEAPI_PROTOCOLID_ALLZEROS               0x0UL
#define PBE_RFEAPI_PROTOCOLID_ALLONES                0xFUL
// bitfield: RFEAPI_RFECMD
#define PBE_RFEAPI_RFECMD                            0UL
#define RF24_PBE_RFEAPI_RFECMD_S                 0UL
#define PBE_RFEAPI_RFECMD_BM                         0x0000000FUL
#define RF24_PBE_RFEAPI_RFECMD_M                 0x0000000FUL
// enums for bitfield RFEAPI_RFECMD (width: 4)UL
#define PBE_RFEAPI_RFECMD_ALLZEROS                   0x0UL
#define PBE_RFEAPI_RFECMD_ALLONES                    0xFUL
// --------------------------------------------------------------
// RFECMDPAR0
// 
#define PBE_RFECMDPAR0_ADR (PBE_BASE + 0x0068UL)
static volatile unsigned long* const SP_PBE_RFECMDPAR0 = (unsigned long*) PBE_RFECMDPAR0_ADR;
#define S_PBE_RFECMDPAR0 (*SP_PBE_RFECMDPAR0)
#define RF24_PBE_O_RFECMDPAR0                    104
// bitfield: RFECMDPAR0_VAL
#define PBE_RFECMDPAR0_VAL                           0UL
#define RF24_PBE_RFECMDPAR0_VAL_S                0UL
#define PBE_RFECMDPAR0_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_RFECMDPAR0_VAL_M                0x0000FFFFUL
// enums for bitfield RFECMDPAR0_VAL (width: 16)UL
#define PBE_RFECMDPAR0_VAL_ALLZEROS                  0x0000UL
#define PBE_RFECMDPAR0_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// RFECMDPAR1
// 
#define PBE_RFECMDPAR1_ADR (PBE_BASE + 0x006CUL)
static volatile unsigned long* const SP_PBE_RFECMDPAR1 = (unsigned long*) PBE_RFECMDPAR1_ADR;
#define S_PBE_RFECMDPAR1 (*SP_PBE_RFECMDPAR1)
#define RF24_PBE_O_RFECMDPAR1                    108
// bitfield: RFECMDPAR1_VAL
#define PBE_RFECMDPAR1_VAL                           0UL
#define RF24_PBE_RFECMDPAR1_VAL_S                0UL
#define PBE_RFECMDPAR1_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_RFECMDPAR1_VAL_M                0x0000FFFFUL
// enums for bitfield RFECMDPAR1_VAL (width: 16)UL
#define PBE_RFECMDPAR1_VAL_ALLZEROS                  0x0000UL
#define PBE_RFECMDPAR1_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// RFEMSGBOX
// 
#define PBE_RFEMSGBOX_ADR (PBE_BASE + 0x0070UL)
static volatile unsigned long* const SP_PBE_RFEMSGBOX = (unsigned long*) PBE_RFEMSGBOX_ADR;
#define S_PBE_RFEMSGBOX (*SP_PBE_RFEMSGBOX)
#define RF24_PBE_O_RFEMSGBOX                     112
// bitfield: RFEMSGBOX_VAL
#define PBE_RFEMSGBOX_VAL                            0UL
#define RF24_PBE_RFEMSGBOX_VAL_S                 0UL
#define PBE_RFEMSGBOX_VAL_BM                         0x000000FFUL
#define RF24_PBE_RFEMSGBOX_VAL_M                 0x000000FFUL
// enums for bitfield RFEMSGBOX_VAL (width: 8)UL
#define PBE_RFEMSGBOX_VAL_ALLZEROS                   0x00UL
#define PBE_RFEMSGBOX_VAL_ALLONES                    0xFFUL
// --------------------------------------------------------------
// RFERSSI
// 
#define PBE_RFERSSI_ADR (PBE_BASE + 0x0074UL)
static volatile unsigned long* const SP_PBE_RFERSSI = (unsigned long*) PBE_RFERSSI_ADR;
#define S_PBE_RFERSSI (*SP_PBE_RFERSSI)
#define RF24_PBE_O_RFERSSI                       116
// bitfield: RFERSSI_VAL
#define PBE_RFERSSI_VAL                              0UL
#define RF24_PBE_RFERSSI_VAL_S                   0UL
#define PBE_RFERSSI_VAL_BM                           0x000000FFUL
#define RF24_PBE_RFERSSI_VAL_M                   0x000000FFUL
// enums for bitfield RFERSSI_VAL (width: 8)UL
#define PBE_RFERSSI_VAL_ALLZEROS                     0x00UL
#define PBE_RFERSSI_VAL_ALLONES                      0xFFUL
// --------------------------------------------------------------
// RFERSSIMAX
// 
#define PBE_RFERSSIMAX_ADR (PBE_BASE + 0x0078UL)
static volatile unsigned long* const SP_PBE_RFERSSIMAX = (unsigned long*) PBE_RFERSSIMAX_ADR;
#define S_PBE_RFERSSIMAX (*SP_PBE_RFERSSIMAX)
#define RF24_PBE_O_RFERSSIMAX                    120
// bitfield: RFERSSIMAX_VAL
#define PBE_RFERSSIMAX_VAL                           0UL
#define RF24_PBE_RFERSSIMAX_VAL_S                0UL
#define PBE_RFERSSIMAX_VAL_BM                        0x000000FFUL
#define RF24_PBE_RFERSSIMAX_VAL_M                0x000000FFUL
// enums for bitfield RFERSSIMAX_VAL (width: 8)UL
#define PBE_RFERSSIMAX_VAL_ALLZEROS                  0x00UL
#define PBE_RFERSSIMAX_VAL_ALLONES                   0xFFUL
// --------------------------------------------------------------
// RFERFGAIN
// 
#define PBE_RFERFGAIN_ADR (PBE_BASE + 0x007CUL)
static volatile unsigned long* const SP_PBE_RFERFGAIN = (unsigned long*) PBE_RFERFGAIN_ADR;
#define S_PBE_RFERFGAIN (*SP_PBE_RFERFGAIN)
#define RF24_PBE_O_RFERFGAIN                     124
// bitfield: RFERFGAIN_DBGAIN
#define PBE_RFERFGAIN_DBGAIN                         0UL
#define RF24_PBE_RFERFGAIN_DBGAIN_S              0UL
#define PBE_RFERFGAIN_DBGAIN_BM                      0x000000FFUL
#define RF24_PBE_RFERFGAIN_DBGAIN_M              0x000000FFUL
// enums for bitfield RFERFGAIN_DBGAIN (width: 8)UL
#define PBE_RFERFGAIN_DBGAIN_ALLZEROS                0x00UL
#define PBE_RFERFGAIN_DBGAIN_ALLONES                 0xFFUL
// --------------------------------------------------------------
// MDMSYNCAL
// 
#define PBE_MDMSYNCAL_ADR (PBE_BASE + 0x0080UL)
static volatile unsigned long* const SP_PBE_MDMSYNCAL = (unsigned long*) PBE_MDMSYNCAL_ADR;
#define S_PBE_MDMSYNCAL (*SP_PBE_MDMSYNCAL)
#define RF24_PBE_O_MDMSYNCAL                     128
// bitfield: MDMSYNCAL_SWALSB
#define PBE_MDMSYNCAL_SWALSB                         0UL
#define RF24_PBE_MDMSYNCAL_SWALSB_S              0UL
#define PBE_MDMSYNCAL_SWALSB_BM                      0x0000FFFFUL
#define RF24_PBE_MDMSYNCAL_SWALSB_M              0x0000FFFFUL
// enums for bitfield MDMSYNCAL_SWALSB (width: 16)UL
#define PBE_MDMSYNCAL_SWALSB_ALLZEROS                0x0000UL
#define PBE_MDMSYNCAL_SWALSB_ALLONES                 0xFFFFUL
// --------------------------------------------------------------
// MDMSYNCAH
// 
#define PBE_MDMSYNCAH_ADR (PBE_BASE + 0x0084UL)
static volatile unsigned long* const SP_PBE_MDMSYNCAH = (unsigned long*) PBE_MDMSYNCAH_ADR;
#define S_PBE_MDMSYNCAH (*SP_PBE_MDMSYNCAH)
#define RF24_PBE_O_MDMSYNCAH                     132
// bitfield: MDMSYNCAH_SWAMSB
#define PBE_MDMSYNCAH_SWAMSB                         0UL
#define RF24_PBE_MDMSYNCAH_SWAMSB_S              0UL
#define PBE_MDMSYNCAH_SWAMSB_BM                      0x0000FFFFUL
#define RF24_PBE_MDMSYNCAH_SWAMSB_M              0x0000FFFFUL
// enums for bitfield MDMSYNCAH_SWAMSB (width: 16)UL
#define PBE_MDMSYNCAH_SWAMSB_ALLZEROS                0x0000UL
#define PBE_MDMSYNCAH_SWAMSB_ALLONES                 0xFFFFUL
// --------------------------------------------------------------
// MDMSYNCBL
// 
#define PBE_MDMSYNCBL_ADR (PBE_BASE + 0x0088UL)
static volatile unsigned long* const SP_PBE_MDMSYNCBL = (unsigned long*) PBE_MDMSYNCBL_ADR;
#define S_PBE_MDMSYNCBL (*SP_PBE_MDMSYNCBL)
#define RF24_PBE_O_MDMSYNCBL                     136
// bitfield: MDMSYNCBL_SWBLSB
#define PBE_MDMSYNCBL_SWBLSB                         0UL
#define RF24_PBE_MDMSYNCBL_SWBLSB_S              0UL
#define PBE_MDMSYNCBL_SWBLSB_BM                      0x0000FFFFUL
#define RF24_PBE_MDMSYNCBL_SWBLSB_M              0x0000FFFFUL
// enums for bitfield MDMSYNCBL_SWBLSB (width: 16)UL
#define PBE_MDMSYNCBL_SWBLSB_ALLZEROS                0x0000UL
#define PBE_MDMSYNCBL_SWBLSB_ALLONES                 0xFFFFUL
// --------------------------------------------------------------
// MDMSYNCBH
// 
#define PBE_MDMSYNCBH_ADR (PBE_BASE + 0x008CUL)
static volatile unsigned long* const SP_PBE_MDMSYNCBH = (unsigned long*) PBE_MDMSYNCBH_ADR;
#define S_PBE_MDMSYNCBH (*SP_PBE_MDMSYNCBH)
#define RF24_PBE_O_MDMSYNCBH                     140
// bitfield: MDMSYNCBH_SWBMSB
#define PBE_MDMSYNCBH_SWBMSB                         0UL
#define RF24_PBE_MDMSYNCBH_SWBMSB_S              0UL
#define PBE_MDMSYNCBH_SWBMSB_BM                      0x0000FFFFUL
#define RF24_PBE_MDMSYNCBH_SWBMSB_M              0x0000FFFFUL
// enums for bitfield MDMSYNCBH_SWBMSB (width: 16)UL
#define PBE_MDMSYNCBH_SWBMSB_ALLZEROS                0x0000UL
#define PBE_MDMSYNCBH_SWBMSB_ALLONES                 0xFFFFUL
// --------------------------------------------------------------
// MDMCMDPAR0
// 
#define PBE_MDMCMDPAR0_ADR (PBE_BASE + 0x0090UL)
static volatile unsigned long* const SP_PBE_MDMCMDPAR0 = (unsigned long*) PBE_MDMCMDPAR0_ADR;
#define S_PBE_MDMCMDPAR0 (*SP_PBE_MDMCMDPAR0)
#define RF24_PBE_O_MDMCMDPAR0                    144
// bitfield: MDMCMDPAR0_VAL
#define PBE_MDMCMDPAR0_VAL                           0UL
#define RF24_PBE_MDMCMDPAR0_VAL_S                0UL
#define PBE_MDMCMDPAR0_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_MDMCMDPAR0_VAL_M                0x0000FFFFUL
// enums for bitfield MDMCMDPAR0_VAL (width: 16)UL
#define PBE_MDMCMDPAR0_VAL_ALLZEROS                  0x0000UL
#define PBE_MDMCMDPAR0_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// MDMCMDPAR1
// 
#define PBE_MDMCMDPAR1_ADR (PBE_BASE + 0x0094UL)
static volatile unsigned long* const SP_PBE_MDMCMDPAR1 = (unsigned long*) PBE_MDMCMDPAR1_ADR;
#define S_PBE_MDMCMDPAR1 (*SP_PBE_MDMCMDPAR1)
#define RF24_PBE_O_MDMCMDPAR1                    148
// bitfield: MDMCMDPAR1_VAL
#define PBE_MDMCMDPAR1_VAL                           0UL
#define RF24_PBE_MDMCMDPAR1_VAL_S                0UL
#define PBE_MDMCMDPAR1_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_MDMCMDPAR1_VAL_M                0x0000FFFFUL
// enums for bitfield MDMCMDPAR1_VAL (width: 16)UL
#define PBE_MDMCMDPAR1_VAL_ALLZEROS                  0x0000UL
#define PBE_MDMCMDPAR1_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// MDMCMDPAR2
// 
#define PBE_MDMCMDPAR2_ADR (PBE_BASE + 0x0098UL)
static volatile unsigned long* const SP_PBE_MDMCMDPAR2 = (unsigned long*) PBE_MDMCMDPAR2_ADR;
#define S_PBE_MDMCMDPAR2 (*SP_PBE_MDMCMDPAR2)
#define RF24_PBE_O_MDMCMDPAR2                    152
// bitfield: MDMCMDPAR2_VAL
#define PBE_MDMCMDPAR2_VAL                           0UL
#define RF24_PBE_MDMCMDPAR2_VAL_S                0UL
#define PBE_MDMCMDPAR2_VAL_BM                        0x0000FFFFUL
#define RF24_PBE_MDMCMDPAR2_VAL_M                0x0000FFFFUL
// enums for bitfield MDMCMDPAR2_VAL (width: 16)UL
#define PBE_MDMCMDPAR2_VAL_ALLZEROS                  0x0000UL
#define PBE_MDMCMDPAR2_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// POLY0L
// 
#define PBE_POLY0L_ADR (PBE_BASE + 0x00A0UL)
static volatile unsigned long* const SP_PBE_POLY0L = (unsigned long*) PBE_POLY0L_ADR;
#define S_PBE_POLY0L (*SP_PBE_POLY0L)
#define RF24_PBE_O_POLY0L                        160
// bitfield: POLY0L_VALLSB
#define PBE_POLY0L_VALLSB                            0UL
#define RF24_PBE_POLY0L_VALLSB_S                 0UL
#define PBE_POLY0L_VALLSB_BM                         0x0000FFFFUL
#define RF24_PBE_POLY0L_VALLSB_M                 0x0000FFFFUL
// enums for bitfield POLY0L_VALLSB (width: 16)UL
#define PBE_POLY0L_VALLSB_ALLZEROS                   0x0000UL
#define PBE_POLY0L_VALLSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// POLY0H
// 
#define PBE_POLY0H_ADR (PBE_BASE + 0x00A4UL)
static volatile unsigned long* const SP_PBE_POLY0H = (unsigned long*) PBE_POLY0H_ADR;
#define S_PBE_POLY0H (*SP_PBE_POLY0H)
#define RF24_PBE_O_POLY0H                        164
// bitfield: POLY0H_VALMSB
#define PBE_POLY0H_VALMSB                            0UL
#define RF24_PBE_POLY0H_VALMSB_S                 0UL
#define PBE_POLY0H_VALMSB_BM                         0x0000FFFFUL
#define RF24_PBE_POLY0H_VALMSB_M                 0x0000FFFFUL
// enums for bitfield POLY0H_VALMSB (width: 16)UL
#define PBE_POLY0H_VALMSB_ALLZEROS                   0x0000UL
#define PBE_POLY0H_VALMSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// POLY1L
// 
#define PBE_POLY1L_ADR (PBE_BASE + 0x00A8UL)
static volatile unsigned long* const SP_PBE_POLY1L = (unsigned long*) PBE_POLY1L_ADR;
#define S_PBE_POLY1L (*SP_PBE_POLY1L)
#define RF24_PBE_O_POLY1L                        168
// bitfield: POLY1L_VALLSB
#define PBE_POLY1L_VALLSB                            0UL
#define RF24_PBE_POLY1L_VALLSB_S                 0UL
#define PBE_POLY1L_VALLSB_BM                         0x0000FFFFUL
#define RF24_PBE_POLY1L_VALLSB_M                 0x0000FFFFUL
// enums for bitfield POLY1L_VALLSB (width: 16)UL
#define PBE_POLY1L_VALLSB_ALLZEROS                   0x0000UL
#define PBE_POLY1L_VALLSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// POLY1H
// 
#define PBE_POLY1H_ADR (PBE_BASE + 0x00ACUL)
static volatile unsigned long* const SP_PBE_POLY1H = (unsigned long*) PBE_POLY1H_ADR;
#define S_PBE_POLY1H (*SP_PBE_POLY1H)
#define RF24_PBE_O_POLY1H                        172
// bitfield: POLY1H_VALMSB
#define PBE_POLY1H_VALMSB                            0UL
#define RF24_PBE_POLY1H_VALMSB_S                 0UL
#define PBE_POLY1H_VALMSB_BM                         0x0000FFFFUL
#define RF24_PBE_POLY1H_VALMSB_M                 0x0000FFFFUL
// enums for bitfield POLY1H_VALMSB (width: 16)UL
#define PBE_POLY1H_VALMSB_ALLZEROS                   0x0000UL
#define PBE_POLY1H_VALMSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// PHACFG
// 
#define PBE_PHACFG_ADR (PBE_BASE + 0x00B0UL)
static volatile unsigned long* const SP_PBE_PHACFG = (unsigned long*) PBE_PHACFG_ADR;
#define S_PBE_PHACFG (*SP_PBE_PHACFG)
#define RF24_PBE_O_PHACFG                        176
// bitfield: PHACFG_MODE1
#define PBE_PHACFG_MODE1                             1UL
#define RF24_PBE_PHACFG_MODE1_S                  1UL
#define PBE_PHACFG_MODE1_BM                          0x00000006UL
#define RF24_PBE_PHACFG_MODE1_M                  0x00000006UL
// enums for bitfield PHACFG_MODE1 (width: 2)UL
#define PBE_PHACFG_MODE1_INDEP                       0x0UL
#define PBE_PHACFG_MODE1_CASC                        0x1UL
#define PBE_PHACFG_MODE1_PARAL                       0x2UL
// bitfield: PHACFG_MODE0
#define PBE_PHACFG_MODE0                             0UL
#define RF24_PBE_PHACFG_MODE0_S                  0UL
#define PBE_PHACFG_MODE0_BM                          0x00000001UL
#define RF24_PBE_PHACFG_MODE0_M                  0x00000001UL
// enums for bitfield PHACFG_MODE0 (width: 1)UL
#define PBE_PHACFG_MODE0_CRC                         0x0UL
#define PBE_PHACFG_MODE0_WHITE                       0x1UL
// --------------------------------------------------------------
// FCFG0
// 
#define PBE_FCFG0_ADR (PBE_BASE + 0x00B4UL)
static volatile unsigned long* const SP_PBE_FCFG0 = (unsigned long*) PBE_FCFG0_ADR;
#define S_PBE_FCFG0 (*SP_PBE_FCFG0)
#define RF24_PBE_O_FCFG0                         180
// bitfield: FCFG0_TXIRQMET
#define PBE_FCFG0_TXIRQMET                           7UL
#define RF24_PBE_FCFG0_TXIRQMET_S                7UL
#define PBE_FCFG0_TXIRQMET_BM                        0x00000080UL
#define RF24_PBE_FCFG0_TXIRQMET_M                0x00000080UL
// enums for bitfield FCFG0_TXIRQMET (width: 1)UL
#define PBE_FCFG0_TXIRQMET_TXWRBTHR                  0x0UL
#define PBE_FCFG0_TXIRQMET_TXRDBTHR                  0x1UL
// bitfield: FCFG0_RXIRQMET
#define PBE_FCFG0_RXIRQMET                           6UL
#define RF24_PBE_FCFG0_RXIRQMET_S                6UL
#define PBE_FCFG0_RXIRQMET_BM                        0x00000040UL
#define RF24_PBE_FCFG0_RXIRQMET_M                0x00000040UL
// enums for bitfield FCFG0_RXIRQMET (width: 1)UL
#define PBE_FCFG0_RXIRQMET_RXWRBTHR                  0x1UL
#define PBE_FCFG0_RXIRQMET_RXRDBTHR                  0x0UL
// bitfield: FCFG0_TXACOM
#define PBE_FCFG0_TXACOM                             5UL
#define RF24_PBE_FCFG0_TXACOM_S                  5UL
#define PBE_FCFG0_TXACOM_BM                          0x00000020UL
#define RF24_PBE_FCFG0_TXACOM_M                  0x00000020UL
// enums for bitfield FCFG0_TXACOM (width: 1)UL
#define PBE_FCFG0_TXACOM_DIS                         0x0UL
#define PBE_FCFG0_TXACOM_EN                          0x1UL
// bitfield: FCFG0_TXADEAL
#define PBE_FCFG0_TXADEAL                            4UL
#define RF24_PBE_FCFG0_TXADEAL_S                 4UL
#define PBE_FCFG0_TXADEAL_BM                         0x00000010UL
#define RF24_PBE_FCFG0_TXADEAL_M                 0x00000010UL
// enums for bitfield FCFG0_TXADEAL (width: 1)UL
#define PBE_FCFG0_TXADEAL_DIS                        0x0UL
#define PBE_FCFG0_TXADEAL_EN                         0x1UL
// bitfield: FCFG0_RXACOM
#define PBE_FCFG0_RXACOM                             1UL
#define RF24_PBE_FCFG0_RXACOM_S                  1UL
#define PBE_FCFG0_RXACOM_BM                          0x00000002UL
#define RF24_PBE_FCFG0_RXACOM_M                  0x00000002UL
// enums for bitfield FCFG0_RXACOM (width: 1)UL
#define PBE_FCFG0_RXACOM_DIS                         0x0UL
#define PBE_FCFG0_RXACOM_EN                          0x1UL
// bitfield: FCFG0_RXADEAL
#define PBE_FCFG0_RXADEAL                            0UL
#define RF24_PBE_FCFG0_RXADEAL_S                 0UL
#define PBE_FCFG0_RXADEAL_BM                         0x00000001UL
#define RF24_PBE_FCFG0_RXADEAL_M                 0x00000001UL
// enums for bitfield FCFG0_RXADEAL (width: 1)UL
#define PBE_FCFG0_RXADEAL_DIS                        0x0UL
#define PBE_FCFG0_RXADEAL_EN                         0x1UL
// --------------------------------------------------------------
// FCFG1
// 
#define PBE_FCFG1_ADR (PBE_BASE + 0x00B8UL)
static volatile unsigned long* const SP_PBE_FCFG1 = (unsigned long*) PBE_FCFG1_ADR;
#define S_PBE_FCFG1 (*SP_PBE_FCFG1)
#define RF24_PBE_O_FCFG1                         184
// bitfield: FCFG1_TXSTRT
#define PBE_FCFG1_TXSTRT                             0UL
#define RF24_PBE_FCFG1_TXSTRT_S                  0UL
#define PBE_FCFG1_TXSTRT_BM                          0x000001FFUL
#define RF24_PBE_FCFG1_TXSTRT_M                  0x000001FFUL
// enums for bitfield FCFG1_TXSTRT (width: 9)UL
#define PBE_FCFG1_TXSTRT_ZEROS                       0x000UL
#define PBE_FCFG1_TXSTRT_ONES                        0x1FFUL
// --------------------------------------------------------------
// FCFG2
// 
#define PBE_FCFG2_ADR (PBE_BASE + 0x00BCUL)
static volatile unsigned long* const SP_PBE_FCFG2 = (unsigned long*) PBE_FCFG2_ADR;
#define S_PBE_FCFG2 (*SP_PBE_FCFG2)
#define RF24_PBE_O_FCFG2                         188
// bitfield: FCFG2_TXHSIZE
#define PBE_FCFG2_TXHSIZE                            8UL
#define RF24_PBE_FCFG2_TXHSIZE_S                 8UL
#define PBE_FCFG2_TXHSIZE_BM                         0x00000700UL
#define RF24_PBE_FCFG2_TXHSIZE_M                 0x00000700UL
// enums for bitfield FCFG2_TXHSIZE (width: 3)UL
#define PBE_FCFG2_TXHSIZE_BYTE                       0x0UL
#define PBE_FCFG2_TXHSIZE_WORD                       0x2UL
#define PBE_FCFG2_TXHSIZE_HALFW                      0x1UL
// bitfield: FCFG2_TXSIZE
#define PBE_FCFG2_TXSIZE                             0UL
#define RF24_PBE_FCFG2_TXSIZE_S                  0UL
#define PBE_FCFG2_TXSIZE_BM                          0x000000FFUL
#define RF24_PBE_FCFG2_TXSIZE_M                  0x000000FFUL
// enums for bitfield FCFG2_TXSIZE (width: 8)UL
#define PBE_FCFG2_TXSIZE_ZEROS                       0x00UL
#define PBE_FCFG2_TXSIZE_ONES                        0xFFUL
// --------------------------------------------------------------
// FCFG3
// 
#define PBE_FCFG3_ADR (PBE_BASE + 0x00C0UL)
static volatile unsigned long* const SP_PBE_FCFG3 = (unsigned long*) PBE_FCFG3_ADR;
#define S_PBE_FCFG3 (*SP_PBE_FCFG3)
#define RF24_PBE_O_FCFG3                         192
// bitfield: FCFG3_RXSTRT
#define PBE_FCFG3_RXSTRT                             0UL
#define RF24_PBE_FCFG3_RXSTRT_S                  0UL
#define PBE_FCFG3_RXSTRT_BM                          0x000001FFUL
#define RF24_PBE_FCFG3_RXSTRT_M                  0x000001FFUL
// enums for bitfield FCFG3_RXSTRT (width: 9)UL
#define PBE_FCFG3_RXSTRT_ZEROS                       0x000UL
#define PBE_FCFG3_RXSTRT_ONES                        0x1FFUL
// --------------------------------------------------------------
// FCFG4
// 
#define PBE_FCFG4_ADR (PBE_BASE + 0x00C4UL)
static volatile unsigned long* const SP_PBE_FCFG4 = (unsigned long*) PBE_FCFG4_ADR;
#define S_PBE_FCFG4 (*SP_PBE_FCFG4)
#define RF24_PBE_O_FCFG4                         196
// bitfield: FCFG4_RXHSIZE
#define PBE_FCFG4_RXHSIZE                            8UL
#define RF24_PBE_FCFG4_RXHSIZE_S                 8UL
#define PBE_FCFG4_RXHSIZE_BM                         0x00000700UL
#define RF24_PBE_FCFG4_RXHSIZE_M                 0x00000700UL
// enums for bitfield FCFG4_RXHSIZE (width: 3)UL
#define PBE_FCFG4_RXHSIZE_BYTE                       0x0UL
#define PBE_FCFG4_RXHSIZE_WORD                       0x2UL
#define PBE_FCFG4_RXHSIZE_HALFW                      0x1UL
// bitfield: FCFG4_RXSIZE
#define PBE_FCFG4_RXSIZE                             0UL
#define RF24_PBE_FCFG4_RXSIZE_S                  0UL
#define PBE_FCFG4_RXSIZE_BM                          0x000000FFUL
#define RF24_PBE_FCFG4_RXSIZE_M                  0x000000FFUL
// enums for bitfield FCFG4_RXSIZE (width: 8)UL
#define PBE_FCFG4_RXSIZE_ZEROS                       0x00UL
#define PBE_FCFG4_RXSIZE_ONES                        0xFFUL
// --------------------------------------------------------------
// FCFG5
// 
#define PBE_FCFG5_ADR (PBE_BASE + 0x00C8UL)
static volatile unsigned long* const SP_PBE_FCFG5 = (unsigned long*) PBE_FCFG5_ADR;
#define S_PBE_FCFG5 (*SP_PBE_FCFG5)
#define RF24_PBE_O_FCFG5                         200
// bitfield: FCFG5_DMASREQ
#define PBE_FCFG5_DMASREQ                            6UL
#define RF24_PBE_FCFG5_DMASREQ_S                 6UL
#define PBE_FCFG5_DMASREQ_BM                         0x000001C0UL
#define RF24_PBE_FCFG5_DMASREQ_M                 0x000001C0UL
// enums for bitfield FCFG5_DMASREQ (width: 3)UL
#define PBE_FCFG5_DMASREQ_NONE                       0x0UL
#define PBE_FCFG5_DMASREQ_RXFIFOMD                   0x1UL
#define PBE_FCFG5_DMASREQ_RXFIFOFREE                 0x2UL
#define PBE_FCFG5_DMASREQ_TXFIFOMD                   0x3UL
#define PBE_FCFG5_DMASREQ_TXFIFOFREE                 0x4UL
// bitfield: FCFG5_DMAREQ
#define PBE_FCFG5_DMAREQ                             0UL
#define RF24_PBE_FCFG5_DMAREQ_S                  0UL
#define PBE_FCFG5_DMAREQ_BM                          0x0000001FUL
#define RF24_PBE_FCFG5_DMAREQ_M                  0x0000001FUL
// enums for bitfield FCFG5_DMAREQ (width: 5)UL
#define PBE_FCFG5_DMAREQ_NONE                        0x00UL
#define PBE_FCFG5_DMAREQ_RXRDBTHR_MET                0x01UL
#define PBE_FCFG5_DMAREQ_RXWRBTHR_MET                0x02UL
#define PBE_FCFG5_DMAREQ_RXFIFO_RESET                0x03UL
#define PBE_FCFG5_DMAREQ_RXFIFO_DEALLOC              0x04UL
#define PBE_FCFG5_DMAREQ_RXFIFO_RETRY                0x05UL
#define PBE_FCFG5_DMAREQ_RXFIFO_DISCARD              0x06UL
#define PBE_FCFG5_DMAREQ_RXFIFO_COMMIT               0x07UL
#define PBE_FCFG5_DMAREQ_TXWRBTHR_MET                0x0AUL
#define PBE_FCFG5_DMAREQ_TXRDBTHR_MET                0x09UL
#define PBE_FCFG5_DMAREQ_TXFIFO_RESET                0x0BUL
#define PBE_FCFG5_DMAREQ_TXFIFO_DEALLOC              0x0CUL
#define PBE_FCFG5_DMAREQ_TXFIFO_RETRY                0x0DUL
#define PBE_FCFG5_DMAREQ_TXFIFO_DISCARD              0x0EUL
#define PBE_FCFG5_DMAREQ_TXFIFO_COMMIT               0x0FUL
// --------------------------------------------------------------
// RXFWBTHRS
// 
#define PBE_RXFWBTHRS_ADR (PBE_BASE + 0x00CCUL)
static volatile unsigned long* const SP_PBE_RXFWBTHRS = (unsigned long*) PBE_RXFWBTHRS_ADR;
#define S_PBE_RXFWBTHRS (*SP_PBE_RXFWBTHRS)
#define RF24_PBE_O_RXFWBTHRS                     204
// bitfield: RXFWBTHRS_BYTES
#define PBE_RXFWBTHRS_BYTES                          0UL
#define RF24_PBE_RXFWBTHRS_BYTES_S               0UL
#define PBE_RXFWBTHRS_BYTES_BM                       0x000003FFUL
#define RF24_PBE_RXFWBTHRS_BYTES_M               0x000003FFUL
// enums for bitfield RXFWBTHRS_BYTES (width: 10)UL
#define PBE_RXFWBTHRS_BYTES_ALLZEROS                 0x000UL
#define PBE_RXFWBTHRS_BYTES_ALLONES                  0x3FFUL
// --------------------------------------------------------------
// RXFRBTHRS
// 
#define PBE_RXFRBTHRS_ADR (PBE_BASE + 0x00D0UL)
static volatile unsigned long* const SP_PBE_RXFRBTHRS = (unsigned long*) PBE_RXFRBTHRS_ADR;
#define S_PBE_RXFRBTHRS (*SP_PBE_RXFRBTHRS)
#define RF24_PBE_O_RXFRBTHRS                     208
// bitfield: RXFRBTHRS_BYTES
#define PBE_RXFRBTHRS_BYTES                          0UL
#define RF24_PBE_RXFRBTHRS_BYTES_S               0UL
#define PBE_RXFRBTHRS_BYTES_BM                       0x000003FFUL
#define RF24_PBE_RXFRBTHRS_BYTES_M               0x000003FFUL
// enums for bitfield RXFRBTHRS_BYTES (width: 10)UL
#define PBE_RXFRBTHRS_BYTES_ALLZEROS                 0x000UL
#define PBE_RXFRBTHRS_BYTES_ALLONES                  0x3FFUL
// --------------------------------------------------------------
// TXFWBTHRS
// 
#define PBE_TXFWBTHRS_ADR (PBE_BASE + 0x00D4UL)
static volatile unsigned long* const SP_PBE_TXFWBTHRS = (unsigned long*) PBE_TXFWBTHRS_ADR;
#define S_PBE_TXFWBTHRS (*SP_PBE_TXFWBTHRS)
#define RF24_PBE_O_TXFWBTHRS                     212
// bitfield: TXFWBTHRS_BYTES
#define PBE_TXFWBTHRS_BYTES                          0UL
#define RF24_PBE_TXFWBTHRS_BYTES_S               0UL
#define PBE_TXFWBTHRS_BYTES_BM                       0x000003FFUL
#define RF24_PBE_TXFWBTHRS_BYTES_M               0x000003FFUL
// enums for bitfield TXFWBTHRS_BYTES (width: 10)UL
#define PBE_TXFWBTHRS_BYTES_ALLZEROS                 0x000UL
#define PBE_TXFWBTHRS_BYTES_ALLONES                  0x3FFUL
// --------------------------------------------------------------
// TXFRBTHRS
// 
#define PBE_TXFRBTHRS_ADR (PBE_BASE + 0x00D8UL)
static volatile unsigned long* const SP_PBE_TXFRBTHRS = (unsigned long*) PBE_TXFRBTHRS_ADR;
#define S_PBE_TXFRBTHRS (*SP_PBE_TXFRBTHRS)
#define RF24_PBE_O_TXFRBTHRS                     216
// bitfield: TXFRBTHRS_BYTES
#define PBE_TXFRBTHRS_BYTES                          0UL
#define RF24_PBE_TXFRBTHRS_BYTES_S               0UL
#define PBE_TXFRBTHRS_BYTES_BM                       0x000003FFUL
#define RF24_PBE_TXFRBTHRS_BYTES_M               0x000003FFUL
// enums for bitfield TXFRBTHRS_BYTES (width: 10)UL
#define PBE_TXFRBTHRS_BYTES_ALLZEROS                 0x000UL
#define PBE_TXFRBTHRS_BYTES_ALLONES                  0x3FFUL
// --------------------------------------------------------------
// TIMCTL
// 
#define PBE_TIMCTL_ADR (PBE_BASE + 0x00DCUL)
static volatile unsigned long* const SP_PBE_TIMCTL = (unsigned long*) PBE_TIMCTL_ADR;
#define S_PBE_TIMCTL (*SP_PBE_TIMCTL)
#define RF24_PBE_O_TIMCTL                        220
// bitfield: TIMCTL_CPTSRC1
#define PBE_TIMCTL_CPTSRC1                           11UL
#define RF24_PBE_TIMCTL_CPTSRC1_S                11UL
#define PBE_TIMCTL_CPTSRC1_BM                        0x0000F800UL
#define RF24_PBE_TIMCTL_CPTSRC1_M                0x0000F800UL
// enums for bitfield TIMCTL_CPTSRC1 (width: 5)UL
#define PBE_TIMCTL_CPTSRC1_ALLZEROS                  0x00UL
#define PBE_TIMCTL_CPTSRC1_ALLONES                   0x1FUL
// bitfield: TIMCTL_ENCPT1
#define PBE_TIMCTL_ENCPT1                            10UL
#define RF24_PBE_TIMCTL_ENCPT1_S                 10UL
#define PBE_TIMCTL_ENCPT1_BM                         0x00000400UL
#define RF24_PBE_TIMCTL_ENCPT1_M                 0x00000400UL
// enums for bitfield TIMCTL_ENCPT1 (width: 1)UL
#define PBE_TIMCTL_ENCPT1_OFF                        0x0UL
#define PBE_TIMCTL_ENCPT1_ON                         0x1UL
// bitfield: TIMCTL_SRC1
#define PBE_TIMCTL_SRC1                              9UL
#define RF24_PBE_TIMCTL_SRC1_S                   9UL
#define PBE_TIMCTL_SRC1_BM                           0x00000200UL
#define RF24_PBE_TIMCTL_SRC1_M                   0x00000200UL
// enums for bitfield TIMCTL_SRC1 (width: 1)UL
#define PBE_TIMCTL_SRC1_CLK                          0x0UL
#define PBE_TIMCTL_SRC1_PRE1                         0x1UL
// bitfield: TIMCTL_EN1
#define PBE_TIMCTL_EN1                               8UL
#define RF24_PBE_TIMCTL_EN1_S                    8UL
#define PBE_TIMCTL_EN1_BM                            0x00000100UL
#define RF24_PBE_TIMCTL_EN1_M                    0x00000100UL
// enums for bitfield TIMCTL_EN1 (width: 1)UL
#define PBE_TIMCTL_EN1_OFF                           0x0UL
#define PBE_TIMCTL_EN1_ON                            0x1UL
// bitfield: TIMCTL_CPTSRC0
#define PBE_TIMCTL_CPTSRC0                           3UL
#define RF24_PBE_TIMCTL_CPTSRC0_S                3UL
#define PBE_TIMCTL_CPTSRC0_BM                        0x000000F8UL
#define RF24_PBE_TIMCTL_CPTSRC0_M                0x000000F8UL
// enums for bitfield TIMCTL_CPTSRC0 (width: 5)UL
#define PBE_TIMCTL_CPTSRC0_ALLZEROS                  0x00UL
#define PBE_TIMCTL_CPTSRC0_ALLONES                   0x1FUL
// bitfield: TIMCTL_ENCPT0
#define PBE_TIMCTL_ENCPT0                            2UL
#define RF24_PBE_TIMCTL_ENCPT0_S                 2UL
#define PBE_TIMCTL_ENCPT0_BM                         0x00000004UL
#define RF24_PBE_TIMCTL_ENCPT0_M                 0x00000004UL
// enums for bitfield TIMCTL_ENCPT0 (width: 1)UL
#define PBE_TIMCTL_ENCPT0_OFF                        0x0UL
#define PBE_TIMCTL_ENCPT0_ON                         0x1UL
// bitfield: TIMCTL_SRC0
#define PBE_TIMCTL_SRC0                              1UL
#define RF24_PBE_TIMCTL_SRC0_S                   1UL
#define PBE_TIMCTL_SRC0_BM                           0x00000002UL
#define RF24_PBE_TIMCTL_SRC0_M                   0x00000002UL
// enums for bitfield TIMCTL_SRC0 (width: 1)UL
#define PBE_TIMCTL_SRC0_CLK                          0x0UL
#define PBE_TIMCTL_SRC0_PRE0                         0x1UL
// bitfield: TIMCTL_EN0
#define PBE_TIMCTL_EN0                               0UL
#define RF24_PBE_TIMCTL_EN0_S                    0UL
#define PBE_TIMCTL_EN0_BM                            0x00000001UL
#define RF24_PBE_TIMCTL_EN0_M                    0x00000001UL
// enums for bitfield TIMCTL_EN0 (width: 1)UL
#define PBE_TIMCTL_EN0_OFF                           0x0UL
#define PBE_TIMCTL_EN0_ON                            0x1UL
// --------------------------------------------------------------
// TIMPRE
// 
#define PBE_TIMPRE_ADR (PBE_BASE + 0x00E0UL)
static volatile unsigned long* const SP_PBE_TIMPRE = (unsigned long*) PBE_TIMPRE_ADR;
#define S_PBE_TIMPRE (*SP_PBE_TIMPRE)
#define RF24_PBE_O_TIMPRE                        224
// bitfield: TIMPRE_PRE1
#define PBE_TIMPRE_PRE1                              8UL
#define RF24_PBE_TIMPRE_PRE1_S                   8UL
#define PBE_TIMPRE_PRE1_BM                           0x00003F00UL
#define RF24_PBE_TIMPRE_PRE1_M                   0x00003F00UL
// enums for bitfield TIMPRE_PRE1 (width: 6)UL
#define PBE_TIMPRE_PRE1_NO_DIV                       0x00UL
#define PBE_TIMPRE_PRE1_DIV64                        0x3FUL
// bitfield: TIMPRE_PRE0
#define PBE_TIMPRE_PRE0                              0UL
#define RF24_PBE_TIMPRE_PRE0_S                   0UL
#define PBE_TIMPRE_PRE0_BM                           0x0000003FUL
#define RF24_PBE_TIMPRE_PRE0_M                   0x0000003FUL
// enums for bitfield TIMPRE_PRE0 (width: 6)UL
#define PBE_TIMPRE_PRE0_NO_DIV                       0x00UL
#define PBE_TIMPRE_PRE0_DIV64                        0x3FUL
// --------------------------------------------------------------
// TIMPER0
// 
#define PBE_TIMPER0_ADR (PBE_BASE + 0x00E4UL)
static volatile unsigned long* const SP_PBE_TIMPER0 = (unsigned long*) PBE_TIMPER0_ADR;
#define S_PBE_TIMPER0 (*SP_PBE_TIMPER0)
#define RF24_PBE_O_TIMPER0                       228
// bitfield: TIMPER0_VAL
#define PBE_TIMPER0_VAL                              0UL
#define RF24_PBE_TIMPER0_VAL_S                   0UL
#define PBE_TIMPER0_VAL_BM                           0x0000FFFFUL
#define RF24_PBE_TIMPER0_VAL_M                   0x0000FFFFUL
// enums for bitfield TIMPER0_VAL (width: 16)UL
#define PBE_TIMPER0_VAL_ALLZEROS                     0x0000UL
#define PBE_TIMPER0_VAL_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// TIMPER1
// 
#define PBE_TIMPER1_ADR (PBE_BASE + 0x00E8UL)
static volatile unsigned long* const SP_PBE_TIMPER1 = (unsigned long*) PBE_TIMPER1_ADR;
#define S_PBE_TIMPER1 (*SP_PBE_TIMPER1)
#define RF24_PBE_O_TIMPER1                       232
// bitfield: TIMPER1_VAL
#define PBE_TIMPER1_VAL                              0UL
#define RF24_PBE_TIMPER1_VAL_S                   0UL
#define PBE_TIMPER1_VAL_BM                           0x0000FFFFUL
#define RF24_PBE_TIMPER1_VAL_M                   0x0000FFFFUL
// enums for bitfield TIMPER1_VAL (width: 16)UL
#define PBE_TIMPER1_VAL_ALLZEROS                     0x0000UL
#define PBE_TIMPER1_VAL_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// TIMCAPT0
// 
#define PBE_TIMCAPT0_ADR (PBE_BASE + 0x00ECUL)
static volatile unsigned long* const SP_PBE_TIMCAPT0 = (unsigned long*) PBE_TIMCAPT0_ADR;
#define S_PBE_TIMCAPT0 (*SP_PBE_TIMCAPT0)
#define RF24_PBE_O_TIMCAPT0                      236
// bitfield: TIMCAPT0_VALUE
#define PBE_TIMCAPT0_VALUE                           0UL
#define RF24_PBE_TIMCAPT0_VALUE_S                0UL
#define PBE_TIMCAPT0_VALUE_BM                        0x0000FFFFUL
#define RF24_PBE_TIMCAPT0_VALUE_M                0x0000FFFFUL
// enums for bitfield TIMCAPT0_VALUE (width: 16)UL
#define PBE_TIMCAPT0_VALUE_ALLZEROS                  0x0000UL
#define PBE_TIMCAPT0_VALUE_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// TIMCAPT1
// 
#define PBE_TIMCAPT1_ADR (PBE_BASE + 0x00F0UL)
static volatile unsigned long* const SP_PBE_TIMCAPT1 = (unsigned long*) PBE_TIMCAPT1_ADR;
#define S_PBE_TIMCAPT1 (*SP_PBE_TIMCAPT1)
#define RF24_PBE_O_TIMCAPT1                      240
// bitfield: TIMCAPT1_VALUE
#define PBE_TIMCAPT1_VALUE                           0UL
#define RF24_PBE_TIMCAPT1_VALUE_S                0UL
#define PBE_TIMCAPT1_VALUE_BM                        0x0000FFFFUL
#define RF24_PBE_TIMCAPT1_VALUE_M                0x0000FFFFUL
// enums for bitfield TIMCAPT1_VALUE (width: 16)UL
#define PBE_TIMCAPT1_VALUE_ALLZEROS                  0x0000UL
#define PBE_TIMCAPT1_VALUE_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// TRCCTL
// 
#define PBE_TRCCTL_ADR (PBE_BASE + 0x0100UL)
static volatile unsigned long* const SP_PBE_TRCCTL = (unsigned long*) PBE_TRCCTL_ADR;
#define S_PBE_TRCCTL (*SP_PBE_TRCCTL)
#define RF24_PBE_O_TRCCTL                        256
// bitfield: TRCCTL_SEND
#define PBE_TRCCTL_SEND                              0UL
#define RF24_PBE_TRCCTL_SEND_S                   0UL
#define PBE_TRCCTL_SEND_BM                           0x00000001UL
#define RF24_PBE_TRCCTL_SEND_M                   0x00000001UL
// enums for bitfield TRCCTL_SEND (width: 1)UL
#define PBE_TRCCTL_SEND_ZERO                         0x0UL
#define PBE_TRCCTL_SEND_ONE                          0x1UL
// --------------------------------------------------------------
// TRCSTAT
// 
#define PBE_TRCSTAT_ADR (PBE_BASE + 0x0104UL)
static volatile unsigned long* const SP_PBE_TRCSTAT = (unsigned long*) PBE_TRCSTAT_ADR;
#define S_PBE_TRCSTAT (*SP_PBE_TRCSTAT)
#define RF24_PBE_O_TRCSTAT                       260
// bitfield: TRCSTAT_BUSY
#define PBE_TRCSTAT_BUSY                             0UL
#define RF24_PBE_TRCSTAT_BUSY_S                  0UL
#define PBE_TRCSTAT_BUSY_BM                          0x00000001UL
#define RF24_PBE_TRCSTAT_BUSY_M                  0x00000001UL
// enums for bitfield TRCSTAT_BUSY (width: 1)UL
#define PBE_TRCSTAT_BUSY_ZERO                        0x0UL
#define PBE_TRCSTAT_BUSY_ONE                         0x1UL
// --------------------------------------------------------------
// TRCCMD
// 
#define PBE_TRCCMD_ADR (PBE_BASE + 0x0108UL)
static volatile unsigned long* const SP_PBE_TRCCMD = (unsigned long*) PBE_TRCCMD_ADR;
#define S_PBE_TRCCMD (*SP_PBE_TRCCMD)
#define RF24_PBE_O_TRCCMD                        264
// bitfield: TRCCMD_PARCNT
#define PBE_TRCCMD_PARCNT                            8UL
#define RF24_PBE_TRCCMD_PARCNT_S                 8UL
#define PBE_TRCCMD_PARCNT_BM                         0x00000300UL
#define RF24_PBE_TRCCMD_PARCNT_M                 0x00000300UL
// enums for bitfield TRCCMD_PARCNT (width: 2)UL
#define PBE_TRCCMD_PARCNT_ALLZEROS                   0x0UL
#define PBE_TRCCMD_PARCNT_ALLONES                    0x3UL
// bitfield: TRCCMD_PKTHDR
#define PBE_TRCCMD_PKTHDR                            0UL
#define RF24_PBE_TRCCMD_PKTHDR_S                 0UL
#define PBE_TRCCMD_PKTHDR_BM                         0x000000FFUL
#define RF24_PBE_TRCCMD_PKTHDR_M                 0x000000FFUL
// enums for bitfield TRCCMD_PKTHDR (width: 8)UL
#define PBE_TRCCMD_PKTHDR_ALLZEROS                   0x00UL
#define PBE_TRCCMD_PKTHDR_ALLONES                    0xFFUL
// --------------------------------------------------------------
// TRCPAR0
// 
#define PBE_TRCPAR0_ADR (PBE_BASE + 0x010CUL)
static volatile unsigned long* const SP_PBE_TRCPAR0 = (unsigned long*) PBE_TRCPAR0_ADR;
#define S_PBE_TRCPAR0 (*SP_PBE_TRCPAR0)
#define RF24_PBE_O_TRCPAR0                       268
// bitfield: TRCPAR0_VAL
#define PBE_TRCPAR0_VAL                              0UL
#define RF24_PBE_TRCPAR0_VAL_S                   0UL
#define PBE_TRCPAR0_VAL_BM                           0x0000FFFFUL
#define RF24_PBE_TRCPAR0_VAL_M                   0x0000FFFFUL
// enums for bitfield TRCPAR0_VAL (width: 16)UL
#define PBE_TRCPAR0_VAL_ALLZEROS                     0x0000UL
#define PBE_TRCPAR0_VAL_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// TRCPAR1
// 
#define PBE_TRCPAR1_ADR (PBE_BASE + 0x0110UL)
static volatile unsigned long* const SP_PBE_TRCPAR1 = (unsigned long*) PBE_TRCPAR1_ADR;
#define S_PBE_TRCPAR1 (*SP_PBE_TRCPAR1)
#define RF24_PBE_O_TRCPAR1                       272
// bitfield: TRCPAR1_VAL
#define PBE_TRCPAR1_VAL                              0UL
#define RF24_PBE_TRCPAR1_VAL_S                   0UL
#define PBE_TRCPAR1_VAL_BM                           0x0000FFFFUL
#define RF24_PBE_TRCPAR1_VAL_M                   0x0000FFFFUL
// enums for bitfield TRCPAR1_VAL (width: 16)UL
#define PBE_TRCPAR1_VAL_ALLZEROS                     0x0000UL
#define PBE_TRCPAR1_VAL_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// GPOCTRL
// 
#define PBE_GPOCTRL_ADR (PBE_BASE + 0x0114UL)
static volatile unsigned long* const SP_PBE_GPOCTRL = (unsigned long*) PBE_GPOCTRL_ADR;
#define S_PBE_GPOCTRL (*SP_PBE_GPOCTRL)
#define RF24_PBE_O_GPOCTRL                       276
// bitfield: GPOCTRL_GPO7
#define PBE_GPOCTRL_GPO7                             7UL
#define RF24_PBE_GPOCTRL_GPO7_S                  7UL
#define PBE_GPOCTRL_GPO7_BM                          0x00000080UL
#define RF24_PBE_GPOCTRL_GPO7_M                  0x00000080UL
// enums for bitfield GPOCTRL_GPO7 (width: 1)UL
#define PBE_GPOCTRL_GPO7_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO7_ONE                         0x1UL
// bitfield: GPOCTRL_GPO6
#define PBE_GPOCTRL_GPO6                             6UL
#define RF24_PBE_GPOCTRL_GPO6_S                  6UL
#define PBE_GPOCTRL_GPO6_BM                          0x00000040UL
#define RF24_PBE_GPOCTRL_GPO6_M                  0x00000040UL
// enums for bitfield GPOCTRL_GPO6 (width: 1)UL
#define PBE_GPOCTRL_GPO6_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO6_ONE                         0x1UL
// bitfield: GPOCTRL_GPO5
#define PBE_GPOCTRL_GPO5                             5UL
#define RF24_PBE_GPOCTRL_GPO5_S                  5UL
#define PBE_GPOCTRL_GPO5_BM                          0x00000020UL
#define RF24_PBE_GPOCTRL_GPO5_M                  0x00000020UL
// enums for bitfield GPOCTRL_GPO5 (width: 1)UL
#define PBE_GPOCTRL_GPO5_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO5_ONE                         0x1UL
// bitfield: GPOCTRL_GPO4
#define PBE_GPOCTRL_GPO4                             4UL
#define RF24_PBE_GPOCTRL_GPO4_S                  4UL
#define PBE_GPOCTRL_GPO4_BM                          0x00000010UL
#define RF24_PBE_GPOCTRL_GPO4_M                  0x00000010UL
// enums for bitfield GPOCTRL_GPO4 (width: 1)UL
#define PBE_GPOCTRL_GPO4_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO4_ONE                         0x1UL
// bitfield: GPOCTRL_GPO3
#define PBE_GPOCTRL_GPO3                             3UL
#define RF24_PBE_GPOCTRL_GPO3_S                  3UL
#define PBE_GPOCTRL_GPO3_BM                          0x00000008UL
#define RF24_PBE_GPOCTRL_GPO3_M                  0x00000008UL
// enums for bitfield GPOCTRL_GPO3 (width: 1)UL
#define PBE_GPOCTRL_GPO3_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO3_ONE                         0x1UL
// bitfield: GPOCTRL_GPO2
#define PBE_GPOCTRL_GPO2                             2UL
#define RF24_PBE_GPOCTRL_GPO2_S                  2UL
#define PBE_GPOCTRL_GPO2_BM                          0x00000004UL
#define RF24_PBE_GPOCTRL_GPO2_M                  0x00000004UL
// enums for bitfield GPOCTRL_GPO2 (width: 1)UL
#define PBE_GPOCTRL_GPO2_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO2_ONE                         0x1UL
// bitfield: GPOCTRL_GPO1
#define PBE_GPOCTRL_GPO1                             1UL
#define RF24_PBE_GPOCTRL_GPO1_S                  1UL
#define PBE_GPOCTRL_GPO1_BM                          0x00000002UL
#define RF24_PBE_GPOCTRL_GPO1_M                  0x00000002UL
// enums for bitfield GPOCTRL_GPO1 (width: 1)UL
#define PBE_GPOCTRL_GPO1_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO1_ONE                         0x1UL
// bitfield: GPOCTRL_GPO0
#define PBE_GPOCTRL_GPO0                             0UL
#define RF24_PBE_GPOCTRL_GPO0_S                  0UL
#define PBE_GPOCTRL_GPO0_BM                          0x00000001UL
#define RF24_PBE_GPOCTRL_GPO0_M                  0x00000001UL
// enums for bitfield GPOCTRL_GPO0 (width: 1)UL
#define PBE_GPOCTRL_GPO0_ZERO                        0x0UL
#define PBE_GPOCTRL_GPO0_ONE                         0x1UL
// --------------------------------------------------------------
// MDMFWR
// 
#define PBE_MDMFWR_ADR (PBE_BASE + 0x0118UL)
static volatile unsigned long* const SP_PBE_MDMFWR = (unsigned long*) PBE_MDMFWR_ADR;
#define S_PBE_MDMFWR (*SP_PBE_MDMFWR)
#define RF24_PBE_O_MDMFWR                        280
// bitfield: MDMFWR_PAYLOADIN
#define PBE_MDMFWR_PAYLOADIN                         0UL
#define RF24_PBE_MDMFWR_PAYLOADIN_S              0UL
#define PBE_MDMFWR_PAYLOADIN_BM                      0x0000FFFFUL
#define RF24_PBE_MDMFWR_PAYLOADIN_M              0x0000FFFFUL
// enums for bitfield MDMFWR_PAYLOADIN (width: 16)UL
#define PBE_MDMFWR_PAYLOADIN_ALLZEROS                0x0000UL
#define PBE_MDMFWR_PAYLOADIN_ALLONES                 0xFFFFUL
// --------------------------------------------------------------
// MDMFRD
// 
#define PBE_MDMFRD_ADR (PBE_BASE + 0x011CUL)
static volatile unsigned long* const SP_PBE_MDMFRD = (unsigned long*) PBE_MDMFRD_ADR;
#define S_PBE_MDMFRD (*SP_PBE_MDMFRD)
#define RF24_PBE_O_MDMFRD                        284
// bitfield: MDMFRD_PAYLOADOUT
#define PBE_MDMFRD_PAYLOADOUT                        0UL
#define RF24_PBE_MDMFRD_PAYLOADOUT_S             0UL
#define PBE_MDMFRD_PAYLOADOUT_BM                     0x0000FFFFUL
#define RF24_PBE_MDMFRD_PAYLOADOUT_M             0x0000FFFFUL
// enums for bitfield MDMFRD_PAYLOADOUT (width: 16)UL
#define PBE_MDMFRD_PAYLOADOUT_ALLZEROS               0x0000UL
#define PBE_MDMFRD_PAYLOADOUT_ALLONES                0xFFFFUL
// --------------------------------------------------------------
// MDMFWRCTL
// 
#define PBE_MDMFWRCTL_ADR (PBE_BASE + 0x0120UL)
static volatile unsigned long* const SP_PBE_MDMFWRCTL = (unsigned long*) PBE_MDMFWRCTL_ADR;
#define S_PBE_MDMFWRCTL (*SP_PBE_MDMFWRCTL)
#define RF24_PBE_O_MDMFWRCTL                     288
// bitfield: MDMFWRCTL_WORDSZWR
#define PBE_MDMFWRCTL_WORDSZWR                       0UL
#define RF24_PBE_MDMFWRCTL_WORDSZWR_S            0UL
#define PBE_MDMFWRCTL_WORDSZWR_BM                    0x0000000FUL
#define RF24_PBE_MDMFWRCTL_WORDSZWR_M            0x0000000FUL
// enums for bitfield MDMFWRCTL_WORDSZWR (width: 4)UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS1                 0x0UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS2                 0x1UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS3                 0x2UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS4                 0x3UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS5                 0x4UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS6                 0x5UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS7                 0x6UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS8                 0x7UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS9                 0x8UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS10                0x9UL
#define PBE_MDMFWRCTL_WORDSZWR_BITS11                0xAUL
#define PBE_MDMFWRCTL_WORDSZWR_BITS12                0xBUL
#define PBE_MDMFWRCTL_WORDSZWR_BITS13                0xCUL
#define PBE_MDMFWRCTL_WORDSZWR_BITS14                0xDUL
#define PBE_MDMFWRCTL_WORDSZWR_BITS15                0xEUL
#define PBE_MDMFWRCTL_WORDSZWR_BITS16                0xFUL
// --------------------------------------------------------------
// MDMFRDCTL
// 
#define PBE_MDMFRDCTL_ADR (PBE_BASE + 0x0124UL)
static volatile unsigned long* const SP_PBE_MDMFRDCTL = (unsigned long*) PBE_MDMFRDCTL_ADR;
#define S_PBE_MDMFRDCTL (*SP_PBE_MDMFRDCTL)
#define RF24_PBE_O_MDMFRDCTL                     292
// bitfield: MDMFRDCTL_WORDSZRD
#define PBE_MDMFRDCTL_WORDSZRD                       0UL
#define RF24_PBE_MDMFRDCTL_WORDSZRD_S            0UL
#define PBE_MDMFRDCTL_WORDSZRD_BM                    0x0000000FUL
#define RF24_PBE_MDMFRDCTL_WORDSZRD_M            0x0000000FUL
// enums for bitfield MDMFRDCTL_WORDSZRD (width: 4)UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS1                 0x0UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS2                 0x1UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS3                 0x2UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS4                 0x3UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS5                 0x4UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS6                 0x5UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS7                 0x6UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS8                 0x7UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS9                 0x8UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS10                0x9UL
#define PBE_MDMFRDCTL_WORDSZRD_BITS11                0xAUL
#define PBE_MDMFRDCTL_WORDSZRD_BITS12                0xBUL
#define PBE_MDMFRDCTL_WORDSZRD_BITS13                0xCUL
#define PBE_MDMFRDCTL_WORDSZRD_BITS14                0xDUL
#define PBE_MDMFRDCTL_WORDSZRD_BITS15                0xEUL
#define PBE_MDMFRDCTL_WORDSZRD_BITS16                0xFUL
// --------------------------------------------------------------
// MDMFCFG
// 
#define PBE_MDMFCFG_ADR (PBE_BASE + 0x0128UL)
static volatile unsigned long* const SP_PBE_MDMFCFG = (unsigned long*) PBE_MDMFCFG_ADR;
#define S_PBE_MDMFCFG (*SP_PBE_MDMFCFG)
#define RF24_PBE_O_MDMFCFG                       296
// bitfield: MDMFCFG_AFULLTHR
#define PBE_MDMFCFG_AFULLTHR                         8UL
#define RF24_PBE_MDMFCFG_AFULLTHR_S              8UL
#define PBE_MDMFCFG_AFULLTHR_BM                      0x0000FF00UL
#define RF24_PBE_MDMFCFG_AFULLTHR_M              0x0000FF00UL
// enums for bitfield MDMFCFG_AFULLTHR (width: 8)UL
#define PBE_MDMFCFG_AFULLTHR_ALLZEROS                0x00UL
#define PBE_MDMFCFG_AFULLTHR_ALLONES                 0xFFUL
// bitfield: MDMFCFG_AEMPTYTHR
#define PBE_MDMFCFG_AEMPTYTHR                        0UL
#define RF24_PBE_MDMFCFG_AEMPTYTHR_S             0UL
#define PBE_MDMFCFG_AEMPTYTHR_BM                     0x000000FFUL
#define RF24_PBE_MDMFCFG_AEMPTYTHR_M             0x000000FFUL
// enums for bitfield MDMFCFG_AEMPTYTHR (width: 8)UL
#define PBE_MDMFCFG_AEMPTYTHR_ALLZEROS               0x00UL
#define PBE_MDMFCFG_AEMPTYTHR_ALLONES                0xFFUL
// --------------------------------------------------------------
// MDMFSTA
// 
#define PBE_MDMFSTA_ADR (PBE_BASE + 0x012CUL)
static volatile unsigned long* const SP_PBE_MDMFSTA = (unsigned long*) PBE_MDMFSTA_ADR;
#define S_PBE_MDMFSTA (*SP_PBE_MDMFSTA)
#define RF24_PBE_O_MDMFSTA                       300
// bitfield: MDMFSTA_OVFL
#define PBE_MDMFSTA_OVFL                             5UL
#define RF24_PBE_MDMFSTA_OVFL_S                  5UL
#define PBE_MDMFSTA_OVFL_BM                          0x00000020UL
#define RF24_PBE_MDMFSTA_OVFL_M                  0x00000020UL
// enums for bitfield MDMFSTA_OVFL (width: 1)UL
#define PBE_MDMFSTA_OVFL_ZERO                        0x0UL
#define PBE_MDMFSTA_OVFL_ONE                         0x1UL
// bitfield: MDMFSTA_ALMOSTFULL
#define PBE_MDMFSTA_ALMOSTFULL                       4UL
#define RF24_PBE_MDMFSTA_ALMOSTFULL_S            4UL
#define PBE_MDMFSTA_ALMOSTFULL_BM                    0x00000010UL
#define RF24_PBE_MDMFSTA_ALMOSTFULL_M            0x00000010UL
// enums for bitfield MDMFSTA_ALMOSTFULL (width: 1)UL
#define PBE_MDMFSTA_ALMOSTFULL_ZERO                  0x0UL
#define PBE_MDMFSTA_ALMOSTFULL_ONE                   0x1UL
// bitfield: MDMFSTA_ALMOSTEMPTY
#define PBE_MDMFSTA_ALMOSTEMPTY                      3UL
#define RF24_PBE_MDMFSTA_ALMOSTEMPTY_S           3UL
#define PBE_MDMFSTA_ALMOSTEMPTY_BM                   0x00000008UL
#define RF24_PBE_MDMFSTA_ALMOSTEMPTY_M           0x00000008UL
// enums for bitfield MDMFSTA_ALMOSTEMPTY (width: 1)UL
#define PBE_MDMFSTA_ALMOSTEMPTY_ZERO                 0x0UL
#define PBE_MDMFSTA_ALMOSTEMPTY_ONE                  0x1UL
// bitfield: MDMFSTA_UNFL
#define PBE_MDMFSTA_UNFL                             2UL
#define RF24_PBE_MDMFSTA_UNFL_S                  2UL
#define PBE_MDMFSTA_UNFL_BM                          0x00000004UL
#define RF24_PBE_MDMFSTA_UNFL_M                  0x00000004UL
// enums for bitfield MDMFSTA_UNFL (width: 1)UL
#define PBE_MDMFSTA_UNFL_ZERO                        0x0UL
#define PBE_MDMFSTA_UNFL_ONE                         0x1UL
// bitfield: MDMFSTA_RXVALID
#define PBE_MDMFSTA_RXVALID                          1UL
#define RF24_PBE_MDMFSTA_RXVALID_S               1UL
#define PBE_MDMFSTA_RXVALID_BM                       0x00000002UL
#define RF24_PBE_MDMFSTA_RXVALID_M               0x00000002UL
// enums for bitfield MDMFSTA_RXVALID (width: 1)UL
#define PBE_MDMFSTA_RXVALID_ZERO                     0x0UL
#define PBE_MDMFSTA_RXVALID_ONE                      0x1UL
// bitfield: MDMFSTA_TXREADY
#define PBE_MDMFSTA_TXREADY                          0UL
#define RF24_PBE_MDMFSTA_TXREADY_S               0UL
#define PBE_MDMFSTA_TXREADY_BM                       0x00000001UL
#define RF24_PBE_MDMFSTA_TXREADY_M               0x00000001UL
// enums for bitfield MDMFSTA_TXREADY (width: 1)UL
#define PBE_MDMFSTA_TXREADY_ZERO                     0x0UL
#define PBE_MDMFSTA_TXREADY_ONE                      0x1UL
// --------------------------------------------------------------
// PHASTA
// 
#define PBE_PHASTA_ADR (PBE_BASE + 0x0134UL)
static volatile unsigned long* const SP_PBE_PHASTA = (unsigned long*) PBE_PHASTA_ADR;
#define S_PBE_PHASTA (*SP_PBE_PHASTA)
#define RF24_PBE_O_PHASTA                        308
// bitfield: PHASTA_BUSY
#define PBE_PHASTA_BUSY                              0UL
#define RF24_PBE_PHASTA_BUSY_S                   0UL
#define PBE_PHASTA_BUSY_BM                           0x00000003UL
#define RF24_PBE_PHASTA_BUSY_M                   0x00000003UL
// enums for bitfield PHASTA_BUSY (width: 2)UL
#define PBE_PHASTA_BUSY_IDLE                         0x0UL
#define PBE_PHASTA_BUSY_BUSY                         0x1UL
// --------------------------------------------------------------
// LFSR0L
// 
#define PBE_LFSR0L_ADR (PBE_BASE + 0x0138UL)
static volatile unsigned long* const SP_PBE_LFSR0L = (unsigned long*) PBE_LFSR0L_ADR;
#define S_PBE_LFSR0L (*SP_PBE_LFSR0L)
#define RF24_PBE_O_LFSR0L                        312
// bitfield: LFSR0L_VALLSB
#define PBE_LFSR0L_VALLSB                            0UL
#define RF24_PBE_LFSR0L_VALLSB_S                 0UL
#define PBE_LFSR0L_VALLSB_BM                         0x0000FFFFUL
#define RF24_PBE_LFSR0L_VALLSB_M                 0x0000FFFFUL
// enums for bitfield LFSR0L_VALLSB (width: 16)UL
#define PBE_LFSR0L_VALLSB_ALLZEROS                   0x0000UL
#define PBE_LFSR0L_VALLSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// LFSR0H
// 
#define PBE_LFSR0H_ADR (PBE_BASE + 0x013CUL)
static volatile unsigned long* const SP_PBE_LFSR0H = (unsigned long*) PBE_LFSR0H_ADR;
#define S_PBE_LFSR0H (*SP_PBE_LFSR0H)
#define RF24_PBE_O_LFSR0H                        316
// bitfield: LFSR0H_VALMSB
#define PBE_LFSR0H_VALMSB                            0UL
#define RF24_PBE_LFSR0H_VALMSB_S                 0UL
#define PBE_LFSR0H_VALMSB_BM                         0x0000FFFFUL
#define RF24_PBE_LFSR0H_VALMSB_M                 0x0000FFFFUL
// enums for bitfield LFSR0H_VALMSB (width: 16)UL
#define PBE_LFSR0H_VALMSB_ALLZEROS                   0x0000UL
#define PBE_LFSR0H_VALMSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// LFSR0BRL
// 
#define PBE_LFSR0BRL_ADR (PBE_BASE + 0x0140UL)
static volatile unsigned long* const SP_PBE_LFSR0BRL = (unsigned long*) PBE_LFSR0BRL_ADR;
#define S_PBE_LFSR0BRL (*SP_PBE_LFSR0BRL)
#define RF24_PBE_O_LFSR0BRL                      320
// bitfield: LFSR0BRL_VALLSB
#define PBE_LFSR0BRL_VALLSB                          0UL
#define RF24_PBE_LFSR0BRL_VALLSB_S               0UL
#define PBE_LFSR0BRL_VALLSB_BM                       0x0000FFFFUL
#define RF24_PBE_LFSR0BRL_VALLSB_M               0x0000FFFFUL
// enums for bitfield LFSR0BRL_VALLSB (width: 16)UL
#define PBE_LFSR0BRL_VALLSB_ALLZEROS                 0x0000UL
#define PBE_LFSR0BRL_VALLSB_ALLONES                  0xFFFFUL
// --------------------------------------------------------------
// LFSR0BRH
// 
#define PBE_LFSR0BRH_ADR (PBE_BASE + 0x0144UL)
static volatile unsigned long* const SP_PBE_LFSR0BRH = (unsigned long*) PBE_LFSR0BRH_ADR;
#define S_PBE_LFSR0BRH (*SP_PBE_LFSR0BRH)
#define RF24_PBE_O_LFSR0BRH                      324
// bitfield: LFSR0BRH_VALMSB
#define PBE_LFSR0BRH_VALMSB                          0UL
#define RF24_PBE_LFSR0BRH_VALMSB_S               0UL
#define PBE_LFSR0BRH_VALMSB_BM                       0x0000FFFFUL
#define RF24_PBE_LFSR0BRH_VALMSB_M               0x0000FFFFUL
// enums for bitfield LFSR0BRH_VALMSB (width: 16)UL
#define PBE_LFSR0BRH_VALMSB_ALLZEROS                 0x0000UL
#define PBE_LFSR0BRH_VALMSB_ALLONES                  0xFFFFUL
// --------------------------------------------------------------
// LFSR1L
// 
#define PBE_LFSR1L_ADR (PBE_BASE + 0x0148UL)
static volatile unsigned long* const SP_PBE_LFSR1L = (unsigned long*) PBE_LFSR1L_ADR;
#define S_PBE_LFSR1L (*SP_PBE_LFSR1L)
#define RF24_PBE_O_LFSR1L                        328
// bitfield: LFSR1L_VALLSB
#define PBE_LFSR1L_VALLSB                            0UL
#define RF24_PBE_LFSR1L_VALLSB_S                 0UL
#define PBE_LFSR1L_VALLSB_BM                         0x0000FFFFUL
#define RF24_PBE_LFSR1L_VALLSB_M                 0x0000FFFFUL
// enums for bitfield LFSR1L_VALLSB (width: 16)UL
#define PBE_LFSR1L_VALLSB_ALLZEROS                   0x0000UL
#define PBE_LFSR1L_VALLSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// LFSR1H
// 
#define PBE_LFSR1H_ADR (PBE_BASE + 0x014CUL)
static volatile unsigned long* const SP_PBE_LFSR1H = (unsigned long*) PBE_LFSR1H_ADR;
#define S_PBE_LFSR1H (*SP_PBE_LFSR1H)
#define RF24_PBE_O_LFSR1H                        332
// bitfield: LFSR1H_VALMSB
#define PBE_LFSR1H_VALMSB                            0UL
#define RF24_PBE_LFSR1H_VALMSB_S                 0UL
#define PBE_LFSR1H_VALMSB_BM                         0x0000FFFFUL
#define RF24_PBE_LFSR1H_VALMSB_M                 0x0000FFFFUL
// enums for bitfield LFSR1H_VALMSB (width: 16)UL
#define PBE_LFSR1H_VALMSB_ALLZEROS                   0x0000UL
#define PBE_LFSR1H_VALMSB_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// LFSR1BRL
// 
#define PBE_LFSR1BRL_ADR (PBE_BASE + 0x0150UL)
static volatile unsigned long* const SP_PBE_LFSR1BRL = (unsigned long*) PBE_LFSR1BRL_ADR;
#define S_PBE_LFSR1BRL (*SP_PBE_LFSR1BRL)
#define RF24_PBE_O_LFSR1BRL                      336
// bitfield: LFSR1BRL_VALLSB
#define PBE_LFSR1BRL_VALLSB                          0UL
#define RF24_PBE_LFSR1BRL_VALLSB_S               0UL
#define PBE_LFSR1BRL_VALLSB_BM                       0x0000FFFFUL
#define RF24_PBE_LFSR1BRL_VALLSB_M               0x0000FFFFUL
// enums for bitfield LFSR1BRL_VALLSB (width: 16)UL
#define PBE_LFSR1BRL_VALLSB_ALLZEROS                 0x0000UL
#define PBE_LFSR1BRL_VALLSB_ALLONES                  0xFFFFUL
// --------------------------------------------------------------
// LFSR1BRH
// 
#define PBE_LFSR1BRH_ADR (PBE_BASE + 0x0154UL)
static volatile unsigned long* const SP_PBE_LFSR1BRH = (unsigned long*) PBE_LFSR1BRH_ADR;
#define S_PBE_LFSR1BRH (*SP_PBE_LFSR1BRH)
#define RF24_PBE_O_LFSR1BRH                      340
// bitfield: LFSR1BRH_VALMSB
#define PBE_LFSR1BRH_VALMSB                          0UL
#define RF24_PBE_LFSR1BRH_VALMSB_S               0UL
#define PBE_LFSR1BRH_VALMSB_BM                       0x0000FFFFUL
#define RF24_PBE_LFSR1BRH_VALMSB_M               0x0000FFFFUL
// enums for bitfield LFSR1BRH_VALMSB (width: 16)UL
#define PBE_LFSR1BRH_VALMSB_ALLZEROS                 0x0000UL
#define PBE_LFSR1BRH_VALMSB_ALLONES                  0xFFFFUL
// --------------------------------------------------------------
// LFSR0INL
// 
#define PBE_LFSR0INL_ADR (PBE_BASE + 0x0158UL)
static volatile unsigned long* const SP_PBE_LFSR0INL = (unsigned long*) PBE_LFSR0INL_ADR;
#define S_PBE_LFSR0INL (*SP_PBE_LFSR0INL)
#define RF24_PBE_O_LFSR0INL                      344
// bitfield: LFSR0INL_VAL
#define PBE_LFSR0INL_VAL                             0UL
#define RF24_PBE_LFSR0INL_VAL_S                  0UL
#define PBE_LFSR0INL_VAL_BM                          0x0000FFFFUL
#define RF24_PBE_LFSR0INL_VAL_M                  0x0000FFFFUL
// enums for bitfield LFSR0INL_VAL (width: 16)UL
#define PBE_LFSR0INL_VAL_ALLZEROS                    0x0000UL
#define PBE_LFSR0INL_VAL_ALLONES                     0x0003UL
// --------------------------------------------------------------
// LFSR0N
// 
#define PBE_LFSR0N_ADR (PBE_BASE + 0x015CUL)
static volatile unsigned long* const SP_PBE_LFSR0N = (unsigned long*) PBE_LFSR0N_ADR;
#define S_PBE_LFSR0N (*SP_PBE_LFSR0N)
#define RF24_PBE_O_LFSR0N                        348
// bitfield: LFSR0N_SIZE
#define PBE_LFSR0N_SIZE                              0UL
#define RF24_PBE_LFSR0N_SIZE_S                   0UL
#define PBE_LFSR0N_SIZE_BM                           0x0000000FUL
#define RF24_PBE_LFSR0N_SIZE_M                   0x0000000FUL
// enums for bitfield LFSR0N_SIZE (width: 4)UL
#define PBE_LFSR0N_SIZE_ALLZEROS                     0x0UL
#define PBE_LFSR0N_SIZE_ALLONES                      0xFUL
// --------------------------------------------------------------
// LFSR0INM
// 
#define PBE_LFSR0INM_ADR (PBE_BASE + 0x0160UL)
static volatile unsigned long* const SP_PBE_LFSR0INM = (unsigned long*) PBE_LFSR0INM_ADR;
#define S_PBE_LFSR0INM (*SP_PBE_LFSR0INM)
#define RF24_PBE_O_LFSR0INM                      352
// bitfield: LFSR0INM_VAL
#define PBE_LFSR0INM_VAL                             0UL
#define RF24_PBE_LFSR0INM_VAL_S                  0UL
#define PBE_LFSR0INM_VAL_BM                          0x0000FFFFUL
#define RF24_PBE_LFSR0INM_VAL_M                  0x0000FFFFUL
// enums for bitfield LFSR0INM_VAL (width: 16)UL
#define PBE_LFSR0INM_VAL_ZERO                        0x0000UL
#define PBE_LFSR0INM_VAL_ONE                         0x0001UL
// --------------------------------------------------------------
// PHAOUT0
// 
#define PBE_PHAOUT0_ADR (PBE_BASE + 0x0164UL)
static volatile unsigned long* const SP_PBE_PHAOUT0 = (unsigned long*) PBE_PHAOUT0_ADR;
#define S_PBE_PHAOUT0 (*SP_PBE_PHAOUT0)
#define RF24_PBE_O_PHAOUT0                       356
// bitfield: PHAOUT0_VAL
#define PBE_PHAOUT0_VAL                              0UL
#define RF24_PBE_PHAOUT0_VAL_S                   0UL
#define PBE_PHAOUT0_VAL_BM                           0x0000FFFFUL
#define RF24_PBE_PHAOUT0_VAL_M                   0x0000FFFFUL
// enums for bitfield PHAOUT0_VAL (width: 16)UL
#define PBE_PHAOUT0_VAL_ALLZEROS                     0x0000UL
#define PBE_PHAOUT0_VAL_ALLONES                      0xDCD7UL
// --------------------------------------------------------------
// LFSR1INL
// 
#define PBE_LFSR1INL_ADR (PBE_BASE + 0x0168UL)
static volatile unsigned long* const SP_PBE_LFSR1INL = (unsigned long*) PBE_LFSR1INL_ADR;
#define S_PBE_LFSR1INL (*SP_PBE_LFSR1INL)
#define RF24_PBE_O_LFSR1INL                      360
// bitfield: LFSR1INL_VAL
#define PBE_LFSR1INL_VAL                             0UL
#define RF24_PBE_LFSR1INL_VAL_S                  0UL
#define PBE_LFSR1INL_VAL_BM                          0x0000FFFFUL
#define RF24_PBE_LFSR1INL_VAL_M                  0x0000FFFFUL
// enums for bitfield LFSR1INL_VAL (width: 16)UL
#define PBE_LFSR1INL_VAL_ALLZEROS                    0x0000UL
#define PBE_LFSR1INL_VAL_ALLONES                     0x0003UL
// --------------------------------------------------------------
// LFSR1N
// 
#define PBE_LFSR1N_ADR (PBE_BASE + 0x016CUL)
static volatile unsigned long* const SP_PBE_LFSR1N = (unsigned long*) PBE_LFSR1N_ADR;
#define S_PBE_LFSR1N (*SP_PBE_LFSR1N)
#define RF24_PBE_O_LFSR1N                        364
// bitfield: LFSR1N_SIZE
#define PBE_LFSR1N_SIZE                              0UL
#define RF24_PBE_LFSR1N_SIZE_S                   0UL
#define PBE_LFSR1N_SIZE_BM                           0x0000000FUL
#define RF24_PBE_LFSR1N_SIZE_M                   0x0000000FUL
// enums for bitfield LFSR1N_SIZE (width: 4)UL
#define PBE_LFSR1N_SIZE_ALLZEROS                     0x0UL
#define PBE_LFSR1N_SIZE_ALLONES                      0xFUL
// --------------------------------------------------------------
// LFSR1INM
// 
#define PBE_LFSR1INM_ADR (PBE_BASE + 0x0170UL)
static volatile unsigned long* const SP_PBE_LFSR1INM = (unsigned long*) PBE_LFSR1INM_ADR;
#define S_PBE_LFSR1INM (*SP_PBE_LFSR1INM)
#define RF24_PBE_O_LFSR1INM                      368
// bitfield: LFSR1INM_VAL
#define PBE_LFSR1INM_VAL                             0UL
#define RF24_PBE_LFSR1INM_VAL_S                  0UL
#define PBE_LFSR1INM_VAL_BM                          0x0000FFFFUL
#define RF24_PBE_LFSR1INM_VAL_M                  0x0000FFFFUL
// enums for bitfield LFSR1INM_VAL (width: 16)UL
#define PBE_LFSR1INM_VAL_ZERO                        0x0000UL
#define PBE_LFSR1INM_VAL_ONE                         0x0001UL
// --------------------------------------------------------------
// PHAOUT0BR
// 
#define PBE_PHAOUT0BR_ADR (PBE_BASE + 0x0174UL)
static volatile unsigned long* const SP_PBE_PHAOUT0BR = (unsigned long*) PBE_PHAOUT0BR_ADR;
#define S_PBE_PHAOUT0BR (*SP_PBE_PHAOUT0BR)
#define RF24_PBE_O_PHAOUT0BR                     372
// bitfield: PHAOUT0BR_VAL
#define PBE_PHAOUT0BR_VAL                            0UL
#define RF24_PBE_PHAOUT0BR_VAL_S                 0UL
#define PBE_PHAOUT0BR_VAL_BM                         0x0000FFFFUL
#define RF24_PBE_PHAOUT0BR_VAL_M                 0x0000FFFFUL
// enums for bitfield PHAOUT0BR_VAL (width: 16)UL
#define PBE_PHAOUT0BR_VAL_ALLZEROS                   0x0000UL
#define PBE_PHAOUT0BR_VAL_ALLONES                    0xFFFFUL
// --------------------------------------------------------------
// SYSTIM0L
// 
#define PBE_SYSTIM0L_ADR (PBE_BASE + 0x0180UL)
static volatile unsigned long* const SP_PBE_SYSTIM0L = (unsigned long*) PBE_SYSTIM0L_ADR;
#define S_PBE_SYSTIM0L (*SP_PBE_SYSTIM0L)
#define RF24_PBE_O_SYSTIM0L                      384
// bitfield: SYSTIM0L_VALLSB
#define PBE_SYSTIM0L_VALLSB                          0UL
#define RF24_PBE_SYSTIM0L_VALLSB_S               0UL
#define PBE_SYSTIM0L_VALLSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM0L_VALLSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM0L_VALLSB (width: 16)UL
#define PBE_SYSTIM0L_VALLSB_ZERO                     0x0000UL
#define PBE_SYSTIM0L_VALLSB_ONE                      0x0001UL
// --------------------------------------------------------------
// SYSTIM0H
// 
#define PBE_SYSTIM0H_ADR (PBE_BASE + 0x0184UL)
static volatile unsigned long* const SP_PBE_SYSTIM0H = (unsigned long*) PBE_SYSTIM0H_ADR;
#define S_PBE_SYSTIM0H (*SP_PBE_SYSTIM0H)
#define RF24_PBE_O_SYSTIM0H                      388
// bitfield: SYSTIM0H_VALMSB
#define PBE_SYSTIM0H_VALMSB                          0UL
#define RF24_PBE_SYSTIM0H_VALMSB_S               0UL
#define PBE_SYSTIM0H_VALMSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM0H_VALMSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM0H_VALMSB (width: 16)UL
#define PBE_SYSTIM0H_VALMSB_ZERO                     0x0000UL
#define PBE_SYSTIM0H_VALMSB_ONE                      0x0001UL
// --------------------------------------------------------------
// SYSTIM1L
// 
#define PBE_SYSTIM1L_ADR (PBE_BASE + 0x0188UL)
static volatile unsigned long* const SP_PBE_SYSTIM1L = (unsigned long*) PBE_SYSTIM1L_ADR;
#define S_PBE_SYSTIM1L (*SP_PBE_SYSTIM1L)
#define RF24_PBE_O_SYSTIM1L                      392
// bitfield: SYSTIM1L_VALLSB
#define PBE_SYSTIM1L_VALLSB                          0UL
#define RF24_PBE_SYSTIM1L_VALLSB_S               0UL
#define PBE_SYSTIM1L_VALLSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM1L_VALLSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM1L_VALLSB (width: 16)UL
#define PBE_SYSTIM1L_VALLSB_ZERO                     0x0000UL
#define PBE_SYSTIM1L_VALLSB_ONE                      0x0001UL
// --------------------------------------------------------------
// SYSTIM1H
// 
#define PBE_SYSTIM1H_ADR (PBE_BASE + 0x018CUL)
static volatile unsigned long* const SP_PBE_SYSTIM1H = (unsigned long*) PBE_SYSTIM1H_ADR;
#define S_PBE_SYSTIM1H (*SP_PBE_SYSTIM1H)
#define RF24_PBE_O_SYSTIM1H                      396
// bitfield: SYSTIM1H_VALMSB
#define PBE_SYSTIM1H_VALMSB                          0UL
#define RF24_PBE_SYSTIM1H_VALMSB_S               0UL
#define PBE_SYSTIM1H_VALMSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM1H_VALMSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM1H_VALMSB (width: 16)UL
#define PBE_SYSTIM1H_VALMSB_ZERO                     0x0000UL
#define PBE_SYSTIM1H_VALMSB_ONE                      0x0001UL
// --------------------------------------------------------------
// SYSTIM2L
// 
#define PBE_SYSTIM2L_ADR (PBE_BASE + 0x0190UL)
static volatile unsigned long* const SP_PBE_SYSTIM2L = (unsigned long*) PBE_SYSTIM2L_ADR;
#define S_PBE_SYSTIM2L (*SP_PBE_SYSTIM2L)
#define RF24_PBE_O_SYSTIM2L                      400
// bitfield: SYSTIM2L_VALLSB
#define PBE_SYSTIM2L_VALLSB                          0UL
#define RF24_PBE_SYSTIM2L_VALLSB_S               0UL
#define PBE_SYSTIM2L_VALLSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM2L_VALLSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM2L_VALLSB (width: 16)UL
#define PBE_SYSTIM2L_VALLSB_ZERO                     0x0000UL
#define PBE_SYSTIM2L_VALLSB_ONE                      0x0001UL
// --------------------------------------------------------------
// SYSTIM2H
// 
#define PBE_SYSTIM2H_ADR (PBE_BASE + 0x0194UL)
static volatile unsigned long* const SP_PBE_SYSTIM2H = (unsigned long*) PBE_SYSTIM2H_ADR;
#define S_PBE_SYSTIM2H (*SP_PBE_SYSTIM2H)
#define RF24_PBE_O_SYSTIM2H                      404
// bitfield: SYSTIM2H_VALMSB
#define PBE_SYSTIM2H_VALMSB                          0UL
#define RF24_PBE_SYSTIM2H_VALMSB_S               0UL
#define PBE_SYSTIM2H_VALMSB_BM                       0x0000FFFFUL
#define RF24_PBE_SYSTIM2H_VALMSB_M               0x0000FFFFUL
// enums for bitfield SYSTIM2H_VALMSB (width: 16)UL
#define PBE_SYSTIM2H_VALMSB_ZERO                     0x0000UL
#define PBE_SYSTIM2H_VALMSB_ONE                      0x0001UL
// --------------------------------------------------------------
// GPI
// 
#define PBE_GPI_ADR (PBE_BASE + 0x0198UL)
static volatile unsigned long* const SP_PBE_GPI = (unsigned long*) PBE_GPI_ADR;
#define S_PBE_GPI (*SP_PBE_GPI)
#define RF24_PBE_O_GPI                           408
// bitfield: GPI_GPI7
#define PBE_GPI_GPI7                                 7UL
#define RF24_PBE_GPI_GPI7_S                      7UL
#define PBE_GPI_GPI7_BM                              0x00000080UL
#define RF24_PBE_GPI_GPI7_M                      0x00000080UL
// enums for bitfield GPI_GPI7 (width: 1)UL
#define PBE_GPI_GPI7_ZERO                            0x0UL
#define PBE_GPI_GPI7_ONE                             0x1UL
// bitfield: GPI_GPI6
#define PBE_GPI_GPI6                                 6UL
#define RF24_PBE_GPI_GPI6_S                      6UL
#define PBE_GPI_GPI6_BM                              0x00000040UL
#define RF24_PBE_GPI_GPI6_M                      0x00000040UL
// enums for bitfield GPI_GPI6 (width: 1)UL
#define PBE_GPI_GPI6_ZERO                            0x0UL
#define PBE_GPI_GPI6_ONE                             0x1UL
// bitfield: GPI_GPI5
#define PBE_GPI_GPI5                                 5UL
#define RF24_PBE_GPI_GPI5_S                      5UL
#define PBE_GPI_GPI5_BM                              0x00000020UL
#define RF24_PBE_GPI_GPI5_M                      0x00000020UL
// enums for bitfield GPI_GPI5 (width: 1)UL
#define PBE_GPI_GPI5_ZERO                            0x0UL
#define PBE_GPI_GPI5_ONE                             0x1UL
// bitfield: GPI_GPI4
#define PBE_GPI_GPI4                                 4UL
#define RF24_PBE_GPI_GPI4_S                      4UL
#define PBE_GPI_GPI4_BM                              0x00000010UL
#define RF24_PBE_GPI_GPI4_M                      0x00000010UL
// enums for bitfield GPI_GPI4 (width: 1)UL
#define PBE_GPI_GPI4_ZERO                            0x0UL
#define PBE_GPI_GPI4_ONE                             0x1UL
// bitfield: GPI_GPI3
#define PBE_GPI_GPI3                                 3UL
#define RF24_PBE_GPI_GPI3_S                      3UL
#define PBE_GPI_GPI3_BM                              0x00000008UL
#define RF24_PBE_GPI_GPI3_M                      0x00000008UL
// enums for bitfield GPI_GPI3 (width: 1)UL
#define PBE_GPI_GPI3_ZERO                            0x0UL
#define PBE_GPI_GPI3_ONE                             0x1UL
// bitfield: GPI_GPI2
#define PBE_GPI_GPI2                                 2UL
#define RF24_PBE_GPI_GPI2_S                      2UL
#define PBE_GPI_GPI2_BM                              0x00000004UL
#define RF24_PBE_GPI_GPI2_M                      0x00000004UL
// enums for bitfield GPI_GPI2 (width: 1)UL
#define PBE_GPI_GPI2_ZERO                            0x0UL
#define PBE_GPI_GPI2_ONE                             0x1UL
// bitfield: GPI_GPI1
#define PBE_GPI_GPI1                                 1UL
#define RF24_PBE_GPI_GPI1_S                      1UL
#define PBE_GPI_GPI1_BM                              0x00000002UL
#define RF24_PBE_GPI_GPI1_M                      0x00000002UL
// enums for bitfield GPI_GPI1 (width: 1)UL
#define PBE_GPI_GPI1_ZERO                            0x0UL
#define PBE_GPI_GPI1_ONE                             0x1UL
// bitfield: GPI_GPI0
#define PBE_GPI_GPI0                                 0UL
#define RF24_PBE_GPI_GPI0_S                      0UL
#define PBE_GPI_GPI0_BM                              0x00000001UL
#define RF24_PBE_GPI_GPI0_M                      0x00000001UL
// enums for bitfield GPI_GPI0 (width: 1)UL
#define PBE_GPI_GPI0_ZERO                            0x0UL
#define PBE_GPI_GPI0_ONE                             0x1UL
// --------------------------------------------------------------
// FCMD
// 
#define PBE_FCMD_ADR (PBE_BASE + 0x01A0UL)
static volatile unsigned long* const SP_PBE_FCMD = (unsigned long*) PBE_FCMD_ADR;
#define S_PBE_FCMD (*SP_PBE_FCMD)
#define RF24_PBE_O_FCMD                          416
// bitfield: FCMD_DATA
#define PBE_FCMD_DATA                                0UL
#define RF24_PBE_FCMD_DATA_S                     0UL
#define PBE_FCMD_DATA_BM                             0x000000FFUL
#define RF24_PBE_FCMD_DATA_M                     0x000000FFUL
// enums for bitfield FCMD_DATA (width: 8)UL
#define PBE_FCMD_DATA_RXFIFO_RESET                   0x01UL
#define PBE_FCMD_DATA_RXFIFO_DEALLOC                 0x02UL
#define PBE_FCMD_DATA_TXFIFO_COMMIT                  0x03UL
#define PBE_FCMD_DATA_TXFIFO_DISCARD                 0x04UL
#define PBE_FCMD_DATA_TXFIFO_RETRY                   0x05UL
#define PBE_FCMD_DATA_TXFIFO_DEALLOC                 0x06UL
#define PBE_FCMD_DATA_TXFIFO_RESET                   0x07UL
#define PBE_FCMD_DATA_RXFIFO_COMMIT                  0x08UL
#define PBE_FCMD_DATA_RXFIFO_DISCARD                 0x09UL
#define PBE_FCMD_DATA_RXFIFO_RETRY                   0x0AUL
#define PBE_FCMD_DATA_FIFO_RESET                     0x0BUL
#define PBE_FCMD_DATA_FIFO_DEALLOC                   0x0CUL
#define PBE_FCMD_DATA_FIFO_RETRY                     0x0DUL
#define PBE_FCMD_DATA_FIFO_DISCARD                   0x0EUL
#define PBE_FCMD_DATA_FIFO_COMMIT                    0x0FUL
// --------------------------------------------------------------
// FSTAT
// 
#define PBE_FSTAT_ADR (PBE_BASE + 0x01A4UL)
static volatile unsigned long* const SP_PBE_FSTAT = (unsigned long*) PBE_FSTAT_ADR;
#define S_PBE_FSTAT (*SP_PBE_FSTAT)
#define RF24_PBE_O_FSTAT                         420
// bitfield: FSTAT_TXUNFL
#define PBE_FSTAT_TXUNFL                             11UL
#define RF24_PBE_FSTAT_TXUNFL_S                  11UL
#define PBE_FSTAT_TXUNFL_BM                          0x00000800UL
#define RF24_PBE_FSTAT_TXUNFL_M                  0x00000800UL
// enums for bitfield FSTAT_TXUNFL (width: 1)UL
#define PBE_FSTAT_TXUNFL_FALSE                       0x0UL
#define PBE_FSTAT_TXUNFL_TRUE                        0x1UL
// bitfield: FSTAT_TXOVFL
#define PBE_FSTAT_TXOVFL                             10UL
#define RF24_PBE_FSTAT_TXOVFL_S                  10UL
#define PBE_FSTAT_TXOVFL_BM                          0x00000400UL
#define RF24_PBE_FSTAT_TXOVFL_M                  0x00000400UL
// enums for bitfield FSTAT_TXOVFL (width: 1)UL
#define PBE_FSTAT_TXOVFL_FALSE                       0x0UL
#define PBE_FSTAT_TXOVFL_TRUE                        0x1UL
// bitfield: FSTAT_TXEMPTY
#define PBE_FSTAT_TXEMPTY                            9UL
#define RF24_PBE_FSTAT_TXEMPTY_S                 9UL
#define PBE_FSTAT_TXEMPTY_BM                         0x00000200UL
#define RF24_PBE_FSTAT_TXEMPTY_M                 0x00000200UL
// enums for bitfield FSTAT_TXEMPTY (width: 1)UL
#define PBE_FSTAT_TXEMPTY_FALSE                      0x0UL
#define PBE_FSTAT_TXEMPTY_TRUE                       0x1UL
// bitfield: FSTAT_TXFULL
#define PBE_FSTAT_TXFULL                             8UL
#define RF24_PBE_FSTAT_TXFULL_S                  8UL
#define PBE_FSTAT_TXFULL_BM                          0x00000100UL
#define RF24_PBE_FSTAT_TXFULL_M                  0x00000100UL
// enums for bitfield FSTAT_TXFULL (width: 1)UL
#define PBE_FSTAT_TXFULL_FALSE                       0x0UL
#define PBE_FSTAT_TXFULL_TRUE                        0x1UL
// bitfield: FSTAT_RXUNFL
#define PBE_FSTAT_RXUNFL                             3UL
#define RF24_PBE_FSTAT_RXUNFL_S                  3UL
#define PBE_FSTAT_RXUNFL_BM                          0x00000008UL
#define RF24_PBE_FSTAT_RXUNFL_M                  0x00000008UL
// enums for bitfield FSTAT_RXUNFL (width: 1)UL
#define PBE_FSTAT_RXUNFL_FALSE                       0x0UL
#define PBE_FSTAT_RXUNFL_TRUE                        0x1UL
// bitfield: FSTAT_RXOVFL
#define PBE_FSTAT_RXOVFL                             2UL
#define RF24_PBE_FSTAT_RXOVFL_S                  2UL
#define PBE_FSTAT_RXOVFL_BM                          0x00000004UL
#define RF24_PBE_FSTAT_RXOVFL_M                  0x00000004UL
// enums for bitfield FSTAT_RXOVFL (width: 1)UL
#define PBE_FSTAT_RXOVFL_FALSE                       0x0UL
#define PBE_FSTAT_RXOVFL_TRUE                        0x1UL
// bitfield: FSTAT_RXEMPTY
#define PBE_FSTAT_RXEMPTY                            1UL
#define RF24_PBE_FSTAT_RXEMPTY_S                 1UL
#define PBE_FSTAT_RXEMPTY_BM                         0x00000002UL
#define RF24_PBE_FSTAT_RXEMPTY_M                 0x00000002UL
// enums for bitfield FSTAT_RXEMPTY (width: 1)UL
#define PBE_FSTAT_RXEMPTY_FALSE                      0x0UL
#define PBE_FSTAT_RXEMPTY_TRUE                       0x1UL
// bitfield: FSTAT_RXFULL
#define PBE_FSTAT_RXFULL                             0UL
#define RF24_PBE_FSTAT_RXFULL_S                  0UL
#define PBE_FSTAT_RXFULL_BM                          0x00000001UL
#define RF24_PBE_FSTAT_RXFULL_M                  0x00000001UL
// enums for bitfield FSTAT_RXFULL (width: 1)UL
#define PBE_FSTAT_RXFULL_FALSE                       0x0UL
#define PBE_FSTAT_RXFULL_TRUE                        0x1UL
// --------------------------------------------------------------
// RXFWP
// 
#define PBE_RXFWP_ADR (PBE_BASE + 0x01A8UL)
static volatile unsigned long* const SP_PBE_RXFWP = (unsigned long*) PBE_RXFWP_ADR;
#define S_PBE_RXFWP (*SP_PBE_RXFWP)
#define RF24_PBE_O_RXFWP                         424
// bitfield: RXFWP_PTR
#define PBE_RXFWP_PTR                                0UL
#define RF24_PBE_RXFWP_PTR_S                     0UL
#define PBE_RXFWP_PTR_BM                             0x000003FFUL
#define RF24_PBE_RXFWP_PTR_M                     0x000003FFUL
// enums for bitfield RXFWP_PTR (width: 10)UL
#define PBE_RXFWP_PTR_ALLZEROS                       0x000UL
#define PBE_RXFWP_PTR_ALLONES                        0x3FFUL
// --------------------------------------------------------------
// RXFRP
// 
#define PBE_RXFRP_ADR (PBE_BASE + 0x01ACUL)
static volatile unsigned long* const SP_PBE_RXFRP = (unsigned long*) PBE_RXFRP_ADR;
#define S_PBE_RXFRP (*SP_PBE_RXFRP)
#define RF24_PBE_O_RXFRP                         428
// bitfield: RXFRP_PTR
#define PBE_RXFRP_PTR                                0UL
#define RF24_PBE_RXFRP_PTR_S                     0UL
#define PBE_RXFRP_PTR_BM                             0x000003FFUL
#define RF24_PBE_RXFRP_PTR_M                     0x000003FFUL
// enums for bitfield RXFRP_PTR (width: 10)UL
#define PBE_RXFRP_PTR_ALLZEROS                       0x000UL
#define PBE_RXFRP_PTR_ALLONES                        0x3FFUL
// --------------------------------------------------------------
// RXFSWP
// 
#define PBE_RXFSWP_ADR (PBE_BASE + 0x01B0UL)
static volatile unsigned long* const SP_PBE_RXFSWP = (unsigned long*) PBE_RXFSWP_ADR;
#define S_PBE_RXFSWP (*SP_PBE_RXFSWP)
#define RF24_PBE_O_RXFSWP                        432
// bitfield: RXFSWP_PTR
#define PBE_RXFSWP_PTR                               0UL
#define RF24_PBE_RXFSWP_PTR_S                    0UL
#define PBE_RXFSWP_PTR_BM                            0x000003FFUL
#define RF24_PBE_RXFSWP_PTR_M                    0x000003FFUL
// enums for bitfield RXFSWP_PTR (width: 10)UL
#define PBE_RXFSWP_PTR_ALLZEROS                      0x000UL
#define PBE_RXFSWP_PTR_ALLONES                       0x3FFUL
// --------------------------------------------------------------
// RXFSRP
// 
#define PBE_RXFSRP_ADR (PBE_BASE + 0x01B4UL)
static volatile unsigned long* const SP_PBE_RXFSRP = (unsigned long*) PBE_RXFSRP_ADR;
#define S_PBE_RXFSRP (*SP_PBE_RXFSRP)
#define RF24_PBE_O_RXFSRP                        436
// bitfield: RXFSRP_PTR
#define PBE_RXFSRP_PTR                               0UL
#define RF24_PBE_RXFSRP_PTR_S                    0UL
#define PBE_RXFSRP_PTR_BM                            0x000003FFUL
#define RF24_PBE_RXFSRP_PTR_M                    0x000003FFUL
// enums for bitfield RXFSRP_PTR (width: 10)UL
#define PBE_RXFSRP_PTR_ALLZEROS                      0x000UL
#define PBE_RXFSRP_PTR_ALLONES                       0x3FFUL
// --------------------------------------------------------------
// TXFWP
// 
#define PBE_TXFWP_ADR (PBE_BASE + 0x01B8UL)
static volatile unsigned long* const SP_PBE_TXFWP = (unsigned long*) PBE_TXFWP_ADR;
#define S_PBE_TXFWP (*SP_PBE_TXFWP)
#define RF24_PBE_O_TXFWP                         440
// bitfield: TXFWP_PTR
#define PBE_TXFWP_PTR                                0UL
#define RF24_PBE_TXFWP_PTR_S                     0UL
#define PBE_TXFWP_PTR_BM                             0x000003FFUL
#define RF24_PBE_TXFWP_PTR_M                     0x000003FFUL
// enums for bitfield TXFWP_PTR (width: 10)UL
#define PBE_TXFWP_PTR_ALLZEROS                       0x000UL
#define PBE_TXFWP_PTR_ALLONES                        0x3FFUL
// --------------------------------------------------------------
// TXFRP
// 
#define PBE_TXFRP_ADR (PBE_BASE + 0x01BCUL)
static volatile unsigned long* const SP_PBE_TXFRP = (unsigned long*) PBE_TXFRP_ADR;
#define S_PBE_TXFRP (*SP_PBE_TXFRP)
#define RF24_PBE_O_TXFRP                         444
// bitfield: TXFRP_PTR
#define PBE_TXFRP_PTR                                0UL
#define RF24_PBE_TXFRP_PTR_S                     0UL
#define PBE_TXFRP_PTR_BM                             0x000003FFUL
#define RF24_PBE_TXFRP_PTR_M                     0x000003FFUL
// enums for bitfield TXFRP_PTR (width: 10)UL
#define PBE_TXFRP_PTR_ALLZEROS                       0x000UL
#define PBE_TXFRP_PTR_ALLONES                        0x3FFUL
// --------------------------------------------------------------
// TXFSWP
// 
#define PBE_TXFSWP_ADR (PBE_BASE + 0x01C0UL)
static volatile unsigned long* const SP_PBE_TXFSWP = (unsigned long*) PBE_TXFSWP_ADR;
#define S_PBE_TXFSWP (*SP_PBE_TXFSWP)
#define RF24_PBE_O_TXFSWP                        448
// bitfield: TXFSWP_PTR
#define PBE_TXFSWP_PTR                               0UL
#define RF24_PBE_TXFSWP_PTR_S                    0UL
#define PBE_TXFSWP_PTR_BM                            0x000003FFUL
#define RF24_PBE_TXFSWP_PTR_M                    0x000003FFUL
// enums for bitfield TXFSWP_PTR (width: 10)UL
#define PBE_TXFSWP_PTR_ALLZEROS                      0x000UL
#define PBE_TXFSWP_PTR_ALLONES                       0x3FFUL
// --------------------------------------------------------------
// TXFSRP
// 
#define PBE_TXFSRP_ADR (PBE_BASE + 0x01C4UL)
static volatile unsigned long* const SP_PBE_TXFSRP = (unsigned long*) PBE_TXFSRP_ADR;
#define S_PBE_TXFSRP (*SP_PBE_TXFSRP)
#define RF24_PBE_O_TXFSRP                        452
// bitfield: TXFSRP_PTR
#define PBE_TXFSRP_PTR                               0UL
#define RF24_PBE_TXFSRP_PTR_S                    0UL
#define PBE_TXFSRP_PTR_BM                            0x000003FFUL
#define RF24_PBE_TXFSRP_PTR_M                    0x000003FFUL
// enums for bitfield TXFSRP_PTR (width: 10)UL
#define PBE_TXFSRP_PTR_ALLZEROS                      0x000UL
#define PBE_TXFSRP_PTR_ALLONES_2                     0x3FFUL
// --------------------------------------------------------------
// RXFWRITABLE
// 
#define PBE_RXFWRITABLE_ADR (PBE_BASE + 0x01C8UL)
static volatile unsigned long* const SP_PBE_RXFWRITABLE = (unsigned long*) PBE_RXFWRITABLE_ADR;
#define S_PBE_RXFWRITABLE (*SP_PBE_RXFWRITABLE)
#define RF24_PBE_O_RXFWRITABLE                   456
// bitfield: RXFWRITABLE_BYTES
#define PBE_RXFWRITABLE_BYTES                        0UL
#define RF24_PBE_RXFWRITABLE_BYTES_S             0UL
#define PBE_RXFWRITABLE_BYTES_BM                     0x000003FFUL
#define RF24_PBE_RXFWRITABLE_BYTES_M             0x000003FFUL
// enums for bitfield RXFWRITABLE_BYTES (width: 10)UL
#define PBE_RXFWRITABLE_BYTES_ALLZEROS               0x000UL
#define PBE_RXFWRITABLE_BYTES_ALLONES                0x3FFUL
// --------------------------------------------------------------
// RXFREADABLE
// 
#define PBE_RXFREADABLE_ADR (PBE_BASE + 0x01CCUL)
static volatile unsigned long* const SP_PBE_RXFREADABLE = (unsigned long*) PBE_RXFREADABLE_ADR;
#define S_PBE_RXFREADABLE (*SP_PBE_RXFREADABLE)
#define RF24_PBE_O_RXFREADABLE                   460
// bitfield: RXFREADABLE_BYTES
#define PBE_RXFREADABLE_BYTES                        0UL
#define RF24_PBE_RXFREADABLE_BYTES_S             0UL
#define PBE_RXFREADABLE_BYTES_BM                     0x000003FFUL
#define RF24_PBE_RXFREADABLE_BYTES_M             0x000003FFUL
// enums for bitfield RXFREADABLE_BYTES (width: 10)UL
#define PBE_RXFREADABLE_BYTES_ALLZEROS               0x000UL
#define PBE_RXFREADABLE_BYTES_ALLONES                0x3FFUL
// --------------------------------------------------------------
// TXFWRITABLE
// 
#define PBE_TXFWRITABLE_ADR (PBE_BASE + 0x01D0UL)
static volatile unsigned long* const SP_PBE_TXFWRITABLE = (unsigned long*) PBE_TXFWRITABLE_ADR;
#define S_PBE_TXFWRITABLE (*SP_PBE_TXFWRITABLE)
#define RF24_PBE_O_TXFWRITABLE                   464
// bitfield: TXFWRITABLE_BYTES
#define PBE_TXFWRITABLE_BYTES                        0UL
#define RF24_PBE_TXFWRITABLE_BYTES_S             0UL
#define PBE_TXFWRITABLE_BYTES_BM                     0x000003FFUL
#define RF24_PBE_TXFWRITABLE_BYTES_M             0x000003FFUL
// enums for bitfield TXFWRITABLE_BYTES (width: 10)UL
#define PBE_TXFWRITABLE_BYTES_ALLZEROS               0x000UL
#define PBE_TXFWRITABLE_BYTES_ALLONES                0x3FFUL
// --------------------------------------------------------------
// TXFREADABLE
// 
#define PBE_TXFREADABLE_ADR (PBE_BASE + 0x01D4UL)
static volatile unsigned long* const SP_PBE_TXFREADABLE = (unsigned long*) PBE_TXFREADABLE_ADR;
#define S_PBE_TXFREADABLE (*SP_PBE_TXFREADABLE)
#define RF24_PBE_O_TXFREADABLE                   468
// bitfield: TXFREADABLE_BYTES
#define PBE_TXFREADABLE_BYTES                        0UL
#define RF24_PBE_TXFREADABLE_BYTES_S             0UL
#define PBE_TXFREADABLE_BYTES_BM                     0x000003FFUL
#define RF24_PBE_TXFREADABLE_BYTES_M             0x000003FFUL
// enums for bitfield TXFREADABLE_BYTES (width: 10)UL
#define PBE_TXFREADABLE_BYTES_ALLZEROS               0x000UL
#define PBE_TXFREADABLE_BYTES_ALLONES                0x3FFUL
// --------------------------------------------------------------
// RXFBRD
// 
#define PBE_RXFBRD_ADR (PBE_BASE + 0x01D8UL)
static volatile unsigned long* const SP_PBE_RXFBRD = (unsigned long*) PBE_RXFBRD_ADR;
#define S_PBE_RXFBRD (*SP_PBE_RXFBRD)
#define RF24_PBE_O_RXFBRD                        472
// bitfield: RXFBRD_DATA
#define PBE_RXFBRD_DATA                              0UL
#define RF24_PBE_RXFBRD_DATA_S                   0UL
#define PBE_RXFBRD_DATA_BM                           0x000000FFUL
#define RF24_PBE_RXFBRD_DATA_M                   0x000000FFUL
// enums for bitfield RXFBRD_DATA (width: 8)UL
#define PBE_RXFBRD_DATA_ALLZEROS                     0x00UL
#define PBE_RXFBRD_DATA_ALLONES                      0xFFUL
// --------------------------------------------------------------
// RXFBWR
// 
#define PBE_RXFBWR_ADR (PBE_BASE + 0x01DCUL)
static volatile unsigned long* const SP_PBE_RXFBWR = (unsigned long*) PBE_RXFBWR_ADR;
#define S_PBE_RXFBWR (*SP_PBE_RXFBWR)
#define RF24_PBE_O_RXFBWR                        476
// bitfield: RXFBWR_DATA
#define PBE_RXFBWR_DATA                              0UL
#define RF24_PBE_RXFBWR_DATA_S                   0UL
#define PBE_RXFBWR_DATA_BM                           0x000000FFUL
#define RF24_PBE_RXFBWR_DATA_M                   0x000000FFUL
// enums for bitfield RXFBWR_DATA (width: 8)UL
#define PBE_RXFBWR_DATA_ALLZEROS                     0x00UL
#define PBE_RXFBWR_DATA_ALLONES                      0xFFUL
// --------------------------------------------------------------
// TXFBRD
// 
#define PBE_TXFBRD_ADR (PBE_BASE + 0x01E0UL)
static volatile unsigned long* const SP_PBE_TXFBRD = (unsigned long*) PBE_TXFBRD_ADR;
#define S_PBE_TXFBRD (*SP_PBE_TXFBRD)
#define RF24_PBE_O_TXFBRD                        480
// bitfield: TXFBRD_DATA
#define PBE_TXFBRD_DATA                              0UL
#define RF24_PBE_TXFBRD_DATA_S                   0UL
#define PBE_TXFBRD_DATA_BM                           0x000000FFUL
#define RF24_PBE_TXFBRD_DATA_M                   0x000000FFUL
// enums for bitfield TXFBRD_DATA (width: 8)UL
#define PBE_TXFBRD_DATA_ALLZEROS                     0x00UL
#define PBE_TXFBRD_DATA_ALLONES                      0xFFUL
// --------------------------------------------------------------
// TXFBWR
// 
#define PBE_TXFBWR_ADR (PBE_BASE + 0x01E4UL)
static volatile unsigned long* const SP_PBE_TXFBWR = (unsigned long*) PBE_TXFBWR_ADR;
#define S_PBE_TXFBWR (*SP_PBE_TXFBWR)
#define RF24_PBE_O_TXFBWR                        484
// bitfield: TXFBWR_DATA
#define PBE_TXFBWR_DATA                              0UL
#define RF24_PBE_TXFBWR_DATA_S                   0UL
#define PBE_TXFBWR_DATA_BM                           0x000000FFUL
#define RF24_PBE_TXFBWR_DATA_M                   0x000000FFUL
// enums for bitfield TXFBWR_DATA (width: 8)UL
#define PBE_TXFBWR_DATA_ALLZEROS                     0x00UL
#define PBE_TXFBWR_DATA_ALLONES                      0xFFUL
// --------------------------------------------------------------
// RXFHRD
// 
#define PBE_RXFHRD_ADR (PBE_BASE + 0x01E8UL)
static volatile unsigned long* const SP_PBE_RXFHRD = (unsigned long*) PBE_RXFHRD_ADR;
#define S_PBE_RXFHRD (*SP_PBE_RXFHRD)
#define RF24_PBE_O_RXFHRD                        488
// bitfield: RXFHRD_DATA
#define PBE_RXFHRD_DATA                              0UL
#define RF24_PBE_RXFHRD_DATA_S                   0UL
#define PBE_RXFHRD_DATA_BM                           0x0000FFFFUL
#define RF24_PBE_RXFHRD_DATA_M                   0x0000FFFFUL
// enums for bitfield RXFHRD_DATA (width: 16)UL
#define PBE_RXFHRD_DATA_ALLZEROS                     0x0000UL
#define PBE_RXFHRD_DATA_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// RXFHWR
// 
#define PBE_RXFHWR_ADR (PBE_BASE + 0x01ECUL)
static volatile unsigned long* const SP_PBE_RXFHWR = (unsigned long*) PBE_RXFHWR_ADR;
#define S_PBE_RXFHWR (*SP_PBE_RXFHWR)
#define RF24_PBE_O_RXFHWR                        492
// bitfield: RXFHWR_DATA
#define PBE_RXFHWR_DATA                              0UL
#define RF24_PBE_RXFHWR_DATA_S                   0UL
#define PBE_RXFHWR_DATA_BM                           0x0000FFFFUL
#define RF24_PBE_RXFHWR_DATA_M                   0x0000FFFFUL
// enums for bitfield RXFHWR_DATA (width: 16)UL
#define PBE_RXFHWR_DATA_ALLZEROS                     0x0000UL
#define PBE_RXFHWR_DATA_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// TXFHRD
// 
#define PBE_TXFHRD_ADR (PBE_BASE + 0x01F0UL)
static volatile unsigned long* const SP_PBE_TXFHRD = (unsigned long*) PBE_TXFHRD_ADR;
#define S_PBE_TXFHRD (*SP_PBE_TXFHRD)
#define RF24_PBE_O_TXFHRD                        496
// bitfield: TXFHRD_DATA
#define PBE_TXFHRD_DATA                              0UL
#define RF24_PBE_TXFHRD_DATA_S                   0UL
#define PBE_TXFHRD_DATA_BM                           0x0000FFFFUL
#define RF24_PBE_TXFHRD_DATA_M                   0x0000FFFFUL
// enums for bitfield TXFHRD_DATA (width: 16)UL
#define PBE_TXFHRD_DATA_ALLZEROS                     0x0000UL
#define PBE_TXFHRD_DATA_ALLONES                      0xFFFFUL
// --------------------------------------------------------------
// TXFHWR
// 
#define PBE_TXFHWR_ADR (PBE_BASE + 0x01F4UL)
static volatile unsigned long* const SP_PBE_TXFHWR = (unsigned long*) PBE_TXFHWR_ADR;
#define S_PBE_TXFHWR (*SP_PBE_TXFHWR)
#define RF24_PBE_O_TXFHWR                        500
// bitfield: TXFHWR_DATA
#define PBE_TXFHWR_DATA                              0UL
#define RF24_PBE_TXFHWR_DATA_S                   0UL
#define PBE_TXFHWR_DATA_BM                           0x0000FFFFUL
#define RF24_PBE_TXFHWR_DATA_M                   0x0000FFFFUL
// enums for bitfield TXFHWR_DATA (width: 16)UL
#define PBE_TXFHWR_DATA_ALLZEROS                     0x0000UL
#define PBE_TXFHWR_DATA_ALLONES                      0xFFFFUL

#endif
