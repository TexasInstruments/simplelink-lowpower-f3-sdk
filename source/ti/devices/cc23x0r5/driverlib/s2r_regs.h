// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:20
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40085000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/S2Rregs.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40085000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/S2Rregs.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/S2Rregs.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 99502fd89f20c5d8449dcf8c58788f67dc1cdd8f
//
// ===========================================================================


#ifndef __S2R_REGS_H
#define __S2R_REGS_H

#ifndef __HW_TYPES_H__ 
  #ifndef HWREG
    #define HWREG(x) (*((volatile unsigned long *)(x)))
  #endif
#endif
#define S2R_BASE 0x40085000UL
#define RF24_S2R_BASE 0x40085000UL
// --------------------------------------------------------------
// CFG
// 
#define S2R_CFG_ADR (S2R_BASE + 0x0000UL)
static volatile unsigned long* const SP_S2R_CFG = (unsigned long*) S2R_CFG_ADR;
#define S_S2R_CFG (*SP_S2R_CFG)
#define RF24_S2R_O_CFG                           0
// bitfield: CFG_LAST0
#define S2R_CFG_LAST0                                5UL
#define RF24_S2R_CFG_LAST0_S                     5UL
#define S2R_CFG_LAST0_BM                             0x00000020UL
#define RF24_S2R_CFG_LAST0_M                     0x00000020UL
// enums for bitfield CFG_LAST0 (width: 1)UL
#define S2R_CFG_LAST0_DIS                            0x0UL
#define S2R_CFG_LAST0_EN                             0x1UL
// bitfield: CFG_TRIGMODE
#define S2R_CFG_TRIGMODE                             3UL
#define RF24_S2R_CFG_TRIGMODE_S                  3UL
#define S2R_CFG_TRIGMODE_BM                          0x00000018UL
#define RF24_S2R_CFG_TRIGMODE_M                  0x00000018UL
// enums for bitfield CFG_TRIGMODE (width: 2)UL
#define S2R_CFG_TRIGMODE_ONESHOT                     0x0UL
#define S2R_CFG_TRIGMODE_PERIODIC                    0x1UL
#define S2R_CFG_TRIGMODE_ONEVENT                     0x2UL
// bitfield: CFG_SEL
#define S2R_CFG_SEL                                  1UL
#define RF24_S2R_CFG_SEL_S                       1UL
#define S2R_CFG_SEL_BM                               0x00000006UL
#define RF24_S2R_CFG_SEL_M                       0x00000006UL
// enums for bitfield CFG_SEL (width: 2)UL
#define S2R_CFG_SEL_SYNTH                            0x0UL
#define S2R_CFG_SEL_ADCDIG                           0x1UL
#define S2R_CFG_SEL_FRONTEND                         0x2UL
#define S2R_CFG_SEL_DECSTAGE                         0x3UL
// bitfield: CFG_CTL
#define S2R_CFG_CTL                                  0UL
#define RF24_S2R_CFG_CTL_S                       0UL
#define S2R_CFG_CTL_BM                               0x00000001UL
#define RF24_S2R_CFG_CTL_M                       0x00000001UL
// enums for bitfield CFG_CTL (width: 1)UL
#define S2R_CFG_CTL_DIS                              0x0UL
#define S2R_CFG_CTL_EN                               0x1UL
// --------------------------------------------------------------
// START
// 
#define S2R_START_ADR (S2R_BASE + 0x0004UL)
static volatile unsigned long* const SP_S2R_START = (unsigned long*) S2R_START_ADR;
#define S_S2R_START (*SP_S2R_START)
#define RF24_S2R_O_START                         4
// bitfield: START_ADDR
#define S2R_START_ADDR                               0UL
#define RF24_S2R_START_ADDR_S                    0UL
#define S2R_START_ADDR_BM                            0x00001FFFUL
#define RF24_S2R_START_ADDR_M                    0x00001FFFUL
// enums for bitfield START_ADDR (width: 13)UL
#define S2R_START_ADDR_ALLZEROS                      0x0000UL
#define S2R_START_ADDR_ALLONES                       0x1FFFUL
// --------------------------------------------------------------
// STOP
// 
#define S2R_STOP_ADR (S2R_BASE + 0x0008UL)
static volatile unsigned long* const SP_S2R_STOP = (unsigned long*) S2R_STOP_ADR;
#define S_S2R_STOP (*SP_S2R_STOP)
#define RF24_S2R_O_STOP                          8
// bitfield: STOP_ADDR
#define S2R_STOP_ADDR                                0UL
#define RF24_S2R_STOP_ADDR_S                     0UL
#define S2R_STOP_ADDR_BM                             0x00001FFFUL
#define RF24_S2R_STOP_ADDR_M                     0x00001FFFUL
// enums for bitfield STOP_ADDR (width: 13)UL
#define S2R_STOP_ADDR_ALLZEROS                       0x0000UL
#define S2R_STOP_ADDR_ALLONES                        0x1FFFUL
// --------------------------------------------------------------
// STAT
// 
#define S2R_STAT_ADR (S2R_BASE + 0x000CUL)
static volatile unsigned long* const SP_S2R_STAT = (unsigned long*) S2R_STAT_ADR;
#define S_S2R_STAT (*SP_S2R_STAT)
#define RF24_S2R_O_STAT                          12
// bitfield: STAT_ADDRCNT
#define S2R_STAT_ADDRCNT                             16UL
#define RF24_S2R_STAT_ADDRCNT_S                  16UL
#define S2R_STAT_ADDRCNT_BM                          0x0FFF0000UL
#define RF24_S2R_STAT_ADDRCNT_M                  0x0FFF0000UL
// enums for bitfield STAT_ADDRCNT (width: 12)UL
#define S2R_STAT_ADDRCNT_ALLZEROS                    0x000UL
#define S2R_STAT_ADDRCNT_ALLONES                     0xFFFUL
// bitfield: STAT_RUNNING
#define S2R_STAT_RUNNING                             0UL
#define RF24_S2R_STAT_RUNNING_S                  0UL
#define S2R_STAT_RUNNING_BM                          0x00000001UL
#define RF24_S2R_STAT_RUNNING_M                  0x00000001UL
// enums for bitfield STAT_RUNNING (width: 1)UL
#define S2R_STAT_RUNNING_FALSE                       0x0UL
#define S2R_STAT_RUNNING_TRUE                        0x1UL
// --------------------------------------------------------------
// TRIG
// 
#define S2R_TRIG_ADR (S2R_BASE + 0x0010UL)
static volatile unsigned long* const SP_S2R_TRIG = (unsigned long*) S2R_TRIG_ADR;
#define S_S2R_TRIG (*SP_S2R_TRIG)
#define RF24_S2R_O_TRIG                          16
// bitfield: TRIG_TRIG
#define S2R_TRIG_TRIG                                0UL
#define RF24_S2R_TRIG_TRIG_S                     0UL
#define S2R_TRIG_TRIG_BM                             0x00000001UL
#define RF24_S2R_TRIG_TRIG_M                     0x00000001UL
// enums for bitfield TRIG_TRIG (width: 1)UL
#define S2R_TRIG_TRIG_NO_EFFECT                      0x0UL
#define S2R_TRIG_TRIG_ARM                            0x1UL

#endif
