// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:21
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/helloworld/doc/ram_registers.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/helloworld/doc/ram_registers.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/helloworld/doc/ram_registers.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 35c8956af0c36ebec035ed14ed6a10b9d523a8cb
//
// ===========================================================================


#ifndef __PBE_HELLOWORLD_RAM_REGS_H
#define __PBE_HELLOWORLD_RAM_REGS_H

#define PBE_HELLOWORLD_RAM_BASE 0x40092000UL
// --------------------------------------------------------------
// HELLOWORLD_TEST
// 
#define PBE_HELLOWORLD_RAM_HELLOWORLD_TEST_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0020UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_HELLOWORLD_TEST = (unsigned short*) PBE_HELLOWORLD_RAM_HELLOWORLD_TEST_ADR;
#define S_PBE_HELLOWORLD_RAM_HELLOWORLD_TEST (*SP_PBE_HELLOWORLD_RAM_HELLOWORLD_TEST)
// bitfield: HELLOWORLD_TEST_VAL
#define PBE_HELLOWORLD_RAM_HELLOWORLD_TEST_VAL                      0UL
#define PBE_HELLOWORLD_RAM_HELLOWORLD_TEST_VAL_BM                   0xFFFFUL
// --------------------------------------------------------------
// CORRUPTION_RESULT
// 
#define PBE_HELLOWORLD_RAM_CORRUPTION_RESULT_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0022UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_CORRUPTION_RESULT = (unsigned short*) PBE_HELLOWORLD_RAM_CORRUPTION_RESULT_ADR;
#define S_PBE_HELLOWORLD_RAM_CORRUPTION_RESULT (*SP_PBE_HELLOWORLD_RAM_CORRUPTION_RESULT)
// bitfield: CORRUPTION_RESULT_VAL
#define PBE_HELLOWORLD_RAM_CORRUPTION_RESULT_VAL                    0UL
#define PBE_HELLOWORLD_RAM_CORRUPTION_RESULT_VAL_BM                 0xFFFFUL
// --------------------------------------------------------------
// RANDBYTEWRITE
// 
#define PBE_HELLOWORLD_RAM_RANDBYTEWRITE_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0024UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDBYTEWRITE = (unsigned short*) PBE_HELLOWORLD_RAM_RANDBYTEWRITE_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDBYTEWRITE (*SP_PBE_HELLOWORLD_RAM_RANDBYTEWRITE)
// bitfield: RANDBYTEWRITE_VAL
#define PBE_HELLOWORLD_RAM_RANDBYTEWRITE_VAL                        0UL
#define PBE_HELLOWORLD_RAM_RANDBYTEWRITE_VAL_BM                     0xFFFFUL
// --------------------------------------------------------------
// RANDHALFWRITE
// 
#define PBE_HELLOWORLD_RAM_RANDHALFWRITE_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0026UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDHALFWRITE = (unsigned short*) PBE_HELLOWORLD_RAM_RANDHALFWRITE_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDHALFWRITE (*SP_PBE_HELLOWORLD_RAM_RANDHALFWRITE)
// bitfield: RANDHALFWRITE_VAL
#define PBE_HELLOWORLD_RAM_RANDHALFWRITE_VAL                        0UL
#define PBE_HELLOWORLD_RAM_RANDHALFWRITE_VAL_BM                     0xFFFFUL
// --------------------------------------------------------------
// RANDWORDWRITE
// 
#define PBE_HELLOWORLD_RAM_RANDWORDWRITE_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0028UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDWORDWRITE = (unsigned short*) PBE_HELLOWORLD_RAM_RANDWORDWRITE_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDWORDWRITE (*SP_PBE_HELLOWORLD_RAM_RANDWORDWRITE)
// bitfield: RANDWORDWRITE_VAL
#define PBE_HELLOWORLD_RAM_RANDWORDWRITE_VAL                        0UL
#define PBE_HELLOWORLD_RAM_RANDWORDWRITE_VAL_BM                     0xFFFFUL
// --------------------------------------------------------------
// RANDBYTEREAD
// 
#define PBE_HELLOWORLD_RAM_RANDBYTEREAD_ADR (PBE_HELLOWORLD_RAM_BASE + 0x002AUL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDBYTEREAD = (unsigned short*) PBE_HELLOWORLD_RAM_RANDBYTEREAD_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDBYTEREAD (*SP_PBE_HELLOWORLD_RAM_RANDBYTEREAD)
// bitfield: RANDBYTEREAD_VAL
#define PBE_HELLOWORLD_RAM_RANDBYTEREAD_VAL                         0UL
#define PBE_HELLOWORLD_RAM_RANDBYTEREAD_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// RANDHALFREAD
// 
#define PBE_HELLOWORLD_RAM_RANDHALFREAD_ADR (PBE_HELLOWORLD_RAM_BASE + 0x002CUL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDHALFREAD = (unsigned short*) PBE_HELLOWORLD_RAM_RANDHALFREAD_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDHALFREAD (*SP_PBE_HELLOWORLD_RAM_RANDHALFREAD)
// bitfield: RANDHALFREAD_VAL
#define PBE_HELLOWORLD_RAM_RANDHALFREAD_VAL                         0UL
#define PBE_HELLOWORLD_RAM_RANDHALFREAD_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// RANDWORDREAD
// 
#define PBE_HELLOWORLD_RAM_RANDWORDREAD_ADR (PBE_HELLOWORLD_RAM_BASE + 0x002EUL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDWORDREAD = (unsigned short*) PBE_HELLOWORLD_RAM_RANDWORDREAD_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDWORDREAD (*SP_PBE_HELLOWORLD_RAM_RANDWORDREAD)
// bitfield: RANDWORDREAD_VAL
#define PBE_HELLOWORLD_RAM_RANDWORDREAD_VAL                         0UL
#define PBE_HELLOWORLD_RAM_RANDWORDREAD_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// RANDSTARTDELAY
// 
#define PBE_HELLOWORLD_RAM_RANDSTARTDELAY_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0030UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_RANDSTARTDELAY = (unsigned short*) PBE_HELLOWORLD_RAM_RANDSTARTDELAY_ADR;
#define S_PBE_HELLOWORLD_RAM_RANDSTARTDELAY (*SP_PBE_HELLOWORLD_RAM_RANDSTARTDELAY)
// bitfield: RANDSTARTDELAY_VAL
#define PBE_HELLOWORLD_RAM_RANDSTARTDELAY_VAL                       0UL
#define PBE_HELLOWORLD_RAM_RANDSTARTDELAY_VAL_BM                    0xFFFFUL
// --------------------------------------------------------------
// NRBYTES
// 
#define PBE_HELLOWORLD_RAM_NRBYTES_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0032UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_NRBYTES = (unsigned short*) PBE_HELLOWORLD_RAM_NRBYTES_ADR;
#define S_PBE_HELLOWORLD_RAM_NRBYTES (*SP_PBE_HELLOWORLD_RAM_NRBYTES)
// bitfield: NRBYTES_VAL
#define PBE_HELLOWORLD_RAM_NRBYTES_VAL                              0UL
#define PBE_HELLOWORLD_RAM_NRBYTES_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// DUMMY
// 
#define PBE_HELLOWORLD_RAM_DUMMY_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0034UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_DUMMY = (unsigned short*) PBE_HELLOWORLD_RAM_DUMMY_ADR;
#define S_PBE_HELLOWORLD_RAM_DUMMY (*SP_PBE_HELLOWORLD_RAM_DUMMY)
// bitfield: DUMMY_VAL
#define PBE_HELLOWORLD_RAM_DUMMY_VAL                                0UL
#define PBE_HELLOWORLD_RAM_DUMMY_VAL_BM                             0xFFFFUL
// --------------------------------------------------------------
// ARBCOLLIDER
// 
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_ADR (PBE_HELLOWORLD_RAM_BASE + 0x0036UL)
static volatile unsigned short* const SP_PBE_HELLOWORLD_RAM_ARBCOLLIDER = (unsigned short*) PBE_HELLOWORLD_RAM_ARBCOLLIDER_ADR;
#define S_PBE_HELLOWORLD_RAM_ARBCOLLIDER (*SP_PBE_HELLOWORLD_RAM_ARBCOLLIDER)
// bitfield: ARBCOLLIDER_NRBYTES
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_NRBYTES                      7UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_NRBYTES_BM                   0xFF80UL
// bitfield: ARBCOLLIDER_CFGACCESS
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS                    0UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_BM                 0x007FUL
// enums for bitfield ARBCOLLIDER_CFGACCESS (width: 7)UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_RB_WR_RD_TXF       0x00UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_PBERAM_WR_RD       0x01UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_RB_RD_NORMAL       0x04UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_RB_WR_NORMAL       0x05UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_BUF_RD_DIR         0x06UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_BUF_WR_DIR         0x07UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_BUF_RD_INDIR       0x08UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_BUF_WR_INDIR       0x09UL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_EXT_BUF_RD_DIR     0x0AUL
#define PBE_HELLOWORLD_RAM_ARBCOLLIDER_CFGACCESS_EXT_BUF_RD_INDIR   0x0BUL

#endif
