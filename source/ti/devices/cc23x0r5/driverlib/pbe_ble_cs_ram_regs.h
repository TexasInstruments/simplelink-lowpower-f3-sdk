// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:21
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble_cs/doc/ram_registers.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble_cs/doc/ram_registers.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble_cs/doc/ram_registers.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 16ef0334b321f929f32023f5408b26373fb9ae31
//
// ===========================================================================


#ifndef __PBE_BLE_CS_RAM_REGS_H
#define __PBE_BLE_CS_RAM_REGS_H

#define PBE_BLE_CS_RAM_BASE 0x40092000UL
// --------------------------------------------------------------
// MODE
// 
#define PBE_BLE_CS_RAM_MODE_ADR (PBE_BLE_CS_RAM_BASE + 0x0020UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_MODE = (unsigned short*) PBE_BLE_CS_RAM_MODE_ADR;
#define S_PBE_BLE_CS_RAM_MODE (*SP_PBE_BLE_CS_RAM_MODE)
// bitfield: MODE_NUM_STEPS
#define PBE_BLE_CS_RAM_MODE_NUM_STEPS                           8UL
#define PBE_BLE_CS_RAM_MODE_NUM_STEPS_BM                        0xFF00UL
// bitfield: MODE_NUM_S2R
#define PBE_BLE_CS_RAM_MODE_NUM_S2R                             3UL
#define PBE_BLE_CS_RAM_MODE_NUM_S2R_BM                          0x00F8UL
// bitfield: MODE_INFINIT
#define PBE_BLE_CS_RAM_MODE_INFINIT                             2UL
#define PBE_BLE_CS_RAM_MODE_INFINIT_BM                          0x0004UL
// bitfield: MODE_PHY
#define PBE_BLE_CS_RAM_MODE_PHY                                 1UL
#define PBE_BLE_CS_RAM_MODE_PHY_BM                              0x0002UL
// bitfield: MODE_ROLE
#define PBE_BLE_CS_RAM_MODE_ROLE                                0UL
#define PBE_BLE_CS_RAM_MODE_ROLE_BM                             0x0001UL
// --------------------------------------------------------------
// ANTMSK
// 
#define PBE_BLE_CS_RAM_ANTMSK_ADR (PBE_BLE_CS_RAM_BASE + 0x0022UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANTMSK = (unsigned short*) PBE_BLE_CS_RAM_ANTMSK_ADR;
#define S_PBE_BLE_CS_RAM_ANTMSK (*SP_PBE_BLE_CS_RAM_ANTMSK)
// bitfield: ANTMSK_VAL
#define PBE_BLE_CS_RAM_ANTMSK_VAL                               0UL
#define PBE_BLE_CS_RAM_ANTMSK_VAL_BM                            0x00FFUL
// --------------------------------------------------------------
// ANT0
// 
#define PBE_BLE_CS_RAM_ANT0_ADR (PBE_BLE_CS_RAM_BASE + 0x0024UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANT0 = (unsigned short*) PBE_BLE_CS_RAM_ANT0_ADR;
#define S_PBE_BLE_CS_RAM_ANT0 (*SP_PBE_BLE_CS_RAM_ANT0)
// bitfield: ANT0_VAL
#define PBE_BLE_CS_RAM_ANT0_VAL                                 0UL
#define PBE_BLE_CS_RAM_ANT0_VAL_BM                              0x00FFUL
// --------------------------------------------------------------
// ANT1
// 
#define PBE_BLE_CS_RAM_ANT1_ADR (PBE_BLE_CS_RAM_BASE + 0x0026UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANT1 = (unsigned short*) PBE_BLE_CS_RAM_ANT1_ADR;
#define S_PBE_BLE_CS_RAM_ANT1 (*SP_PBE_BLE_CS_RAM_ANT1)
// bitfield: ANT1_VAL
#define PBE_BLE_CS_RAM_ANT1_VAL                                 0UL
#define PBE_BLE_CS_RAM_ANT1_VAL_BM                              0x00FFUL
// --------------------------------------------------------------
// ANT2
// 
#define PBE_BLE_CS_RAM_ANT2_ADR (PBE_BLE_CS_RAM_BASE + 0x0028UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANT2 = (unsigned short*) PBE_BLE_CS_RAM_ANT2_ADR;
#define S_PBE_BLE_CS_RAM_ANT2 (*SP_PBE_BLE_CS_RAM_ANT2)
// bitfield: ANT2_VAL
#define PBE_BLE_CS_RAM_ANT2_VAL                                 0UL
#define PBE_BLE_CS_RAM_ANT2_VAL_BM                              0x00FFUL
// --------------------------------------------------------------
// ANT3
// 
#define PBE_BLE_CS_RAM_ANT3_ADR (PBE_BLE_CS_RAM_BASE + 0x002AUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANT3 = (unsigned short*) PBE_BLE_CS_RAM_ANT3_ADR;
#define S_PBE_BLE_CS_RAM_ANT3 (*SP_PBE_BLE_CS_RAM_ANT3)
// bitfield: ANT3_VAL
#define PBE_BLE_CS_RAM_ANT3_VAL                                 0UL
#define PBE_BLE_CS_RAM_ANT3_VAL_BM                              0x00FFUL
// --------------------------------------------------------------
// ANTN
// 
#define PBE_BLE_CS_RAM_ANTN_ADR (PBE_BLE_CS_RAM_BASE + 0x002CUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_ANTN = (unsigned short*) PBE_BLE_CS_RAM_ANTN_ADR;
#define S_PBE_BLE_CS_RAM_ANTN (*SP_PBE_BLE_CS_RAM_ANTN)
// bitfield: ANTN_VAL
#define PBE_BLE_CS_RAM_ANTN_VAL                                 0UL
#define PBE_BLE_CS_RAM_ANTN_VAL_BM                              0x00FFUL
// --------------------------------------------------------------
// TFCS
// 
#define PBE_BLE_CS_RAM_TFCS_ADR (PBE_BLE_CS_RAM_BASE + 0x002EUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TFCS = (unsigned short*) PBE_BLE_CS_RAM_TFCS_ADR;
#define S_PBE_BLE_CS_RAM_TFCS (*SP_PBE_BLE_CS_RAM_TFCS)
// bitfield: TFCS_VAL
#define PBE_BLE_CS_RAM_TFCS_VAL                                 0UL
#define PBE_BLE_CS_RAM_TFCS_VAL_BM                              0xFFFFUL
// --------------------------------------------------------------
// TFM
// 
#define PBE_BLE_CS_RAM_TFM_ADR (PBE_BLE_CS_RAM_BASE + 0x0030UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TFM = (unsigned short*) PBE_BLE_CS_RAM_TFM_ADR;
#define S_PBE_BLE_CS_RAM_TFM (*SP_PBE_BLE_CS_RAM_TFM)
// bitfield: TFM_VAL
#define PBE_BLE_CS_RAM_TFM_VAL                                  0UL
#define PBE_BLE_CS_RAM_TFM_VAL_BM                               0xFFFFUL
// --------------------------------------------------------------
// TPM
// 
#define PBE_BLE_CS_RAM_TPM_ADR (PBE_BLE_CS_RAM_BASE + 0x0032UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TPM = (unsigned short*) PBE_BLE_CS_RAM_TPM_ADR;
#define S_PBE_BLE_CS_RAM_TPM (*SP_PBE_BLE_CS_RAM_TPM)
// bitfield: TPM_VAL
#define PBE_BLE_CS_RAM_TPM_VAL                                  0UL
#define PBE_BLE_CS_RAM_TPM_VAL_BM                               0xFFFFUL
// --------------------------------------------------------------
// TIP1
// 
#define PBE_BLE_CS_RAM_TIP1_ADR (PBE_BLE_CS_RAM_BASE + 0x0034UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TIP1 = (unsigned short*) PBE_BLE_CS_RAM_TIP1_ADR;
#define S_PBE_BLE_CS_RAM_TIP1 (*SP_PBE_BLE_CS_RAM_TIP1)
// bitfield: TIP1_VAL
#define PBE_BLE_CS_RAM_TIP1_VAL                                 0UL
#define PBE_BLE_CS_RAM_TIP1_VAL_BM                              0xFFFFUL
// --------------------------------------------------------------
// TIP2
// 
#define PBE_BLE_CS_RAM_TIP2_ADR (PBE_BLE_CS_RAM_BASE + 0x0036UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TIP2 = (unsigned short*) PBE_BLE_CS_RAM_TIP2_ADR;
#define S_PBE_BLE_CS_RAM_TIP2 (*SP_PBE_BLE_CS_RAM_TIP2)
// bitfield: TIP2_VAL
#define PBE_BLE_CS_RAM_TIP2_VAL                                 0UL
#define PBE_BLE_CS_RAM_TIP2_VAL_BM                              0xFFFFUL
// --------------------------------------------------------------
// TRXTIMEOUT
// 
#define PBE_BLE_CS_RAM_TRXTIMEOUT_ADR (PBE_BLE_CS_RAM_BASE + 0x0038UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TRXTIMEOUT = (unsigned short*) PBE_BLE_CS_RAM_TRXTIMEOUT_ADR;
#define S_PBE_BLE_CS_RAM_TRXTIMEOUT (*SP_PBE_BLE_CS_RAM_TRXTIMEOUT)
// bitfield: TRXTIMEOUT_VAL
#define PBE_BLE_CS_RAM_TRXTIMEOUT_VAL                           0UL
#define PBE_BLE_CS_RAM_TRXTIMEOUT_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// TSW
// 
#define PBE_BLE_CS_RAM_TSW_ADR (PBE_BLE_CS_RAM_BASE + 0x003AUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSW = (unsigned short*) PBE_BLE_CS_RAM_TSW_ADR;
#define S_PBE_BLE_CS_RAM_TSW (*SP_PBE_BLE_CS_RAM_TSW)
// bitfield: TSW_VAL
#define PBE_BLE_CS_RAM_TSW_VAL                                  0UL
#define PBE_BLE_CS_RAM_TSW_VAL_BM                               0xFFFFUL
// --------------------------------------------------------------
// TRXTIMEOUTI0
// 
#define PBE_BLE_CS_RAM_TRXTIMEOUTI0_ADR (PBE_BLE_CS_RAM_BASE + 0x003CUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TRXTIMEOUTI0 = (unsigned short*) PBE_BLE_CS_RAM_TRXTIMEOUTI0_ADR;
#define S_PBE_BLE_CS_RAM_TRXTIMEOUTI0 (*SP_PBE_BLE_CS_RAM_TRXTIMEOUTI0)
// bitfield: TRXTIMEOUTI0_VAL
#define PBE_BLE_CS_RAM_TRXTIMEOUTI0_VAL                         0UL
#define PBE_BLE_CS_RAM_TRXTIMEOUTI0_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// TRXTIMEOUTI3
// 
#define PBE_BLE_CS_RAM_TRXTIMEOUTI3_ADR (PBE_BLE_CS_RAM_BASE + 0x003EUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TRXTIMEOUTI3 = (unsigned short*) PBE_BLE_CS_RAM_TRXTIMEOUTI3_ADR;
#define S_PBE_BLE_CS_RAM_TRXTIMEOUTI3 (*SP_PBE_BLE_CS_RAM_TRXTIMEOUTI3)
// bitfield: TRXTIMEOUTI3_VAL
#define PBE_BLE_CS_RAM_TRXTIMEOUTI3_VAL                         0UL
#define PBE_BLE_CS_RAM_TRXTIMEOUTI3_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// TPILOTADJ
// 
#define PBE_BLE_CS_RAM_TPILOTADJ_ADR (PBE_BLE_CS_RAM_BASE + 0x0040UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TPILOTADJ = (unsigned short*) PBE_BLE_CS_RAM_TPILOTADJ_ADR;
#define S_PBE_BLE_CS_RAM_TPILOTADJ (*SP_PBE_BLE_CS_RAM_TPILOTADJ)
// bitfield: TPILOTADJ_VAL
#define PBE_BLE_CS_RAM_TPILOTADJ_VAL                            0UL
#define PBE_BLE_CS_RAM_TPILOTADJ_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// TIPADJR0
// 
#define PBE_BLE_CS_RAM_TIPADJR0_ADR (PBE_BLE_CS_RAM_BASE + 0x0042UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TIPADJR0 = (unsigned short*) PBE_BLE_CS_RAM_TIPADJR0_ADR;
#define S_PBE_BLE_CS_RAM_TIPADJR0 (*SP_PBE_BLE_CS_RAM_TIPADJR0)
// bitfield: TIPADJR0_VAL
#define PBE_BLE_CS_RAM_TIPADJR0_VAL                             0UL
#define PBE_BLE_CS_RAM_TIPADJR0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// TIPADJR2
// 
#define PBE_BLE_CS_RAM_TIPADJR2_ADR (PBE_BLE_CS_RAM_BASE + 0x0044UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TIPADJR2 = (unsigned short*) PBE_BLE_CS_RAM_TIPADJR2_ADR;
#define S_PBE_BLE_CS_RAM_TIPADJR2 (*SP_PBE_BLE_CS_RAM_TIPADJR2)
// bitfield: TIPADJR2_VAL
#define PBE_BLE_CS_RAM_TIPADJR2_VAL                             0UL
#define PBE_BLE_CS_RAM_TIPADJR2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// TIPADJR3
// 
#define PBE_BLE_CS_RAM_TIPADJR3_ADR (PBE_BLE_CS_RAM_BASE + 0x0046UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TIPADJR3 = (unsigned short*) PBE_BLE_CS_RAM_TIPADJR3_ADR;
#define S_PBE_BLE_CS_RAM_TIPADJR3 (*SP_PBE_BLE_CS_RAM_TIPADJR3)
// bitfield: TIPADJR3_VAL
#define PBE_BLE_CS_RAM_TIPADJR3_VAL                             0UL
#define PBE_BLE_CS_RAM_TIPADJR3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// DEMMISC3
// 
#define PBE_BLE_CS_RAM_DEMMISC3_ADR (PBE_BLE_CS_RAM_BASE + 0x0048UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_DEMMISC3 = (unsigned short*) PBE_BLE_CS_RAM_DEMMISC3_ADR;
#define S_PBE_BLE_CS_RAM_DEMMISC3 (*SP_PBE_BLE_CS_RAM_DEMMISC3)
// bitfield: DEMMISC3_VAL
#define PBE_BLE_CS_RAM_DEMMISC3_VAL                             0UL
#define PBE_BLE_CS_RAM_DEMMISC3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// TSWADJA
// 
#define PBE_BLE_CS_RAM_TSWADJA_ADR (PBE_BLE_CS_RAM_BASE + 0x004AUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSWADJA = (unsigned short*) PBE_BLE_CS_RAM_TSWADJA_ADR;
#define S_PBE_BLE_CS_RAM_TSWADJA (*SP_PBE_BLE_CS_RAM_TSWADJA)
// bitfield: TSWADJA_VAL
#define PBE_BLE_CS_RAM_TSWADJA_VAL                              0UL
#define PBE_BLE_CS_RAM_TSWADJA_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// TSWADJB
// 
#define PBE_BLE_CS_RAM_TSWADJB_ADR (PBE_BLE_CS_RAM_BASE + 0x004CUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSWADJB = (unsigned short*) PBE_BLE_CS_RAM_TSWADJB_ADR;
#define S_PBE_BLE_CS_RAM_TSWADJB (*SP_PBE_BLE_CS_RAM_TSWADJB)
// bitfield: TSWADJB_VAL
#define PBE_BLE_CS_RAM_TSWADJB_VAL                              0UL
#define PBE_BLE_CS_RAM_TSWADJB_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// S2ROUTIDX
// 
#define PBE_BLE_CS_RAM_S2ROUTIDX_ADR (PBE_BLE_CS_RAM_BASE + 0x004EUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_S2ROUTIDX = (unsigned short*) PBE_BLE_CS_RAM_S2ROUTIDX_ADR;
#define S_PBE_BLE_CS_RAM_S2ROUTIDX (*SP_PBE_BLE_CS_RAM_S2ROUTIDX)
// bitfield: S2ROUTIDX_VAL
#define PBE_BLE_CS_RAM_S2ROUTIDX_VAL                            0UL
#define PBE_BLE_CS_RAM_S2ROUTIDX_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FOFFSUM
// 
#define PBE_BLE_CS_RAM_FOFFSUM_ADR (PBE_BLE_CS_RAM_BASE + 0x0050UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_FOFFSUM = (unsigned short*) PBE_BLE_CS_RAM_FOFFSUM_ADR;
#define S_PBE_BLE_CS_RAM_FOFFSUM (*SP_PBE_BLE_CS_RAM_FOFFSUM)
// bitfield: FOFFSUM_VAL
#define PBE_BLE_CS_RAM_FOFFSUM_VAL                              0UL
#define PBE_BLE_CS_RAM_FOFFSUM_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// FOFFNUM
// 
#define PBE_BLE_CS_RAM_FOFFNUM_ADR (PBE_BLE_CS_RAM_BASE + 0x0052UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_FOFFNUM = (unsigned short*) PBE_BLE_CS_RAM_FOFFNUM_ADR;
#define S_PBE_BLE_CS_RAM_FOFFNUM (*SP_PBE_BLE_CS_RAM_FOFFNUM)
// bitfield: FOFFNUM_VAL
#define PBE_BLE_CS_RAM_FOFFNUM_VAL                              0UL
#define PBE_BLE_CS_RAM_FOFFNUM_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// FOFFLAST
// 
#define PBE_BLE_CS_RAM_FOFFLAST_ADR (PBE_BLE_CS_RAM_BASE + 0x0054UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_FOFFLAST = (unsigned short*) PBE_BLE_CS_RAM_FOFFLAST_ADR;
#define S_PBE_BLE_CS_RAM_FOFFLAST (*SP_PBE_BLE_CS_RAM_FOFFLAST)
// bitfield: FOFFLAST_VAL
#define PBE_BLE_CS_RAM_FOFFLAST_VAL                             0UL
#define PBE_BLE_CS_RAM_FOFFLAST_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// RSSILAST
// 
#define PBE_BLE_CS_RAM_RSSILAST_ADR (PBE_BLE_CS_RAM_BASE + 0x0056UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_RSSILAST = (unsigned short*) PBE_BLE_CS_RAM_RSSILAST_ADR;
#define S_PBE_BLE_CS_RAM_RSSILAST (*SP_PBE_BLE_CS_RAM_RSSILAST)
// bitfield: RSSILAST_VAL
#define PBE_BLE_CS_RAM_RSSILAST_VAL                             0UL
#define PBE_BLE_CS_RAM_RSSILAST_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// NSTEPSDONE
// 
#define PBE_BLE_CS_RAM_NSTEPSDONE_ADR (PBE_BLE_CS_RAM_BASE + 0x0058UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_NSTEPSDONE = (unsigned short*) PBE_BLE_CS_RAM_NSTEPSDONE_ADR;
#define S_PBE_BLE_CS_RAM_NSTEPSDONE (*SP_PBE_BLE_CS_RAM_NSTEPSDONE)
// bitfield: NSTEPSDONE_VAL
#define PBE_BLE_CS_RAM_NSTEPSDONE_VAL                           0UL
#define PBE_BLE_CS_RAM_NSTEPSDONE_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// TSTEPACCL
// 
#define PBE_BLE_CS_RAM_TSTEPACCL_ADR (PBE_BLE_CS_RAM_BASE + 0x005AUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSTEPACCL = (unsigned short*) PBE_BLE_CS_RAM_TSTEPACCL_ADR;
#define S_PBE_BLE_CS_RAM_TSTEPACCL (*SP_PBE_BLE_CS_RAM_TSTEPACCL)
// bitfield: TSTEPACCL_VAL
#define PBE_BLE_CS_RAM_TSTEPACCL_VAL                            0UL
#define PBE_BLE_CS_RAM_TSTEPACCL_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// TSTEPACCH
// 
#define PBE_BLE_CS_RAM_TSTEPACCH_ADR (PBE_BLE_CS_RAM_BASE + 0x005CUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSTEPACCH = (unsigned short*) PBE_BLE_CS_RAM_TSTEPACCH_ADR;
#define S_PBE_BLE_CS_RAM_TSTEPACCH (*SP_PBE_BLE_CS_RAM_TSTEPACCH)
// bitfield: TSTEPACCH_VAL
#define PBE_BLE_CS_RAM_TSTEPACCH_VAL                            0UL
#define PBE_BLE_CS_RAM_TSTEPACCH_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// TSTEPACCTHRL
// 
#define PBE_BLE_CS_RAM_TSTEPACCTHRL_ADR (PBE_BLE_CS_RAM_BASE + 0x005EUL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSTEPACCTHRL = (unsigned short*) PBE_BLE_CS_RAM_TSTEPACCTHRL_ADR;
#define S_PBE_BLE_CS_RAM_TSTEPACCTHRL (*SP_PBE_BLE_CS_RAM_TSTEPACCTHRL)
// bitfield: TSTEPACCTHRL_VAL
#define PBE_BLE_CS_RAM_TSTEPACCTHRL_VAL                         0UL
#define PBE_BLE_CS_RAM_TSTEPACCTHRL_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// TSTEPACCTHRH
// 
#define PBE_BLE_CS_RAM_TSTEPACCTHRH_ADR (PBE_BLE_CS_RAM_BASE + 0x0060UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSTEPACCTHRH = (unsigned short*) PBE_BLE_CS_RAM_TSTEPACCTHRH_ADR;
#define S_PBE_BLE_CS_RAM_TSTEPACCTHRH (*SP_PBE_BLE_CS_RAM_TSTEPACCTHRH)
// bitfield: TSTEPACCTHRH_VAL
#define PBE_BLE_CS_RAM_TSTEPACCTHRH_VAL                         0UL
#define PBE_BLE_CS_RAM_TSTEPACCTHRH_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// TSTEPCOMP
// 
#define PBE_BLE_CS_RAM_TSTEPCOMP_ADR (PBE_BLE_CS_RAM_BASE + 0x0062UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TSTEPCOMP = (unsigned short*) PBE_BLE_CS_RAM_TSTEPCOMP_ADR;
#define S_PBE_BLE_CS_RAM_TSTEPCOMP (*SP_PBE_BLE_CS_RAM_TSTEPCOMP)
// bitfield: TSTEPCOMP_VAL
#define PBE_BLE_CS_RAM_TSTEPCOMP_VAL                            0UL
#define PBE_BLE_CS_RAM_TSTEPCOMP_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// TPOSTPROCESSDIV1
// 
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV1_ADR (PBE_BLE_CS_RAM_BASE + 0x0064UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TPOSTPROCESSDIV1 = (unsigned short*) PBE_BLE_CS_RAM_TPOSTPROCESSDIV1_ADR;
#define S_PBE_BLE_CS_RAM_TPOSTPROCESSDIV1 (*SP_PBE_BLE_CS_RAM_TPOSTPROCESSDIV1)
// bitfield: TPOSTPROCESSDIV1_VAL
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV1_VAL                     0UL
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV1_VAL_BM                  0xFFFFUL
// --------------------------------------------------------------
// TPOSTPROCESSDIV12
// 
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV12_ADR (PBE_BLE_CS_RAM_BASE + 0x0066UL)
static volatile unsigned short* const SP_PBE_BLE_CS_RAM_TPOSTPROCESSDIV12 = (unsigned short*) PBE_BLE_CS_RAM_TPOSTPROCESSDIV12_ADR;
#define S_PBE_BLE_CS_RAM_TPOSTPROCESSDIV12 (*SP_PBE_BLE_CS_RAM_TPOSTPROCESSDIV12)
// bitfield: TPOSTPROCESSDIV12_VAL
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV12_VAL                    0UL
#define PBE_BLE_CS_RAM_TPOSTPROCESSDIV12_VAL_BM                 0xFFFFUL

#endif
