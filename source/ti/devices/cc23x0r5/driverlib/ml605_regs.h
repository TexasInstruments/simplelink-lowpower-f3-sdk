// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:22
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x45000000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/source/octopusble/doc/ml605_regs.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x45000000 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/source/octopusble/doc/ml605_regs.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/source/octopusble/doc/ml605_regs.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 16cc5b86552c7eb6cc7f965e2345c9fb9d6a6364
//
// ===========================================================================


#ifndef __ML605_REGS_H
#define __ML605_REGS_H

#define ML605_BASE 0x45000000UL
// --------------------------------------------------------------
// LCDEN
// 
#define ML605_LCDEN_ADR (ML605_BASE + 0x0000UL)
static volatile unsigned long* const SP_ML605_LCDEN = (unsigned long*) ML605_LCDEN_ADR;
#define S_ML605_LCDEN (*SP_ML605_LCDEN)
// bitfield: LCDEN_EN
#define ML605_LCDEN_EN                                 0UL
#define ML605_LCDEN_EN_BM                              0x00000001UL
// --------------------------------------------------------------
// LCDDATCTRL
// 
#define ML605_LCDDATCTRL_ADR (ML605_BASE + 0x0004UL)
static volatile unsigned long* const SP_ML605_LCDDATCTRL = (unsigned long*) ML605_LCDDATCTRL_ADR;
#define S_ML605_LCDDATCTRL (*SP_ML605_LCDDATCTRL)
// bitfield: LCDDATCTRL_RS
#define ML605_LCDDATCTRL_RS                            5UL
#define ML605_LCDDATCTRL_RS_BM                         0x00000020UL
// bitfield: LCDDATCTRL_RW
#define ML605_LCDDATCTRL_RW                            4UL
#define ML605_LCDDATCTRL_RW_BM                         0x00000010UL
// enums for bitfield LCDDATCTRL_RW (width: 1)UL
#define ML605_LCDDATCTRL_RW_RD                         0x0UL
#define ML605_LCDDATCTRL_RW_WR                         0x1UL
// bitfield: LCDDATCTRL_DB
#define ML605_LCDDATCTRL_DB                            0UL
#define ML605_LCDDATCTRL_DB_BM                         0x0000000FUL
// --------------------------------------------------------------
// LEDS
// 
#define ML605_LEDS_ADR (ML605_BASE + 0x0008UL)
static volatile unsigned long* const SP_ML605_LEDS = (unsigned long*) ML605_LEDS_ADR;
#define S_ML605_LEDS (*SP_ML605_LEDS)
// bitfield: LEDS_GPIOLEDS
#define ML605_LEDS_GPIOLEDS                            0UL
#define ML605_LEDS_GPIOLEDS_BM                         0x000000FFUL
// --------------------------------------------------------------
// BUTTONS
// 
#define ML605_BUTTONS_ADR (ML605_BASE + 0x000CUL)
static volatile unsigned long* const SP_ML605_BUTTONS = (unsigned long*) ML605_BUTTONS_ADR;
#define S_ML605_BUTTONS (*SP_ML605_BUTTONS)
// bitfield: BUTTONS_NORTH
#define ML605_BUTTONS_NORTH                            4UL
#define ML605_BUTTONS_NORTH_BM                         0x00000010UL
// bitfield: BUTTONS_SOUTH
#define ML605_BUTTONS_SOUTH                            3UL
#define ML605_BUTTONS_SOUTH_BM                         0x00000008UL
// bitfield: BUTTONS_EAST
#define ML605_BUTTONS_EAST                             2UL
#define ML605_BUTTONS_EAST_BM                          0x00000004UL
// bitfield: BUTTONS_WEST
#define ML605_BUTTONS_WEST                             1UL
#define ML605_BUTTONS_WEST_BM                          0x00000002UL
// bitfield: BUTTONS_CENTER
#define ML605_BUTTONS_CENTER                           0UL
#define ML605_BUTTONS_CENTER_BM                        0x00000001UL
// --------------------------------------------------------------
// USR_ACCESS
// 
#define ML605_USR_ACCESS_ADR (ML605_BASE + 0x0010UL)
static volatile unsigned long* const SP_ML605_USR_ACCESS = (unsigned long*) ML605_USR_ACCESS_ADR;
#define S_ML605_USR_ACCESS (*SP_ML605_USR_ACCESS)
// bitfield: USR_ACCESS_DATA
#define ML605_USR_ACCESS_DATA                          0UL
#define ML605_USR_ACCESS_DATA_BM                       0xFFFFFFFFUL
// --------------------------------------------------------------
// RTLSIM
// 
#define ML605_RTLSIM_ADR (ML605_BASE + 0x0014UL)
static volatile unsigned long* const SP_ML605_RTLSIM = (unsigned long*) ML605_RTLSIM_ADR;
#define S_ML605_RTLSIM (*SP_ML605_RTLSIM)
// bitfield: RTLSIM_FLAG
#define ML605_RTLSIM_FLAG                              0UL
#define ML605_RTLSIM_FLAG_BM                           0x00000001UL
// enums for bitfield RTLSIM_FLAG (width: 1)UL
#define ML605_RTLSIM_FLAG_FPGA                         0x0UL
#define ML605_RTLSIM_FLAG_RTLSIM                       0x1UL

#endif
