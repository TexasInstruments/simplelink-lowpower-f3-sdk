// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:20
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40081400 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBE32regs.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40081400 -dat_sz 32 -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBE32regs.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/doc/PBE32regs.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: fa949a021001a5c11264fadeab62f6efa23ce822
//
// ===========================================================================


#ifndef __PBE32_REGS_H
#define __PBE32_REGS_H

#ifndef __HW_TYPES_H__ 
  #ifndef HWREG
    #define HWREG(x) (*((volatile unsigned long *)(x)))
  #endif
#endif
#define PBE32_BASE 0x40081400UL
#define RF24_PBE32_BASE 0x40081400UL
// --------------------------------------------------------------
// FWSRC_ENABLE
// 
#define PBE32_FWSRC_ENABLE_ADR (PBE32_BASE + 0x0000UL)
static volatile unsigned long* const SP_PBE32_FWSRC_ENABLE = (unsigned long*) PBE32_FWSRC_ENABLE_ADR;
#define S_PBE32_FWSRC_ENABLE (*SP_PBE32_FWSRC_ENABLE)
#define RF24_PBE32_O_FWSRC_ENABLE                  0
// bitfield: FWSRC_ENABLE_DATARAM
#define PBE32_FWSRC_ENABLE_DATARAM                     18UL
#define RF24_PBE32_FWSRC_ENABLE_DATARAM_S        18UL
#define PBE32_FWSRC_ENABLE_DATARAM_BM                  0x00040000UL
#define RF24_PBE32_FWSRC_ENABLE_DATARAM_M        0x00040000UL
// enums for bitfield FWSRC_ENABLE_DATARAM (width: 1)UL
#define PBE32_FWSRC_ENABLE_DATARAM_PBERAM              0x0UL
#define PBE32_FWSRC_ENABLE_DATARAM_S2RRAM              0x1UL
// bitfield: FWSRC_ENABLE_FWRAM
#define PBE32_FWSRC_ENABLE_FWRAM                       17UL
#define RF24_PBE32_FWSRC_ENABLE_FWRAM_S          17UL
#define PBE32_FWSRC_ENABLE_FWRAM_BM                    0x00020000UL
#define RF24_PBE32_FWSRC_ENABLE_FWRAM_M          0x00020000UL
// enums for bitfield FWSRC_ENABLE_FWRAM (width: 1)UL
#define PBE32_FWSRC_ENABLE_FWRAM_PBERAM                0x0UL
#define PBE32_FWSRC_ENABLE_FWRAM_S2RRAM                0x1UL
// bitfield: FWSRC_ENABLE_BANK
#define PBE32_FWSRC_ENABLE_BANK                        16UL
#define RF24_PBE32_FWSRC_ENABLE_BANK_S           16UL
#define PBE32_FWSRC_ENABLE_BANK_BM                     0x00010000UL
#define RF24_PBE32_FWSRC_ENABLE_BANK_M           0x00010000UL
// enums for bitfield FWSRC_ENABLE_BANK (width: 1)UL
#define PBE32_FWSRC_ENABLE_BANK_ZERO                   0x0UL
#define PBE32_FWSRC_ENABLE_BANK_ONE                    0x1UL
// bitfield: FWSRC_ENABLE_MDMF
#define PBE32_FWSRC_ENABLE_MDMF                        2UL
#define RF24_PBE32_FWSRC_ENABLE_MDMF_S           2UL
#define PBE32_FWSRC_ENABLE_MDMF_BM                     0x00000004UL
#define RF24_PBE32_FWSRC_ENABLE_MDMF_M           0x00000004UL
// enums for bitfield FWSRC_ENABLE_MDMF (width: 1)UL
#define PBE32_FWSRC_ENABLE_MDMF_DIS                    0x0UL
#define PBE32_FWSRC_ENABLE_MDMF_EN                     0x1UL
// bitfield: FWSRC_ENABLE_LOCTIM
#define PBE32_FWSRC_ENABLE_LOCTIM                      1UL
#define RF24_PBE32_FWSRC_ENABLE_LOCTIM_S         1UL
#define PBE32_FWSRC_ENABLE_LOCTIM_BM                   0x00000002UL
#define RF24_PBE32_FWSRC_ENABLE_LOCTIM_M         0x00000002UL
// enums for bitfield FWSRC_ENABLE_LOCTIM (width: 1)UL
#define PBE32_FWSRC_ENABLE_LOCTIM_DIS                  0x0UL
#define PBE32_FWSRC_ENABLE_LOCTIM_EN                   0x1UL
// bitfield: FWSRC_ENABLE_TOPSM
#define PBE32_FWSRC_ENABLE_TOPSM                       0UL
#define RF24_PBE32_FWSRC_ENABLE_TOPSM_S          0UL
#define PBE32_FWSRC_ENABLE_TOPSM_BM                    0x00000001UL
#define RF24_PBE32_FWSRC_ENABLE_TOPSM_M          0x00000001UL
// enums for bitfield FWSRC_ENABLE_TOPSM (width: 1)UL
#define PBE32_FWSRC_ENABLE_TOPSM_DIS                   0x0UL
#define PBE32_FWSRC_ENABLE_TOPSM_EN                    0x1UL
// --------------------------------------------------------------
// STROBES0_INIT
// 
#define PBE32_STROBES0_INIT_ADR (PBE32_BASE + 0x0004UL)
static volatile unsigned long* const SP_PBE32_STROBES0_INIT = (unsigned long*) PBE32_STROBES0_INIT_ADR;
#define S_PBE32_STROBES0_INIT (*SP_PBE32_STROBES0_INIT)
#define RF24_PBE32_O_STROBES0_INIT                 4
// bitfield: STROBES0_INIT_TIMCAPT1
#define PBE32_STROBES0_INIT_TIMCAPT1                   22UL
#define RF24_PBE32_STROBES0_INIT_TIMCAPT1_S      22UL
#define PBE32_STROBES0_INIT_TIMCAPT1_BM                0x00400000UL
#define RF24_PBE32_STROBES0_INIT_TIMCAPT1_M      0x00400000UL
// enums for bitfield STROBES0_INIT_TIMCAPT1 (width: 1)UL
#define PBE32_STROBES0_INIT_TIMCAPT1_ZERO              0x0UL
#define PBE32_STROBES0_INIT_TIMCAPT1_ONE               0x1UL
// bitfield: STROBES0_INIT_TIMCAPT0
#define PBE32_STROBES0_INIT_TIMCAPT0                   21UL
#define RF24_PBE32_STROBES0_INIT_TIMCAPT0_S      21UL
#define PBE32_STROBES0_INIT_TIMCAPT0_BM                0x00200000UL
#define RF24_PBE32_STROBES0_INIT_TIMCAPT0_M      0x00200000UL
// enums for bitfield STROBES0_INIT_TIMCAPT0 (width: 1)UL
#define PBE32_STROBES0_INIT_TIMCAPT0_ZERO              0x0UL
#define PBE32_STROBES0_INIT_TIMCAPT0_ONE               0x1UL
// bitfield: STROBES0_INIT_S2RTRIG
#define PBE32_STROBES0_INIT_S2RTRIG                    20UL
#define RF24_PBE32_STROBES0_INIT_S2RTRIG_S       20UL
#define PBE32_STROBES0_INIT_S2RTRIG_BM                 0x00100000UL
#define RF24_PBE32_STROBES0_INIT_S2RTRIG_M       0x00100000UL
// enums for bitfield STROBES0_INIT_S2RTRIG (width: 1)UL
#define PBE32_STROBES0_INIT_S2RTRIG_NO_EFFECT          0x0UL
#define PBE32_STROBES0_INIT_S2RTRIG_ARM                0x1UL
// bitfield: STROBES0_INIT_DMATRIG
#define PBE32_STROBES0_INIT_DMATRIG                    19UL
#define RF24_PBE32_STROBES0_INIT_DMATRIG_S       19UL
#define PBE32_STROBES0_INIT_DMATRIG_BM                 0x00080000UL
#define RF24_PBE32_STROBES0_INIT_DMATRIG_M       0x00080000UL
// enums for bitfield STROBES0_INIT_DMATRIG (width: 1)UL
#define PBE32_STROBES0_INIT_DMATRIG_NO_EFFECT          0x0UL
#define PBE32_STROBES0_INIT_DMATRIG_ARM                0x1UL
// bitfield: STROBES0_INIT_SYSTCAPT2
#define PBE32_STROBES0_INIT_SYSTCAPT2                  18UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT2_S     18UL
#define PBE32_STROBES0_INIT_SYSTCAPT2_BM               0x00040000UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT2_M     0x00040000UL
// enums for bitfield STROBES0_INIT_SYSTCAPT2 (width: 1)UL
#define PBE32_STROBES0_INIT_SYSTCAPT2_ZERO             0x0UL
#define PBE32_STROBES0_INIT_SYSTCAPT2_ONE              0x1UL
// bitfield: STROBES0_INIT_SYSTCAPT1
#define PBE32_STROBES0_INIT_SYSTCAPT1                  17UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT1_S     17UL
#define PBE32_STROBES0_INIT_SYSTCAPT1_BM               0x00020000UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT1_M     0x00020000UL
// enums for bitfield STROBES0_INIT_SYSTCAPT1 (width: 1)UL
#define PBE32_STROBES0_INIT_SYSTCAPT1_ZERO             0x0UL
#define PBE32_STROBES0_INIT_SYSTCAPT1_ONE              0x1UL
// bitfield: STROBES0_INIT_SYSTCAPT0
#define PBE32_STROBES0_INIT_SYSTCAPT0                  16UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT0_S     16UL
#define PBE32_STROBES0_INIT_SYSTCAPT0_BM               0x00010000UL
#define RF24_PBE32_STROBES0_INIT_SYSTCAPT0_M     0x00010000UL
// enums for bitfield STROBES0_INIT_SYSTCAPT0 (width: 1)UL
#define PBE32_STROBES0_INIT_SYSTCAPT0_ZERO             0x0UL
#define PBE32_STROBES0_INIT_SYSTCAPT0_ONE              0x1UL
// bitfield: STROBES0_INIT_RFE
#define PBE32_STROBES0_INIT_RFE                        4UL
#define RF24_PBE32_STROBES0_INIT_RFE_S           4UL
#define PBE32_STROBES0_INIT_RFE_BM                     0x00000010UL
#define RF24_PBE32_STROBES0_INIT_RFE_M           0x00000010UL
// enums for bitfield STROBES0_INIT_RFE (width: 1)UL
#define PBE32_STROBES0_INIT_RFE_NO_EFFECT              0x0UL
#define PBE32_STROBES0_INIT_RFE_RESET                  0x1UL
// bitfield: STROBES0_INIT_MDM
#define PBE32_STROBES0_INIT_MDM                        3UL
#define RF24_PBE32_STROBES0_INIT_MDM_S           3UL
#define PBE32_STROBES0_INIT_MDM_BM                     0x00000008UL
#define RF24_PBE32_STROBES0_INIT_MDM_M           0x00000008UL
// enums for bitfield STROBES0_INIT_MDM (width: 1)UL
#define PBE32_STROBES0_INIT_MDM_NO_EFFECT              0x0UL
#define PBE32_STROBES0_INIT_MDM_RESET                  0x1UL
// bitfield: STROBES0_INIT_MDMF
#define PBE32_STROBES0_INIT_MDMF                       2UL
#define RF24_PBE32_STROBES0_INIT_MDMF_S          2UL
#define PBE32_STROBES0_INIT_MDMF_BM                    0x00000004UL
#define RF24_PBE32_STROBES0_INIT_MDMF_M          0x00000004UL
// enums for bitfield STROBES0_INIT_MDMF (width: 1)UL
#define PBE32_STROBES0_INIT_MDMF_NO_EFFECT             0x0UL
#define PBE32_STROBES0_INIT_MDMF_RESET                 0x1UL
// bitfield: STROBES0_INIT_LOCTIM
#define PBE32_STROBES0_INIT_LOCTIM                     1UL
#define RF24_PBE32_STROBES0_INIT_LOCTIM_S        1UL
#define PBE32_STROBES0_INIT_LOCTIM_BM                  0x00000002UL
#define RF24_PBE32_STROBES0_INIT_LOCTIM_M        0x00000002UL
// enums for bitfield STROBES0_INIT_LOCTIM (width: 1)UL
#define PBE32_STROBES0_INIT_LOCTIM_NO_EFFECT           0x0UL
#define PBE32_STROBES0_INIT_LOCTIM_RESET               0x1UL
// bitfield: STROBES0_INIT_TOPSM
#define PBE32_STROBES0_INIT_TOPSM                      0UL
#define RF24_PBE32_STROBES0_INIT_TOPSM_S         0UL
#define PBE32_STROBES0_INIT_TOPSM_BM                   0x00000001UL
#define RF24_PBE32_STROBES0_INIT_TOPSM_M         0x00000001UL
// enums for bitfield STROBES0_INIT_TOPSM (width: 1)UL
#define PBE32_STROBES0_INIT_TOPSM_NO_EFFECT            0x0UL
#define PBE32_STROBES0_INIT_TOPSM_RESET                0x1UL
// --------------------------------------------------------------
// EVT0_IRQ
// 
#define PBE32_EVT0_IRQ_ADR (PBE32_BASE + 0x0008UL)
static volatile unsigned long* const SP_PBE32_EVT0_IRQ = (unsigned long*) PBE32_EVT0_IRQ_ADR;
#define S_PBE32_EVT0_IRQ (*SP_PBE32_EVT0_IRQ)
#define RF24_PBE32_O_EVT0_IRQ                      8
// bitfield: EVT0_IRQ_MDMFAEMPTY
#define PBE32_EVT0_IRQ_MDMFAEMPTY                      31UL
#define RF24_PBE32_EVT0_IRQ_MDMFAEMPTY_S         31UL
#define PBE32_EVT0_IRQ_MDMFAEMPTY_BM                   0x80000000UL
#define RF24_PBE32_EVT0_IRQ_MDMFAEMPTY_M         0x80000000UL
// enums for bitfield EVT0_IRQ_MDMFAEMPTY (width: 1)UL
#define PBE32_EVT0_IRQ_MDMFAEMPTY_ZERO                 0x0UL
#define PBE32_EVT0_IRQ_MDMFAEMPTY_ONE                  0x1UL
// bitfield: EVT0_IRQ_S2RSTOP
#define PBE32_EVT0_IRQ_S2RSTOP                         30UL
#define RF24_PBE32_EVT0_IRQ_S2RSTOP_S            30UL
#define PBE32_EVT0_IRQ_S2RSTOP_BM                      0x40000000UL
#define RF24_PBE32_EVT0_IRQ_S2RSTOP_M            0x40000000UL
// enums for bitfield EVT0_IRQ_S2RSTOP (width: 1)UL
#define PBE32_EVT0_IRQ_S2RSTOP_ZERO                    0x0UL
#define PBE32_EVT0_IRQ_S2RSTOP_ONE                     0x1UL
// bitfield: EVT0_IRQ_FIFOERR
#define PBE32_EVT0_IRQ_FIFOERR                         29UL
#define RF24_PBE32_EVT0_IRQ_FIFOERR_S            29UL
#define PBE32_EVT0_IRQ_FIFOERR_BM                      0x20000000UL
#define RF24_PBE32_EVT0_IRQ_FIFOERR_M            0x20000000UL
// enums for bitfield EVT0_IRQ_FIFOERR (width: 1)UL
#define PBE32_EVT0_IRQ_FIFOERR_ZERO                    0x0UL
#define PBE32_EVT0_IRQ_FIFOERR_ONE                     0x1UL
// bitfield: EVT0_IRQ_MDMFAFULL
#define PBE32_EVT0_IRQ_MDMFAFULL                       28UL
#define RF24_PBE32_EVT0_IRQ_MDMFAFULL_S          28UL
#define PBE32_EVT0_IRQ_MDMFAFULL_BM                    0x10000000UL
#define RF24_PBE32_EVT0_IRQ_MDMFAFULL_M          0x10000000UL
// enums for bitfield EVT0_IRQ_MDMFAFULL (width: 1)UL
#define PBE32_EVT0_IRQ_MDMFAFULL_ZERO                  0x0UL
#define PBE32_EVT0_IRQ_MDMFAFULL_ONE                   0x1UL
// bitfield: EVT0_IRQ_SYSTCMP2
#define PBE32_EVT0_IRQ_SYSTCMP2                        27UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP2_S           27UL
#define PBE32_EVT0_IRQ_SYSTCMP2_BM                     0x08000000UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP2_M           0x08000000UL
// enums for bitfield EVT0_IRQ_SYSTCMP2 (width: 1)UL
#define PBE32_EVT0_IRQ_SYSTCMP2_ZERO                   0x0UL
#define PBE32_EVT0_IRQ_SYSTCMP2_ONE                    0x1UL
// bitfield: EVT0_IRQ_SYSTCMP1
#define PBE32_EVT0_IRQ_SYSTCMP1                        26UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP1_S           26UL
#define PBE32_EVT0_IRQ_SYSTCMP1_BM                     0x04000000UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP1_M           0x04000000UL
// enums for bitfield EVT0_IRQ_SYSTCMP1 (width: 1)UL
#define PBE32_EVT0_IRQ_SYSTCMP1_ZERO                   0x0UL
#define PBE32_EVT0_IRQ_SYSTCMP1_ONE                    0x1UL
// bitfield: EVT0_IRQ_SYSTCMP0
#define PBE32_EVT0_IRQ_SYSTCMP0                        25UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP0_S           25UL
#define PBE32_EVT0_IRQ_SYSTCMP0_BM                     0x02000000UL
#define RF24_PBE32_EVT0_IRQ_SYSTCMP0_M           0x02000000UL
// enums for bitfield EVT0_IRQ_SYSTCMP0 (width: 1)UL
#define PBE32_EVT0_IRQ_SYSTCMP0_ZERO                   0x0UL
#define PBE32_EVT0_IRQ_SYSTCMP0_ONE                    0x1UL
// bitfield: EVT0_IRQ_MDMMSGBOX
#define PBE32_EVT0_IRQ_MDMMSGBOX                       24UL
#define RF24_PBE32_EVT0_IRQ_MDMMSGBOX_S          24UL
#define PBE32_EVT0_IRQ_MDMMSGBOX_BM                    0x01000000UL
#define RF24_PBE32_EVT0_IRQ_MDMMSGBOX_M          0x01000000UL
// enums for bitfield EVT0_IRQ_MDMMSGBOX (width: 1)UL
#define PBE32_EVT0_IRQ_MDMMSGBOX_ZERO                  0x0UL
#define PBE32_EVT0_IRQ_MDMMSGBOX_ONE                   0x1UL
// bitfield: EVT0_IRQ_RFEMSGBOX
#define PBE32_EVT0_IRQ_RFEMSGBOX                       23UL
#define RF24_PBE32_EVT0_IRQ_RFEMSGBOX_S          23UL
#define PBE32_EVT0_IRQ_RFEMSGBOX_BM                    0x00800000UL
#define RF24_PBE32_EVT0_IRQ_RFEMSGBOX_M          0x00800000UL
// enums for bitfield EVT0_IRQ_RFEMSGBOX (width: 1)UL
#define PBE32_EVT0_IRQ_RFEMSGBOX_ZERO                  0x0UL
#define PBE32_EVT0_IRQ_RFEMSGBOX_ONE                   0x1UL
// bitfield: EVT0_IRQ_RFEDAT
#define PBE32_EVT0_IRQ_RFEDAT                          22UL
#define RF24_PBE32_EVT0_IRQ_RFEDAT_S             22UL
#define PBE32_EVT0_IRQ_RFEDAT_BM                       0x00400000UL
#define RF24_PBE32_EVT0_IRQ_RFEDAT_M             0x00400000UL
// enums for bitfield EVT0_IRQ_RFEDAT (width: 1)UL
#define PBE32_EVT0_IRQ_RFEDAT_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_RFEDAT_ONE                      0x1UL
// bitfield: EVT0_IRQ_RFECMD
#define PBE32_EVT0_IRQ_RFECMD                          21UL
#define RF24_PBE32_EVT0_IRQ_RFECMD_S             21UL
#define PBE32_EVT0_IRQ_RFECMD_BM                       0x00200000UL
#define RF24_PBE32_EVT0_IRQ_RFECMD_M             0x00200000UL
// enums for bitfield EVT0_IRQ_RFECMD (width: 1)UL
#define PBE32_EVT0_IRQ_RFECMD_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_RFECMD_ONE                      0x1UL
// bitfield: EVT0_IRQ_MDMDAT
#define PBE32_EVT0_IRQ_MDMDAT                          20UL
#define RF24_PBE32_EVT0_IRQ_MDMDAT_S             20UL
#define PBE32_EVT0_IRQ_MDMDAT_BM                       0x00100000UL
#define RF24_PBE32_EVT0_IRQ_MDMDAT_M             0x00100000UL
// enums for bitfield EVT0_IRQ_MDMDAT (width: 1)UL
#define PBE32_EVT0_IRQ_MDMDAT_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_MDMDAT_ONE                      0x1UL
// bitfield: EVT0_IRQ_MDMCMD
#define PBE32_EVT0_IRQ_MDMCMD                          19UL
#define RF24_PBE32_EVT0_IRQ_MDMCMD_S             19UL
#define PBE32_EVT0_IRQ_MDMCMD_BM                       0x00080000UL
#define RF24_PBE32_EVT0_IRQ_MDMCMD_M             0x00080000UL
// enums for bitfield EVT0_IRQ_MDMCMD (width: 1)UL
#define PBE32_EVT0_IRQ_MDMCMD_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_MDMCMD_ONE                      0x1UL
// bitfield: EVT0_IRQ_TIMER1
#define PBE32_EVT0_IRQ_TIMER1                          18UL
#define RF24_PBE32_EVT0_IRQ_TIMER1_S             18UL
#define PBE32_EVT0_IRQ_TIMER1_BM                       0x00040000UL
#define RF24_PBE32_EVT0_IRQ_TIMER1_M             0x00040000UL
// enums for bitfield EVT0_IRQ_TIMER1 (width: 1)UL
#define PBE32_EVT0_IRQ_TIMER1_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_TIMER1_ONE                      0x1UL
// bitfield: EVT0_IRQ_TIMER0
#define PBE32_EVT0_IRQ_TIMER0                          17UL
#define RF24_PBE32_EVT0_IRQ_TIMER0_S             17UL
#define PBE32_EVT0_IRQ_TIMER0_BM                       0x00020000UL
#define RF24_PBE32_EVT0_IRQ_TIMER0_M             0x00020000UL
// enums for bitfield EVT0_IRQ_TIMER0 (width: 1)UL
#define PBE32_EVT0_IRQ_TIMER0_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_TIMER0_ONE                      0x1UL
// bitfield: EVT0_IRQ_PBEAPI
#define PBE32_EVT0_IRQ_PBEAPI                          16UL
#define RF24_PBE32_EVT0_IRQ_PBEAPI_S             16UL
#define PBE32_EVT0_IRQ_PBEAPI_BM                       0x00010000UL
#define RF24_PBE32_EVT0_IRQ_PBEAPI_M             0x00010000UL
// enums for bitfield EVT0_IRQ_PBEAPI (width: 1)UL
#define PBE32_EVT0_IRQ_PBEAPI_ZERO                     0x0UL
#define PBE32_EVT0_IRQ_PBEAPI_ONE                      0x1UL
// bitfield: EVT0_IRQ_SOFT15
#define PBE32_EVT0_IRQ_SOFT15                          15UL
#define RF24_PBE32_EVT0_IRQ_SOFT15_S             15UL
#define PBE32_EVT0_IRQ_SOFT15_BM                       0x00008000UL
#define RF24_PBE32_EVT0_IRQ_SOFT15_M             0x00008000UL
// enums for bitfield EVT0_IRQ_SOFT15 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT15_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT15_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT14
#define PBE32_EVT0_IRQ_SOFT14                          14UL
#define RF24_PBE32_EVT0_IRQ_SOFT14_S             14UL
#define PBE32_EVT0_IRQ_SOFT14_BM                       0x00004000UL
#define RF24_PBE32_EVT0_IRQ_SOFT14_M             0x00004000UL
// enums for bitfield EVT0_IRQ_SOFT14 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT14_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT14_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT13
#define PBE32_EVT0_IRQ_SOFT13                          13UL
#define RF24_PBE32_EVT0_IRQ_SOFT13_S             13UL
#define PBE32_EVT0_IRQ_SOFT13_BM                       0x00002000UL
#define RF24_PBE32_EVT0_IRQ_SOFT13_M             0x00002000UL
// enums for bitfield EVT0_IRQ_SOFT13 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT13_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT13_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT12
#define PBE32_EVT0_IRQ_SOFT12                          12UL
#define RF24_PBE32_EVT0_IRQ_SOFT12_S             12UL
#define PBE32_EVT0_IRQ_SOFT12_BM                       0x00001000UL
#define RF24_PBE32_EVT0_IRQ_SOFT12_M             0x00001000UL
// enums for bitfield EVT0_IRQ_SOFT12 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT12_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT12_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT11
#define PBE32_EVT0_IRQ_SOFT11                          11UL
#define RF24_PBE32_EVT0_IRQ_SOFT11_S             11UL
#define PBE32_EVT0_IRQ_SOFT11_BM                       0x00000800UL
#define RF24_PBE32_EVT0_IRQ_SOFT11_M             0x00000800UL
// enums for bitfield EVT0_IRQ_SOFT11 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT11_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT11_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT10
#define PBE32_EVT0_IRQ_SOFT10                          10UL
#define RF24_PBE32_EVT0_IRQ_SOFT10_S             10UL
#define PBE32_EVT0_IRQ_SOFT10_BM                       0x00000400UL
#define RF24_PBE32_EVT0_IRQ_SOFT10_M             0x00000400UL
// enums for bitfield EVT0_IRQ_SOFT10 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT10_OFF                      0x0UL
#define PBE32_EVT0_IRQ_SOFT10_ON                       0x1UL
// bitfield: EVT0_IRQ_SOFT9
#define PBE32_EVT0_IRQ_SOFT9                           9UL
#define RF24_PBE32_EVT0_IRQ_SOFT9_S              9UL
#define PBE32_EVT0_IRQ_SOFT9_BM                        0x00000200UL
#define RF24_PBE32_EVT0_IRQ_SOFT9_M              0x00000200UL
// enums for bitfield EVT0_IRQ_SOFT9 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT9_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT9_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT8
#define PBE32_EVT0_IRQ_SOFT8                           8UL
#define RF24_PBE32_EVT0_IRQ_SOFT8_S              8UL
#define PBE32_EVT0_IRQ_SOFT8_BM                        0x00000100UL
#define RF24_PBE32_EVT0_IRQ_SOFT8_M              0x00000100UL
// enums for bitfield EVT0_IRQ_SOFT8 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT8_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT8_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT7
#define PBE32_EVT0_IRQ_SOFT7                           7UL
#define RF24_PBE32_EVT0_IRQ_SOFT7_S              7UL
#define PBE32_EVT0_IRQ_SOFT7_BM                        0x00000080UL
#define RF24_PBE32_EVT0_IRQ_SOFT7_M              0x00000080UL
// enums for bitfield EVT0_IRQ_SOFT7 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT7_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT7_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT6
#define PBE32_EVT0_IRQ_SOFT6                           6UL
#define RF24_PBE32_EVT0_IRQ_SOFT6_S              6UL
#define PBE32_EVT0_IRQ_SOFT6_BM                        0x00000040UL
#define RF24_PBE32_EVT0_IRQ_SOFT6_M              0x00000040UL
// enums for bitfield EVT0_IRQ_SOFT6 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT6_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT6_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT5
#define PBE32_EVT0_IRQ_SOFT5                           5UL
#define RF24_PBE32_EVT0_IRQ_SOFT5_S              5UL
#define PBE32_EVT0_IRQ_SOFT5_BM                        0x00000020UL
#define RF24_PBE32_EVT0_IRQ_SOFT5_M              0x00000020UL
// enums for bitfield EVT0_IRQ_SOFT5 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT5_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT5_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT4
#define PBE32_EVT0_IRQ_SOFT4                           4UL
#define RF24_PBE32_EVT0_IRQ_SOFT4_S              4UL
#define PBE32_EVT0_IRQ_SOFT4_BM                        0x00000010UL
#define RF24_PBE32_EVT0_IRQ_SOFT4_M              0x00000010UL
// enums for bitfield EVT0_IRQ_SOFT4 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT4_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT4_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT3
#define PBE32_EVT0_IRQ_SOFT3                           3UL
#define RF24_PBE32_EVT0_IRQ_SOFT3_S              3UL
#define PBE32_EVT0_IRQ_SOFT3_BM                        0x00000008UL
#define RF24_PBE32_EVT0_IRQ_SOFT3_M              0x00000008UL
// enums for bitfield EVT0_IRQ_SOFT3 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT3_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT3_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT2
#define PBE32_EVT0_IRQ_SOFT2                           2UL
#define RF24_PBE32_EVT0_IRQ_SOFT2_S              2UL
#define PBE32_EVT0_IRQ_SOFT2_BM                        0x00000004UL
#define RF24_PBE32_EVT0_IRQ_SOFT2_M              0x00000004UL
// enums for bitfield EVT0_IRQ_SOFT2 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT2_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT2_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT1
#define PBE32_EVT0_IRQ_SOFT1                           1UL
#define RF24_PBE32_EVT0_IRQ_SOFT1_S              1UL
#define PBE32_EVT0_IRQ_SOFT1_BM                        0x00000002UL
#define RF24_PBE32_EVT0_IRQ_SOFT1_M              0x00000002UL
// enums for bitfield EVT0_IRQ_SOFT1 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT1_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT1_ON                        0x1UL
// bitfield: EVT0_IRQ_SOFT0
#define PBE32_EVT0_IRQ_SOFT0                           0UL
#define RF24_PBE32_EVT0_IRQ_SOFT0_S              0UL
#define PBE32_EVT0_IRQ_SOFT0_BM                        0x00000001UL
#define RF24_PBE32_EVT0_IRQ_SOFT0_M              0x00000001UL
// enums for bitfield EVT0_IRQ_SOFT0 (width: 1)UL
#define PBE32_EVT0_IRQ_SOFT0_OFF                       0x0UL
#define PBE32_EVT0_IRQ_SOFT0_ON                        0x1UL
// --------------------------------------------------------------
// EVTMSK0_EVT1
// 
#define PBE32_EVTMSK0_EVT1_ADR (PBE32_BASE + 0x000CUL)
static volatile unsigned long* const SP_PBE32_EVTMSK0_EVT1 = (unsigned long*) PBE32_EVTMSK0_EVT1_ADR;
#define S_PBE32_EVTMSK0_EVT1 (*SP_PBE32_EVTMSK0_EVT1)
#define RF24_PBE32_O_EVTMSK0_EVT1                  12
// bitfield: EVTMSK0_EVT1_MDMFAEMPTY
#define PBE32_EVTMSK0_EVT1_MDMFAEMPTY                  31UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMFAEMPTY_S     31UL
#define PBE32_EVTMSK0_EVT1_MDMFAEMPTY_BM               0x80000000UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMFAEMPTY_M     0x80000000UL
// enums for bitfield EVTMSK0_EVT1_MDMFAEMPTY (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMFAEMPTY_DIS              0x0UL
#define PBE32_EVTMSK0_EVT1_MDMFAEMPTY_EN               0x1UL
// bitfield: EVTMSK0_EVT1_S2RSTOP
#define PBE32_EVTMSK0_EVT1_S2RSTOP                     30UL
#define RF24_PBE32_EVTMSK0_EVT1_S2RSTOP_S        30UL
#define PBE32_EVTMSK0_EVT1_S2RSTOP_BM                  0x40000000UL
#define RF24_PBE32_EVTMSK0_EVT1_S2RSTOP_M        0x40000000UL
// enums for bitfield EVTMSK0_EVT1_S2RSTOP (width: 1)UL
#define PBE32_EVTMSK0_EVT1_S2RSTOP_DIS                 0x0UL
#define PBE32_EVTMSK0_EVT1_S2RSTOP_EN                  0x1UL
// bitfield: EVTMSK0_EVT1_FIFOERR
#define PBE32_EVTMSK0_EVT1_FIFOERR                     29UL
#define RF24_PBE32_EVTMSK0_EVT1_FIFOERR_S        29UL
#define PBE32_EVTMSK0_EVT1_FIFOERR_BM                  0x20000000UL
#define RF24_PBE32_EVTMSK0_EVT1_FIFOERR_M        0x20000000UL
// enums for bitfield EVTMSK0_EVT1_FIFOERR (width: 1)UL
#define PBE32_EVTMSK0_EVT1_FIFOERR_DIS                 0x0UL
#define PBE32_EVTMSK0_EVT1_FIFOERR_EN                  0x1UL
// bitfield: EVTMSK0_EVT1_MDMFAFULL
#define PBE32_EVTMSK0_EVT1_MDMFAFULL                   28UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMFAFULL_S      28UL
#define PBE32_EVTMSK0_EVT1_MDMFAFULL_BM                0x10000000UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMFAFULL_M      0x10000000UL
// enums for bitfield EVTMSK0_EVT1_MDMFAFULL (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMFAFULL_DIS               0x0UL
#define PBE32_EVTMSK0_EVT1_MDMFAFULL_EN                0x1UL
// bitfield: EVTMSK0_EVT1_SYSTCMP2
#define PBE32_EVTMSK0_EVT1_SYSTCMP2                    27UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP2_S       27UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP2_BM                 0x08000000UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP2_M       0x08000000UL
// enums for bitfield EVTMSK0_EVT1_SYSTCMP2 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP2_DIS                0x0UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP2_EN                 0x1UL
// bitfield: EVTMSK0_EVT1_SYSTCMP1
#define PBE32_EVTMSK0_EVT1_SYSTCMP1                    26UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP1_S       26UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP1_BM                 0x04000000UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP1_M       0x04000000UL
// enums for bitfield EVTMSK0_EVT1_SYSTCMP1 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP1_DIS                0x0UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP1_EN                 0x1UL
// bitfield: EVTMSK0_EVT1_SYSTCMP0
#define PBE32_EVTMSK0_EVT1_SYSTCMP0                    25UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP0_S       25UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP0_BM                 0x02000000UL
#define RF24_PBE32_EVTMSK0_EVT1_SYSTCMP0_M       0x02000000UL
// enums for bitfield EVTMSK0_EVT1_SYSTCMP0 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP0_DIS                0x0UL
#define PBE32_EVTMSK0_EVT1_SYSTCMP0_EN                 0x1UL
// bitfield: EVTMSK0_EVT1_MDMMSGBOX
#define PBE32_EVTMSK0_EVT1_MDMMSGBOX                   24UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMMSGBOX_S      24UL
#define PBE32_EVTMSK0_EVT1_MDMMSGBOX_BM                0x01000000UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMMSGBOX_M      0x01000000UL
// enums for bitfield EVTMSK0_EVT1_MDMMSGBOX (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMMSGBOX_DIS               0x0UL
#define PBE32_EVTMSK0_EVT1_MDMMSGBOX_EN                0x1UL
// bitfield: EVTMSK0_EVT1_RFEMSGBOX
#define PBE32_EVTMSK0_EVT1_RFEMSGBOX                   23UL
#define RF24_PBE32_EVTMSK0_EVT1_RFEMSGBOX_S      23UL
#define PBE32_EVTMSK0_EVT1_RFEMSGBOX_BM                0x00800000UL
#define RF24_PBE32_EVTMSK0_EVT1_RFEMSGBOX_M      0x00800000UL
// enums for bitfield EVTMSK0_EVT1_RFEMSGBOX (width: 1)UL
#define PBE32_EVTMSK0_EVT1_RFEMSGBOX_DIS               0x0UL
#define PBE32_EVTMSK0_EVT1_RFEMSGBOX_EN                0x1UL
// bitfield: EVTMSK0_EVT1_RFEDAT
#define PBE32_EVTMSK0_EVT1_RFEDAT                      22UL
#define RF24_PBE32_EVTMSK0_EVT1_RFEDAT_S         22UL
#define PBE32_EVTMSK0_EVT1_RFEDAT_BM                   0x00400000UL
#define RF24_PBE32_EVTMSK0_EVT1_RFEDAT_M         0x00400000UL
// enums for bitfield EVTMSK0_EVT1_RFEDAT (width: 1)UL
#define PBE32_EVTMSK0_EVT1_RFEDAT_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_RFEDAT_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_RFECMD
#define PBE32_EVTMSK0_EVT1_RFECMD                      21UL
#define RF24_PBE32_EVTMSK0_EVT1_RFECMD_S         21UL
#define PBE32_EVTMSK0_EVT1_RFECMD_BM                   0x00200000UL
#define RF24_PBE32_EVTMSK0_EVT1_RFECMD_M         0x00200000UL
// enums for bitfield EVTMSK0_EVT1_RFECMD (width: 1)UL
#define PBE32_EVTMSK0_EVT1_RFECMD_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_RFECMD_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_MDMDAT
#define PBE32_EVTMSK0_EVT1_MDMDAT                      20UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMDAT_S         20UL
#define PBE32_EVTMSK0_EVT1_MDMDAT_BM                   0x00100000UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMDAT_M         0x00100000UL
// enums for bitfield EVTMSK0_EVT1_MDMDAT (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMDAT_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_MDMDAT_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_MDMCMD
#define PBE32_EVTMSK0_EVT1_MDMCMD                      19UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMCMD_S         19UL
#define PBE32_EVTMSK0_EVT1_MDMCMD_BM                   0x00080000UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMCMD_M         0x00080000UL
// enums for bitfield EVTMSK0_EVT1_MDMCMD (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMCMD_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_MDMCMD_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_TIMER1
#define PBE32_EVTMSK0_EVT1_TIMER1                      18UL
#define RF24_PBE32_EVTMSK0_EVT1_TIMER1_S         18UL
#define PBE32_EVTMSK0_EVT1_TIMER1_BM                   0x00040000UL
#define RF24_PBE32_EVTMSK0_EVT1_TIMER1_M         0x00040000UL
// enums for bitfield EVTMSK0_EVT1_TIMER1 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_TIMER1_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_TIMER1_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_TIMER0
#define PBE32_EVTMSK0_EVT1_TIMER0                      17UL
#define RF24_PBE32_EVTMSK0_EVT1_TIMER0_S         17UL
#define PBE32_EVTMSK0_EVT1_TIMER0_BM                   0x00020000UL
#define RF24_PBE32_EVTMSK0_EVT1_TIMER0_M         0x00020000UL
// enums for bitfield EVTMSK0_EVT1_TIMER0 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_TIMER0_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_TIMER0_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_PBEAPI
#define PBE32_EVTMSK0_EVT1_PBEAPI                      16UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEAPI_S         16UL
#define PBE32_EVTMSK0_EVT1_PBEAPI_BM                   0x00010000UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEAPI_M         0x00010000UL
// enums for bitfield EVTMSK0_EVT1_PBEAPI (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEAPI_DIS                  0x0UL
#define PBE32_EVTMSK0_EVT1_PBEAPI_EN                   0x1UL
// bitfield: EVTMSK0_EVT1_TXRDBTHR
#define PBE32_EVTMSK0_EVT1_TXRDBTHR                    12UL
#define RF24_PBE32_EVTMSK0_EVT1_TXRDBTHR_S       12UL
#define PBE32_EVTMSK0_EVT1_TXRDBTHR_BM                 0x00001000UL
#define RF24_PBE32_EVTMSK0_EVT1_TXRDBTHR_M       0x00001000UL
// enums for bitfield EVTMSK0_EVT1_TXRDBTHR (width: 1)UL
#define PBE32_EVTMSK0_EVT1_TXRDBTHR_BELOW              0x0UL
#define PBE32_EVTMSK0_EVT1_TXRDBTHR_MET                0x1UL
// bitfield: EVTMSK0_EVT1_TXWRBTHR
#define PBE32_EVTMSK0_EVT1_TXWRBTHR                    11UL
#define RF24_PBE32_EVTMSK0_EVT1_TXWRBTHR_S       11UL
#define PBE32_EVTMSK0_EVT1_TXWRBTHR_BM                 0x00000800UL
#define RF24_PBE32_EVTMSK0_EVT1_TXWRBTHR_M       0x00000800UL
// enums for bitfield EVTMSK0_EVT1_TXWRBTHR (width: 1)UL
#define PBE32_EVTMSK0_EVT1_TXWRBTHR_BELOW              0x0UL
#define PBE32_EVTMSK0_EVT1_TXWRBTHR_MET                0x1UL
// bitfield: EVTMSK0_EVT1_RXRDBTHR
#define PBE32_EVTMSK0_EVT1_RXRDBTHR                    10UL
#define RF24_PBE32_EVTMSK0_EVT1_RXRDBTHR_S       10UL
#define PBE32_EVTMSK0_EVT1_RXRDBTHR_BM                 0x00000400UL
#define RF24_PBE32_EVTMSK0_EVT1_RXRDBTHR_M       0x00000400UL
// enums for bitfield EVTMSK0_EVT1_RXRDBTHR (width: 1)UL
#define PBE32_EVTMSK0_EVT1_RXRDBTHR_BELOW              0x0UL
#define PBE32_EVTMSK0_EVT1_RXRDBTHR_MET                0x1UL
// bitfield: EVTMSK0_EVT1_RXWRBTHR
#define PBE32_EVTMSK0_EVT1_RXWRBTHR                    9UL
#define RF24_PBE32_EVTMSK0_EVT1_RXWRBTHR_S       9UL
#define PBE32_EVTMSK0_EVT1_RXWRBTHR_BM                 0x00000200UL
#define RF24_PBE32_EVTMSK0_EVT1_RXWRBTHR_M       0x00000200UL
// enums for bitfield EVTMSK0_EVT1_RXWRBTHR (width: 1)UL
#define PBE32_EVTMSK0_EVT1_RXWRBTHR_BELOW              0x0UL
#define PBE32_EVTMSK0_EVT1_RXWRBTHR_MET                0x1UL
// bitfield: EVTMSK0_EVT1_MDMPROG
#define PBE32_EVTMSK0_EVT1_MDMPROG                     8UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMPROG_S        8UL
#define PBE32_EVTMSK0_EVT1_MDMPROG_BM                  0x00000100UL
#define RF24_PBE32_EVTMSK0_EVT1_MDMPROG_M        0x00000100UL
// enums for bitfield EVTMSK0_EVT1_MDMPROG (width: 1)UL
#define PBE32_EVTMSK0_EVT1_MDMPROG_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_MDMPROG_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI7
#define PBE32_EVTMSK0_EVT1_PBEGPI7                     7UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI7_S        7UL
#define PBE32_EVTMSK0_EVT1_PBEGPI7_BM                  0x00000080UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI7_M        0x00000080UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI7 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI7_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI7_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI6
#define PBE32_EVTMSK0_EVT1_PBEGPI6                     6UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI6_S        6UL
#define PBE32_EVTMSK0_EVT1_PBEGPI6_BM                  0x00000040UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI6_M        0x00000040UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI6 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI6_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI6_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI5
#define PBE32_EVTMSK0_EVT1_PBEGPI5                     5UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI5_S        5UL
#define PBE32_EVTMSK0_EVT1_PBEGPI5_BM                  0x00000020UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI5_M        0x00000020UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI5 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI5_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI5_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI4
#define PBE32_EVTMSK0_EVT1_PBEGPI4                     4UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI4_S        4UL
#define PBE32_EVTMSK0_EVT1_PBEGPI4_BM                  0x00000010UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI4_M        0x00000010UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI4 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI4_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI4_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI3
#define PBE32_EVTMSK0_EVT1_PBEGPI3                     3UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI3_S        3UL
#define PBE32_EVTMSK0_EVT1_PBEGPI3_BM                  0x00000008UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI3_M        0x00000008UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI3 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI3_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI3_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI2
#define PBE32_EVTMSK0_EVT1_PBEGPI2                     2UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI2_S        2UL
#define PBE32_EVTMSK0_EVT1_PBEGPI2_BM                  0x00000004UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI2_M        0x00000004UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI2 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI2_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI2_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI1
#define PBE32_EVTMSK0_EVT1_PBEGPI1                     1UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI1_S        1UL
#define PBE32_EVTMSK0_EVT1_PBEGPI1_BM                  0x00000002UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI1_M        0x00000002UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI1 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI1_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI1_ONE                 0x1UL
// bitfield: EVTMSK0_EVT1_PBEGPI0
#define PBE32_EVTMSK0_EVT1_PBEGPI0                     0UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI0_S        0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI0_BM                  0x00000001UL
#define RF24_PBE32_EVTMSK0_EVT1_PBEGPI0_M        0x00000001UL
// enums for bitfield EVTMSK0_EVT1_PBEGPI0 (width: 1)UL
#define PBE32_EVTMSK0_EVT1_PBEGPI0_ZERO                0x0UL
#define PBE32_EVTMSK0_EVT1_PBEGPI0_ONE                 0x1UL
// --------------------------------------------------------------
// EVTCLR0_EVTMSK1
// 
#define PBE32_EVTCLR0_EVTMSK1_ADR (PBE32_BASE + 0x0010UL)
static volatile unsigned long* const SP_PBE32_EVTCLR0_EVTMSK1 = (unsigned long*) PBE32_EVTCLR0_EVTMSK1_ADR;
#define S_PBE32_EVTCLR0_EVTMSK1 (*SP_PBE32_EVTCLR0_EVTMSK1)
#define RF24_PBE32_O_EVTCLR0_EVTMSK1               16
// bitfield: EVTCLR0_EVTMSK1_MDMFAEMPTY
#define PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY               31UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY_S  31UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY_BM            0x80000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY_M  0x80000000UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMFAEMPTY (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY_RETAIN        0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAEMPTY_CLEAR         0x1UL
// bitfield: EVTCLR0_EVTMSK1_S2RSTOP
#define PBE32_EVTCLR0_EVTMSK1_S2RSTOP                  30UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_S2RSTOP_S     30UL
#define PBE32_EVTCLR0_EVTMSK1_S2RSTOP_BM               0x40000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_S2RSTOP_M     0x40000000UL
// enums for bitfield EVTCLR0_EVTMSK1_S2RSTOP (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_S2RSTOP_RETAIN           0x0UL
#define PBE32_EVTCLR0_EVTMSK1_S2RSTOP_CLEAR            0x1UL
// bitfield: EVTCLR0_EVTMSK1_FIFOERR
#define PBE32_EVTCLR0_EVTMSK1_FIFOERR                  29UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_FIFOERR_S     29UL
#define PBE32_EVTCLR0_EVTMSK1_FIFOERR_BM               0x20000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_FIFOERR_M     0x20000000UL
// enums for bitfield EVTCLR0_EVTMSK1_FIFOERR (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_FIFOERR_RETAIN           0x0UL
#define PBE32_EVTCLR0_EVTMSK1_FIFOERR_CLEAR            0x1UL
// bitfield: EVTCLR0_EVTMSK1_MDMFAFULL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAFULL                28UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMFAFULL_S   28UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAFULL_BM             0x10000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMFAFULL_M   0x10000000UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMFAFULL (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAFULL_RETAIN         0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMFAFULL_CLEAR          0x1UL
// bitfield: EVTCLR0_EVTMSK1_SYSTCMP2
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP2                 27UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP2_S    27UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP2_BM              0x08000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP2_M    0x08000000UL
// enums for bitfield EVTCLR0_EVTMSK1_SYSTCMP2 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP2_RETAIN          0x0UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP2_CLEAR           0x1UL
// bitfield: EVTCLR0_EVTMSK1_SYSTCMP1
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP1                 26UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP1_S    26UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP1_BM              0x04000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP1_M    0x04000000UL
// enums for bitfield EVTCLR0_EVTMSK1_SYSTCMP1 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP1_RETAIN          0x0UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP1_CLEAR           0x1UL
// bitfield: EVTCLR0_EVTMSK1_SYSTCMP0
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP0                 25UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP0_S    25UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP0_BM              0x02000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_SYSTCMP0_M    0x02000000UL
// enums for bitfield EVTCLR0_EVTMSK1_SYSTCMP0 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP0_RETAIN          0x0UL
#define PBE32_EVTCLR0_EVTMSK1_SYSTCMP0_CLEAR           0x1UL
// bitfield: EVTCLR0_EVTMSK1_MDMMSGBOX
#define PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX                24UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX_S   24UL
#define PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX_BM             0x01000000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX_M   0x01000000UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMMSGBOX (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX_RETAIN         0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMMSGBOX_CLEAR          0x1UL
// bitfield: EVTCLR0_EVTMSK1_RFEMSGBOX
#define PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX                23UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX_S   23UL
#define PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX_BM             0x00800000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX_M   0x00800000UL
// enums for bitfield EVTCLR0_EVTMSK1_RFEMSGBOX (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX_RETAIN         0x0UL
#define PBE32_EVTCLR0_EVTMSK1_RFEMSGBOX_CLEAR          0x1UL
// bitfield: EVTCLR0_EVTMSK1_RFEDAT
#define PBE32_EVTCLR0_EVTMSK1_RFEDAT                   22UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFEDAT_S      22UL
#define PBE32_EVTCLR0_EVTMSK1_RFEDAT_BM                0x00400000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFEDAT_M      0x00400000UL
// enums for bitfield EVTCLR0_EVTMSK1_RFEDAT (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_RFEDAT_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_RFEDAT_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_RFECMD
#define PBE32_EVTCLR0_EVTMSK1_RFECMD                   21UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFECMD_S      21UL
#define PBE32_EVTCLR0_EVTMSK1_RFECMD_BM                0x00200000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RFECMD_M      0x00200000UL
// enums for bitfield EVTCLR0_EVTMSK1_RFECMD (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_RFECMD_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_RFECMD_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_MDMDAT
#define PBE32_EVTCLR0_EVTMSK1_MDMDAT                   20UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMDAT_S      20UL
#define PBE32_EVTCLR0_EVTMSK1_MDMDAT_BM                0x00100000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMDAT_M      0x00100000UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMDAT (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMDAT_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMDAT_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_MDMCMD
#define PBE32_EVTCLR0_EVTMSK1_MDMCMD                   19UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMCMD_S      19UL
#define PBE32_EVTCLR0_EVTMSK1_MDMCMD_BM                0x00080000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMCMD_M      0x00080000UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMCMD (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMCMD_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMCMD_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_TIMER1
#define PBE32_EVTCLR0_EVTMSK1_TIMER1                   18UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TIMER1_S      18UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER1_BM                0x00040000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TIMER1_M      0x00040000UL
// enums for bitfield EVTCLR0_EVTMSK1_TIMER1 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER1_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER1_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_TIMER0
#define PBE32_EVTCLR0_EVTMSK1_TIMER0                   17UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TIMER0_S      17UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER0_BM                0x00020000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TIMER0_M      0x00020000UL
// enums for bitfield EVTCLR0_EVTMSK1_TIMER0 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER0_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_TIMER0_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEAPI
#define PBE32_EVTCLR0_EVTMSK1_PBEAPI                   16UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEAPI_S      16UL
#define PBE32_EVTCLR0_EVTMSK1_PBEAPI_BM                0x00010000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEAPI_M      0x00010000UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEAPI (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEAPI_RETAIN            0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEAPI_CLEAR             0x1UL
// bitfield: EVTCLR0_EVTMSK1_TXRDBTHR
#define PBE32_EVTCLR0_EVTMSK1_TXRDBTHR                 12UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TXRDBTHR_S    12UL
#define PBE32_EVTCLR0_EVTMSK1_TXRDBTHR_BM              0x00001000UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TXRDBTHR_M    0x00001000UL
// enums for bitfield EVTCLR0_EVTMSK1_TXRDBTHR (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_TXRDBTHR_DIS             0x0UL
#define PBE32_EVTCLR0_EVTMSK1_TXRDBTHR_EN              0x1UL
// bitfield: EVTCLR0_EVTMSK1_TXWRBTHR
#define PBE32_EVTCLR0_EVTMSK1_TXWRBTHR                 11UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TXWRBTHR_S    11UL
#define PBE32_EVTCLR0_EVTMSK1_TXWRBTHR_BM              0x00000800UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_TXWRBTHR_M    0x00000800UL
// enums for bitfield EVTCLR0_EVTMSK1_TXWRBTHR (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_TXWRBTHR_DIS             0x0UL
#define PBE32_EVTCLR0_EVTMSK1_TXWRBTHR_EN              0x1UL
// bitfield: EVTCLR0_EVTMSK1_RXRDBTHR
#define PBE32_EVTCLR0_EVTMSK1_RXRDBTHR                 10UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RXRDBTHR_S    10UL
#define PBE32_EVTCLR0_EVTMSK1_RXRDBTHR_BM              0x00000400UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RXRDBTHR_M    0x00000400UL
// enums for bitfield EVTCLR0_EVTMSK1_RXRDBTHR (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_RXRDBTHR_DIS             0x0UL
#define PBE32_EVTCLR0_EVTMSK1_RXRDBTHR_EN              0x1UL
// bitfield: EVTCLR0_EVTMSK1_RXWRBTHR
#define PBE32_EVTCLR0_EVTMSK1_RXWRBTHR                 9UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RXWRBTHR_S    9UL
#define PBE32_EVTCLR0_EVTMSK1_RXWRBTHR_BM              0x00000200UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_RXWRBTHR_M    0x00000200UL
// enums for bitfield EVTCLR0_EVTMSK1_RXWRBTHR (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_RXWRBTHR_DIS             0x0UL
#define PBE32_EVTCLR0_EVTMSK1_RXWRBTHR_EN              0x1UL
// bitfield: EVTCLR0_EVTMSK1_MDMPROG
#define PBE32_EVTCLR0_EVTMSK1_MDMPROG                  8UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMPROG_S     8UL
#define PBE32_EVTCLR0_EVTMSK1_MDMPROG_BM               0x00000100UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_MDMPROG_M     0x00000100UL
// enums for bitfield EVTCLR0_EVTMSK1_MDMPROG (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_MDMPROG_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_MDMPROG_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI7
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI7                  7UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI7_S     7UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI7_BM               0x00000080UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI7_M     0x00000080UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI7 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI7_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI7_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI6
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI6                  6UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI6_S     6UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI6_BM               0x00000040UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI6_M     0x00000040UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI6 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI6_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI6_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI5
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI5                  5UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI5_S     5UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI5_BM               0x00000020UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI5_M     0x00000020UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI5 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI5_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI5_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI4
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI4                  4UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI4_S     4UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI4_BM               0x00000010UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI4_M     0x00000010UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI4 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI4_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI4_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI3
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI3                  3UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI3_S     3UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI3_BM               0x00000008UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI3_M     0x00000008UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI3 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI3_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI3_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI2
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI2                  2UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI2_S     2UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI2_BM               0x00000004UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI2_M     0x00000004UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI2 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI2_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI2_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI1
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI1                  1UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI1_S     1UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI1_BM               0x00000002UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI1_M     0x00000002UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI1 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI1_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI1_EN               0x1UL
// bitfield: EVTCLR0_EVTMSK1_PBEGPI0
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI0                  0UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI0_S     0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI0_BM               0x00000001UL
#define RF24_PBE32_EVTCLR0_EVTMSK1_PBEGPI0_M     0x00000001UL
// enums for bitfield EVTCLR0_EVTMSK1_PBEGPI0 (width: 1)UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI0_DIS              0x0UL
#define PBE32_EVTCLR0_EVTMSK1_PBEGPI0_EN               0x1UL
// --------------------------------------------------------------
// PDREQ_EVTCLR1
// 
#define PBE32_PDREQ_EVTCLR1_ADR (PBE32_BASE + 0x0014UL)
static volatile unsigned long* const SP_PBE32_PDREQ_EVTCLR1 = (unsigned long*) PBE32_PDREQ_EVTCLR1_ADR;
#define S_PBE32_PDREQ_EVTCLR1 (*SP_PBE32_PDREQ_EVTCLR1)
#define RF24_PBE32_O_PDREQ_EVTCLR1                 20
// bitfield: PDREQ_EVTCLR1_TOPSMPDREQ
#define PBE32_PDREQ_EVTCLR1_TOPSMPDREQ                 16UL
#define RF24_PBE32_PDREQ_EVTCLR1_TOPSMPDREQ_S    16UL
#define PBE32_PDREQ_EVTCLR1_TOPSMPDREQ_BM              0x00010000UL
#define RF24_PBE32_PDREQ_EVTCLR1_TOPSMPDREQ_M    0x00010000UL
// enums for bitfield PDREQ_EVTCLR1_TOPSMPDREQ (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_TOPSMPDREQ_OFF             0x0UL
#define PBE32_PDREQ_EVTCLR1_TOPSMPDREQ_ON              0x1UL
// bitfield: PDREQ_EVTCLR1_TXRDBTHR
#define PBE32_PDREQ_EVTCLR1_TXRDBTHR                   12UL
#define RF24_PBE32_PDREQ_EVTCLR1_TXRDBTHR_S      12UL
#define PBE32_PDREQ_EVTCLR1_TXRDBTHR_BM                0x00001000UL
#define RF24_PBE32_PDREQ_EVTCLR1_TXRDBTHR_M      0x00001000UL
// enums for bitfield PDREQ_EVTCLR1_TXRDBTHR (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_TXRDBTHR_RETAIN            0x0UL
#define PBE32_PDREQ_EVTCLR1_TXRDBTHR_CLEAR             0x1UL
// bitfield: PDREQ_EVTCLR1_TXWRBTHR
#define PBE32_PDREQ_EVTCLR1_TXWRBTHR                   11UL
#define RF24_PBE32_PDREQ_EVTCLR1_TXWRBTHR_S      11UL
#define PBE32_PDREQ_EVTCLR1_TXWRBTHR_BM                0x00000800UL
#define RF24_PBE32_PDREQ_EVTCLR1_TXWRBTHR_M      0x00000800UL
// enums for bitfield PDREQ_EVTCLR1_TXWRBTHR (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_TXWRBTHR_RETAIN            0x0UL
#define PBE32_PDREQ_EVTCLR1_TXWRBTHR_CLEAR             0x1UL
// bitfield: PDREQ_EVTCLR1_RXRDBTHR
#define PBE32_PDREQ_EVTCLR1_RXRDBTHR                   10UL
#define RF24_PBE32_PDREQ_EVTCLR1_RXRDBTHR_S      10UL
#define PBE32_PDREQ_EVTCLR1_RXRDBTHR_BM                0x00000400UL
#define RF24_PBE32_PDREQ_EVTCLR1_RXRDBTHR_M      0x00000400UL
// enums for bitfield PDREQ_EVTCLR1_RXRDBTHR (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_RXRDBTHR_RETAIN            0x0UL
#define PBE32_PDREQ_EVTCLR1_RXRDBTHR_CLEAR             0x1UL
// bitfield: PDREQ_EVTCLR1_RXWRBTHR
#define PBE32_PDREQ_EVTCLR1_RXWRBTHR                   9UL
#define RF24_PBE32_PDREQ_EVTCLR1_RXWRBTHR_S      9UL
#define PBE32_PDREQ_EVTCLR1_RXWRBTHR_BM                0x00000200UL
#define RF24_PBE32_PDREQ_EVTCLR1_RXWRBTHR_M      0x00000200UL
// enums for bitfield PDREQ_EVTCLR1_RXWRBTHR (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_RXWRBTHR_RETAIN            0x0UL
#define PBE32_PDREQ_EVTCLR1_RXWRBTHR_CLEAR             0x1UL
// bitfield: PDREQ_EVTCLR1_MDMPROG
#define PBE32_PDREQ_EVTCLR1_MDMPROG                    8UL
#define RF24_PBE32_PDREQ_EVTCLR1_MDMPROG_S       8UL
#define PBE32_PDREQ_EVTCLR1_MDMPROG_BM                 0x00000100UL
#define RF24_PBE32_PDREQ_EVTCLR1_MDMPROG_M       0x00000100UL
// enums for bitfield PDREQ_EVTCLR1_MDMPROG (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_MDMPROG_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_MDMPROG_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI7
#define PBE32_PDREQ_EVTCLR1_PBEGPI7                    7UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI7_S       7UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI7_BM                 0x00000080UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI7_M       0x00000080UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI7 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI7_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI7_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI6
#define PBE32_PDREQ_EVTCLR1_PBEGPI6                    6UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI6_S       6UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI6_BM                 0x00000040UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI6_M       0x00000040UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI6 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI6_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI6_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI5
#define PBE32_PDREQ_EVTCLR1_PBEGPI5                    5UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI5_S       5UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI5_BM                 0x00000020UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI5_M       0x00000020UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI5 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI5_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI5_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI4
#define PBE32_PDREQ_EVTCLR1_PBEGPI4                    4UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI4_S       4UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI4_BM                 0x00000010UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI4_M       0x00000010UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI4 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI4_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI4_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI3
#define PBE32_PDREQ_EVTCLR1_PBEGPI3                    3UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI3_S       3UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI3_BM                 0x00000008UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI3_M       0x00000008UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI3 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI3_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI3_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI2
#define PBE32_PDREQ_EVTCLR1_PBEGPI2                    2UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI2_S       2UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI2_BM                 0x00000004UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI2_M       0x00000004UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI2 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI2_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI2_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI1
#define PBE32_PDREQ_EVTCLR1_PBEGPI1                    1UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI1_S       1UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI1_BM                 0x00000002UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI1_M       0x00000002UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI1 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI1_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI1_CLEAR              0x1UL
// bitfield: PDREQ_EVTCLR1_PBEGPI0
#define PBE32_PDREQ_EVTCLR1_PBEGPI0                    0UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI0_S       0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI0_BM                 0x00000001UL
#define RF24_PBE32_PDREQ_EVTCLR1_PBEGPI0_M       0x00000001UL
// enums for bitfield PDREQ_EVTCLR1_PBEGPI0 (width: 1)UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI0_RETAIN             0x0UL
#define PBE32_PDREQ_EVTCLR1_PBEGPI0_CLEAR              0x1UL
// --------------------------------------------------------------
// MCEDATOUT0_API
// 
#define PBE32_MCEDATOUT0_API_ADR (PBE32_BASE + 0x0018UL)
static volatile unsigned long* const SP_PBE32_MCEDATOUT0_API = (unsigned long*) PBE32_MCEDATOUT0_API_ADR;
#define S_PBE32_MCEDATOUT0_API (*SP_PBE32_MCEDATOUT0_API)
#define RF24_PBE32_O_MCEDATOUT0_API                24
// bitfield: MCEDATOUT0_API_VAL
#define PBE32_MCEDATOUT0_API_VAL                       16UL
#define RF24_PBE32_MCEDATOUT0_API_VAL_S          16UL
#define PBE32_MCEDATOUT0_API_VAL_BM                    0xFFFF0000UL
#define RF24_PBE32_MCEDATOUT0_API_VAL_M          0xFFFF0000UL
// enums for bitfield MCEDATOUT0_API_VAL (width: 16)UL
#define PBE32_MCEDATOUT0_API_VAL_ALLZEROS              0x0000UL
#define PBE32_MCEDATOUT0_API_VAL_ALLONES               0xFFFFUL
// bitfield: MCEDATOUT0_API_PBECMD
#define PBE32_MCEDATOUT0_API_PBECMD                    0UL
#define RF24_PBE32_MCEDATOUT0_API_PBECMD_S       0UL
#define PBE32_MCEDATOUT0_API_PBECMD_BM                 0x0000001FUL
#define RF24_PBE32_MCEDATOUT0_API_PBECMD_M       0x0000001FUL
// enums for bitfield MCEDATOUT0_API_PBECMD (width: 5)UL
#define PBE32_MCEDATOUT0_API_PBECMD_ALLZEROS           0x00UL
#define PBE32_MCEDATOUT0_API_PBECMD_ALLONES            0x1FUL
// --------------------------------------------------------------
// MCECMDOUT_MCEDATIN0
// 
#define PBE32_MCECMDOUT_MCEDATIN0_ADR (PBE32_BASE + 0x001CUL)
static volatile unsigned long* const SP_PBE32_MCECMDOUT_MCEDATIN0 = (unsigned long*) PBE32_MCECMDOUT_MCEDATIN0_ADR;
#define S_PBE32_MCECMDOUT_MCEDATIN0 (*SP_PBE32_MCECMDOUT_MCEDATIN0)
#define RF24_PBE32_O_MCECMDOUT_MCEDATIN0           28
// bitfield: MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL
#define PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL        16UL
#define RF24_PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL_S 16UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL_BM     0x000F0000UL
#define RF24_PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL_M 0x000F0000UL
// enums for bitfield MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL (width: 4)UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL_ALLZEROS 0x0UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCECMDOUT_VAL_ALLONES 0xFUL
// bitfield: MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL
#define PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL        0UL
#define RF24_PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL_S 0UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL_BM     0x0000FFFFUL
#define RF24_PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL_M 0x0000FFFFUL
// enums for bitfield MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL (width: 16)UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL_ALLZEROS 0x0000UL
#define PBE32_MCECMDOUT_MCEDATIN0_MCEDATIN0_VAL_ALLONES 0xFFFFUL
// --------------------------------------------------------------
// MDMAPI_MCECMDIN
// 
#define PBE32_MDMAPI_MCECMDIN_ADR (PBE32_BASE + 0x0020UL)
static volatile unsigned long* const SP_PBE32_MDMAPI_MCECMDIN = (unsigned long*) PBE32_MDMAPI_MCECMDIN_ADR;
#define S_PBE32_MDMAPI_MCECMDIN (*SP_PBE32_MDMAPI_MCECMDIN)
#define RF24_PBE32_O_MDMAPI_MCECMDIN               32
// bitfield: MDMAPI_MCECMDIN_PROTOCOLID
#define PBE32_MDMAPI_MCECMDIN_PROTOCOLID               20UL
#define RF24_PBE32_MDMAPI_MCECMDIN_PROTOCOLID_S  20UL
#define PBE32_MDMAPI_MCECMDIN_PROTOCOLID_BM            0x00F00000UL
#define RF24_PBE32_MDMAPI_MCECMDIN_PROTOCOLID_M  0x00F00000UL
// enums for bitfield MDMAPI_MCECMDIN_PROTOCOLID (width: 4)UL
#define PBE32_MDMAPI_MCECMDIN_PROTOCOLID_ALLZEROS      0x0UL
#define PBE32_MDMAPI_MCECMDIN_PROTOCOLID_ALLONES       0xFUL
// bitfield: MDMAPI_MCECMDIN_MDMCMD
#define PBE32_MDMAPI_MCECMDIN_MDMCMD                   16UL
#define RF24_PBE32_MDMAPI_MCECMDIN_MDMCMD_S      16UL
#define PBE32_MDMAPI_MCECMDIN_MDMCMD_BM                0x000F0000UL
#define RF24_PBE32_MDMAPI_MCECMDIN_MDMCMD_M      0x000F0000UL
// enums for bitfield MDMAPI_MCECMDIN_MDMCMD (width: 4)UL
#define PBE32_MDMAPI_MCECMDIN_MDMCMD_ALLZEROS          0x0UL
#define PBE32_MDMAPI_MCECMDIN_MDMCMD_ALLONES           0xFUL
// bitfield: MDMAPI_MCECMDIN_VAL
#define PBE32_MDMAPI_MCECMDIN_VAL                      0UL
#define RF24_PBE32_MDMAPI_MCECMDIN_VAL_S         0UL
#define PBE32_MDMAPI_MCECMDIN_VAL_BM                   0x0000000FUL
#define RF24_PBE32_MDMAPI_MCECMDIN_VAL_M         0x0000000FUL
// enums for bitfield MDMAPI_MCECMDIN_VAL (width: 4)UL
#define PBE32_MDMAPI_MCECMDIN_VAL_ALLZEROS             0x0UL
#define PBE32_MDMAPI_MCECMDIN_VAL_ALLONES              0xFUL
// --------------------------------------------------------------
// FREQ_MDMMSGBOX
// 
#define PBE32_FREQ_MDMMSGBOX_ADR (PBE32_BASE + 0x0024UL)
static volatile unsigned long* const SP_PBE32_FREQ_MDMMSGBOX = (unsigned long*) PBE32_FREQ_MDMMSGBOX_ADR;
#define S_PBE32_FREQ_MDMMSGBOX (*SP_PBE32_FREQ_MDMMSGBOX)
#define RF24_PBE32_O_FREQ_MDMMSGBOX                36
// bitfield: FREQ_MDMMSGBOX_OFFSET
#define PBE32_FREQ_MDMMSGBOX_OFFSET                    16UL
#define RF24_PBE32_FREQ_MDMMSGBOX_OFFSET_S       16UL
#define PBE32_FREQ_MDMMSGBOX_OFFSET_BM                 0xFFFF0000UL
#define RF24_PBE32_FREQ_MDMMSGBOX_OFFSET_M       0xFFFF0000UL
// enums for bitfield FREQ_MDMMSGBOX_OFFSET (width: 16)UL
#define PBE32_FREQ_MDMMSGBOX_OFFSET_ALLZEROS           0x0000UL
#define PBE32_FREQ_MDMMSGBOX_OFFSET_ALLONES            0xFFFFUL
// bitfield: FREQ_MDMMSGBOX_VALUE
#define PBE32_FREQ_MDMMSGBOX_VALUE                     0UL
#define RF24_PBE32_FREQ_MDMMSGBOX_VALUE_S        0UL
#define PBE32_FREQ_MDMMSGBOX_VALUE_BM                  0x000000FFUL
#define RF24_PBE32_FREQ_MDMMSGBOX_VALUE_M        0x000000FFUL
// enums for bitfield FREQ_MDMMSGBOX_VALUE (width: 8)UL
#define PBE32_FREQ_MDMMSGBOX_VALUE_ALLZEROS            0x00UL
#define PBE32_FREQ_MDMMSGBOX_VALUE_ALLONES             0xFFUL
// --------------------------------------------------------------
// RFEDATOUT0_MDMLQI
// 
#define PBE32_RFEDATOUT0_MDMLQI_ADR (PBE32_BASE + 0x0028UL)
static volatile unsigned long* const SP_PBE32_RFEDATOUT0_MDMLQI = (unsigned long*) PBE32_RFEDATOUT0_MDMLQI_ADR;
#define S_PBE32_RFEDATOUT0_MDMLQI (*SP_PBE32_RFEDATOUT0_MDMLQI)
#define RF24_PBE32_O_RFEDATOUT0_MDMLQI             40
// bitfield: RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL
#define PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL         16UL
#define RF24_PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL_S 16UL
#define PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL_BM      0xFFFF0000UL
#define RF24_PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL_M 0xFFFF0000UL
// enums for bitfield RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL (width: 16)UL
#define PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL_ALLZEROS 0x0000UL
#define PBE32_RFEDATOUT0_MDMLQI_RFEDATOUT0_VAL_ALLONES 0xFFFFUL
// bitfield: RFEDATOUT0_MDMLQI_MDMLQI_VAL
#define PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL             0UL
#define RF24_PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL_S 0UL
#define PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL_BM          0x000000FFUL
#define RF24_PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL_M 0x000000FFUL
// enums for bitfield RFEDATOUT0_MDMLQI_MDMLQI_VAL (width: 8)UL
#define PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL_ALLZEROS    0x00UL
#define PBE32_RFEDATOUT0_MDMLQI_MDMLQI_VAL_ALLONES     0xFFUL
// --------------------------------------------------------------
// RFECMDOUT_RFEDATIN0
// 
#define PBE32_RFECMDOUT_RFEDATIN0_ADR (PBE32_BASE + 0x002CUL)
static volatile unsigned long* const SP_PBE32_RFECMDOUT_RFEDATIN0 = (unsigned long*) PBE32_RFECMDOUT_RFEDATIN0_ADR;
#define S_PBE32_RFECMDOUT_RFEDATIN0 (*SP_PBE32_RFECMDOUT_RFEDATIN0)
#define RF24_PBE32_O_RFECMDOUT_RFEDATIN0           44
// bitfield: RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL
#define PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL        16UL
#define RF24_PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL_S 16UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL_BM     0x000F0000UL
#define RF24_PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL_M 0x000F0000UL
// enums for bitfield RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL (width: 4)UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL_ALLZEROS 0x0UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFECMDOUT_VAL_ALLONES 0xFUL
// bitfield: RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL
#define PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL        0UL
#define RF24_PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL_S 0UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL_BM     0x0000FFFFUL
#define RF24_PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL_M 0x0000FFFFUL
// enums for bitfield RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL (width: 16)UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL_ALLZEROS 0x0000UL
#define PBE32_RFECMDOUT_RFEDATIN0_RFEDATIN0_VAL_ALLONES 0xFFFFUL
// --------------------------------------------------------------
// RFEAPI_RFECMDIN
// 
#define PBE32_RFEAPI_RFECMDIN_ADR (PBE32_BASE + 0x0030UL)
static volatile unsigned long* const SP_PBE32_RFEAPI_RFECMDIN = (unsigned long*) PBE32_RFEAPI_RFECMDIN_ADR;
#define S_PBE32_RFEAPI_RFECMDIN (*SP_PBE32_RFEAPI_RFECMDIN)
#define RF24_PBE32_O_RFEAPI_RFECMDIN               48
// bitfield: RFEAPI_RFECMDIN_PROTOCOLID
#define PBE32_RFEAPI_RFECMDIN_PROTOCOLID               20UL
#define RF24_PBE32_RFEAPI_RFECMDIN_PROTOCOLID_S  20UL
#define PBE32_RFEAPI_RFECMDIN_PROTOCOLID_BM            0x00F00000UL
#define RF24_PBE32_RFEAPI_RFECMDIN_PROTOCOLID_M  0x00F00000UL
// enums for bitfield RFEAPI_RFECMDIN_PROTOCOLID (width: 4)UL
#define PBE32_RFEAPI_RFECMDIN_PROTOCOLID_ALLZEROS      0x0UL
#define PBE32_RFEAPI_RFECMDIN_PROTOCOLID_ALLONES       0xFUL
// bitfield: RFEAPI_RFECMDIN_RFECMD
#define PBE32_RFEAPI_RFECMDIN_RFECMD                   16UL
#define RF24_PBE32_RFEAPI_RFECMDIN_RFECMD_S      16UL
#define PBE32_RFEAPI_RFECMDIN_RFECMD_BM                0x000F0000UL
#define RF24_PBE32_RFEAPI_RFECMDIN_RFECMD_M      0x000F0000UL
// enums for bitfield RFEAPI_RFECMDIN_RFECMD (width: 4)UL
#define PBE32_RFEAPI_RFECMDIN_RFECMD_ALLZEROS          0x0UL
#define PBE32_RFEAPI_RFECMDIN_RFECMD_ALLONES           0xFUL
// bitfield: RFEAPI_RFECMDIN_VAL
#define PBE32_RFEAPI_RFECMDIN_VAL                      0UL
#define RF24_PBE32_RFEAPI_RFECMDIN_VAL_S         0UL
#define PBE32_RFEAPI_RFECMDIN_VAL_BM                   0x0000000FUL
#define RF24_PBE32_RFEAPI_RFECMDIN_VAL_M         0x0000000FUL
// enums for bitfield RFEAPI_RFECMDIN_VAL (width: 4)UL
#define PBE32_RFEAPI_RFECMDIN_VAL_ALLZEROS             0x0UL
#define PBE32_RFEAPI_RFECMDIN_VAL_ALLONES              0xFUL
// --------------------------------------------------------------
// RFECMDPAR1_RFECMDPAR0
// 
#define PBE32_RFECMDPAR1_RFECMDPAR0_ADR (PBE32_BASE + 0x0034UL)
static volatile unsigned long* const SP_PBE32_RFECMDPAR1_RFECMDPAR0 = (unsigned long*) PBE32_RFECMDPAR1_RFECMDPAR0_ADR;
#define S_PBE32_RFECMDPAR1_RFECMDPAR0 (*SP_PBE32_RFECMDPAR1_RFECMDPAR0)
#define RF24_PBE32_O_RFECMDPAR1_RFECMDPAR0         52
// bitfield: RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL     16UL
#define RF24_PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL_S 16UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL_BM  0xFFFF0000UL
#define RF24_PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL_M 0xFFFF0000UL
// enums for bitfield RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL (width: 16)UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL_ALLZEROS 0x0000UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR1_VAL_ALLONES 0xFFFFUL
// bitfield: RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL     0UL
#define RF24_PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL_S 0UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL_BM  0x0000FFFFUL
#define RF24_PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL_M 0x0000FFFFUL
// enums for bitfield RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL (width: 16)UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL_ALLZEROS 0x0000UL
#define PBE32_RFECMDPAR1_RFECMDPAR0_RFECMDPAR0_VAL_ALLONES 0xFFFFUL
// --------------------------------------------------------------
// RFERSSI_RFEMSGBOX
// 
#define PBE32_RFERSSI_RFEMSGBOX_ADR (PBE32_BASE + 0x0038UL)
static volatile unsigned long* const SP_PBE32_RFERSSI_RFEMSGBOX = (unsigned long*) PBE32_RFERSSI_RFEMSGBOX_ADR;
#define S_PBE32_RFERSSI_RFEMSGBOX (*SP_PBE32_RFERSSI_RFEMSGBOX)
#define RF24_PBE32_O_RFERSSI_RFEMSGBOX             56
// bitfield: RFERSSI_RFEMSGBOX_RFERSSI_VAL
#define PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL            16UL
#define RF24_PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL_S 16UL
#define PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL_BM         0x00FF0000UL
#define RF24_PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL_M 0x00FF0000UL
// enums for bitfield RFERSSI_RFEMSGBOX_RFERSSI_VAL (width: 8)UL
#define PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL_ALLZEROS   0x00UL
#define PBE32_RFERSSI_RFEMSGBOX_RFERSSI_VAL_ALLONES    0xFFUL
// bitfield: RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL
#define PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL          0UL
#define RF24_PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL_S 0UL
#define PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL_BM       0x000000FFUL
#define RF24_PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL_M 0x000000FFUL
// enums for bitfield RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL (width: 8)UL
#define PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL_ALLZEROS 0x00UL
#define PBE32_RFERSSI_RFEMSGBOX_RFEMSGBOX_VAL_ALLONES  0xFFUL
// --------------------------------------------------------------
// RFERFGAIN_RFERSSIMAX
// 
#define PBE32_RFERFGAIN_RFERSSIMAX_ADR (PBE32_BASE + 0x003CUL)
static volatile unsigned long* const SP_PBE32_RFERFGAIN_RFERSSIMAX = (unsigned long*) PBE32_RFERFGAIN_RFERSSIMAX_ADR;
#define S_PBE32_RFERFGAIN_RFERSSIMAX (*SP_PBE32_RFERFGAIN_RFERSSIMAX)
#define RF24_PBE32_O_RFERFGAIN_RFERSSIMAX          60
// bitfield: RFERFGAIN_RFERSSIMAX_DBGAIN
#define PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN              16UL
#define RF24_PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN_S 16UL
#define PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN_BM           0x00FF0000UL
#define RF24_PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN_M 0x00FF0000UL
// enums for bitfield RFERFGAIN_RFERSSIMAX_DBGAIN (width: 8)UL
#define PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN_ALLZEROS     0x00UL
#define PBE32_RFERFGAIN_RFERSSIMAX_DBGAIN_ALLONES      0xFFUL
// bitfield: RFERFGAIN_RFERSSIMAX_VAL
#define PBE32_RFERFGAIN_RFERSSIMAX_VAL                 0UL
#define RF24_PBE32_RFERFGAIN_RFERSSIMAX_VAL_S    0UL
#define PBE32_RFERFGAIN_RFERSSIMAX_VAL_BM              0x000000FFUL
#define RF24_PBE32_RFERFGAIN_RFERSSIMAX_VAL_M    0x000000FFUL
// enums for bitfield RFERFGAIN_RFERSSIMAX_VAL (width: 8)UL
#define PBE32_RFERFGAIN_RFERSSIMAX_VAL_ALLZEROS        0x00UL
#define PBE32_RFERFGAIN_RFERSSIMAX_VAL_ALLONES         0xFFUL
// --------------------------------------------------------------
// MDMSYNCA
// 
#define PBE32_MDMSYNCA_ADR (PBE32_BASE + 0x0040UL)
static volatile unsigned long* const SP_PBE32_MDMSYNCA = (unsigned long*) PBE32_MDMSYNCA_ADR;
#define S_PBE32_MDMSYNCA (*SP_PBE32_MDMSYNCA)
#define RF24_PBE32_O_MDMSYNCA                      64
// bitfield: MDMSYNCA_SWA
#define PBE32_MDMSYNCA_SWA                             0UL
#define RF24_PBE32_MDMSYNCA_SWA_S                0UL
#define PBE32_MDMSYNCA_SWA_BM                          0xFFFFFFFFUL
#define RF24_PBE32_MDMSYNCA_SWA_M                0xFFFFFFFFUL
// enums for bitfield MDMSYNCA_SWA (width: 32)UL
#define PBE32_MDMSYNCA_SWA_ALLZEROS                    0x00000000UL
#define PBE32_MDMSYNCA_SWA_ALLONES                     0x0000FFFFUL
// --------------------------------------------------------------
// MDMSYNCB
// 
#define PBE32_MDMSYNCB_ADR (PBE32_BASE + 0x0044UL)
static volatile unsigned long* const SP_PBE32_MDMSYNCB = (unsigned long*) PBE32_MDMSYNCB_ADR;
#define S_PBE32_MDMSYNCB (*SP_PBE32_MDMSYNCB)
#define RF24_PBE32_O_MDMSYNCB                      68
// bitfield: MDMSYNCB_SWB
#define PBE32_MDMSYNCB_SWB                             0UL
#define RF24_PBE32_MDMSYNCB_SWB_S                0UL
#define PBE32_MDMSYNCB_SWB_BM                          0xFFFFFFFFUL
#define RF24_PBE32_MDMSYNCB_SWB_M                0xFFFFFFFFUL
// enums for bitfield MDMSYNCB_SWB (width: 32)UL
#define PBE32_MDMSYNCB_SWB_ALLZEROS                    0x00000000UL
#define PBE32_MDMSYNCB_SWB_ALLONES                     0x0000FFFFUL
// --------------------------------------------------------------
// MDMCMDPAR1_MDMCMDPAR0
// 
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_ADR (PBE32_BASE + 0x0048UL)
static volatile unsigned long* const SP_PBE32_MDMCMDPAR1_MDMCMDPAR0 = (unsigned long*) PBE32_MDMCMDPAR1_MDMCMDPAR0_ADR;
#define S_PBE32_MDMCMDPAR1_MDMCMDPAR0 (*SP_PBE32_MDMCMDPAR1_MDMCMDPAR0)
#define RF24_PBE32_O_MDMCMDPAR1_MDMCMDPAR0         72
// bitfield: MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL     16UL
#define RF24_PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL_S 16UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL_BM  0xFFFF0000UL
#define RF24_PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL_M 0xFFFF0000UL
// enums for bitfield MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL (width: 16)UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL_ALLZEROS 0x0000UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR1_VAL_ALLONES 0xFFFFUL
// bitfield: MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL     0UL
#define RF24_PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL_S 0UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL_BM  0x0000FFFFUL
#define RF24_PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL_M 0x0000FFFFUL
// enums for bitfield MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL (width: 16)UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL_ALLZEROS 0x0000UL
#define PBE32_MDMCMDPAR1_MDMCMDPAR0_MDMCMDPAR0_VAL_ALLONES 0xFFFFUL
// --------------------------------------------------------------
// MDMCMDPAR2
// 
#define PBE32_MDMCMDPAR2_ADR (PBE32_BASE + 0x004CUL)
static volatile unsigned long* const SP_PBE32_MDMCMDPAR2 = (unsigned long*) PBE32_MDMCMDPAR2_ADR;
#define S_PBE32_MDMCMDPAR2 (*SP_PBE32_MDMCMDPAR2)
#define RF24_PBE32_O_MDMCMDPAR2                    76
// bitfield: MDMCMDPAR2_VAL
#define PBE32_MDMCMDPAR2_VAL                           0UL
#define RF24_PBE32_MDMCMDPAR2_VAL_S              0UL
#define PBE32_MDMCMDPAR2_VAL_BM                        0x0000FFFFUL
#define RF24_PBE32_MDMCMDPAR2_VAL_M              0x0000FFFFUL
// enums for bitfield MDMCMDPAR2_VAL (width: 16)UL
#define PBE32_MDMCMDPAR2_VAL_ALLZEROS                  0x0000UL
#define PBE32_MDMCMDPAR2_VAL_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// POLY0
// 
#define PBE32_POLY0_ADR (PBE32_BASE + 0x0050UL)
static volatile unsigned long* const SP_PBE32_POLY0 = (unsigned long*) PBE32_POLY0_ADR;
#define S_PBE32_POLY0 (*SP_PBE32_POLY0)
#define RF24_PBE32_O_POLY0                         80
// bitfield: POLY0_VAL
#define PBE32_POLY0_VAL                                0UL
#define RF24_PBE32_POLY0_VAL_S                   0UL
#define PBE32_POLY0_VAL_BM                             0xFFFFFFFFUL
#define RF24_PBE32_POLY0_VAL_M                   0xFFFFFFFFUL
// enums for bitfield POLY0_VAL (width: 32)UL
#define PBE32_POLY0_VAL_ALLZEROS                       0x00000000UL
#define PBE32_POLY0_VAL_ALLONES                        0x0000FFFFUL
// --------------------------------------------------------------
// POLY1
// 
#define PBE32_POLY1_ADR (PBE32_BASE + 0x0054UL)
static volatile unsigned long* const SP_PBE32_POLY1 = (unsigned long*) PBE32_POLY1_ADR;
#define S_PBE32_POLY1 (*SP_PBE32_POLY1)
#define RF24_PBE32_O_POLY1                         84
// bitfield: POLY1_VAL
#define PBE32_POLY1_VAL                                0UL
#define RF24_PBE32_POLY1_VAL_S                   0UL
#define PBE32_POLY1_VAL_BM                             0xFFFFFFFFUL
#define RF24_PBE32_POLY1_VAL_M                   0xFFFFFFFFUL
// enums for bitfield POLY1_VAL (width: 32)UL
#define PBE32_POLY1_VAL_ALLZEROS                       0x00000000UL
#define PBE32_POLY1_VAL_ALLONES                        0x0000FFFFUL
// --------------------------------------------------------------
// FCFG0_PHACFG
// 
#define PBE32_FCFG0_PHACFG_ADR (PBE32_BASE + 0x0058UL)
static volatile unsigned long* const SP_PBE32_FCFG0_PHACFG = (unsigned long*) PBE32_FCFG0_PHACFG_ADR;
#define S_PBE32_FCFG0_PHACFG (*SP_PBE32_FCFG0_PHACFG)
#define RF24_PBE32_O_FCFG0_PHACFG                  88
// bitfield: FCFG0_PHACFG_TXIRQMET
#define PBE32_FCFG0_PHACFG_TXIRQMET                    23UL
#define RF24_PBE32_FCFG0_PHACFG_TXIRQMET_S       23UL
#define PBE32_FCFG0_PHACFG_TXIRQMET_BM                 0x00800000UL
#define RF24_PBE32_FCFG0_PHACFG_TXIRQMET_M       0x00800000UL
// enums for bitfield FCFG0_PHACFG_TXIRQMET (width: 1)UL
#define PBE32_FCFG0_PHACFG_TXIRQMET_TXWRBTHR           0x0UL
#define PBE32_FCFG0_PHACFG_TXIRQMET_TXRDBTHR           0x1UL
// bitfield: FCFG0_PHACFG_RXIRQMET
#define PBE32_FCFG0_PHACFG_RXIRQMET                    22UL
#define RF24_PBE32_FCFG0_PHACFG_RXIRQMET_S       22UL
#define PBE32_FCFG0_PHACFG_RXIRQMET_BM                 0x00400000UL
#define RF24_PBE32_FCFG0_PHACFG_RXIRQMET_M       0x00400000UL
// enums for bitfield FCFG0_PHACFG_RXIRQMET (width: 1)UL
#define PBE32_FCFG0_PHACFG_RXIRQMET_RXWRBTHR           0x1UL
#define PBE32_FCFG0_PHACFG_RXIRQMET_RXRDBTHR           0x0UL
// bitfield: FCFG0_PHACFG_TXACOM
#define PBE32_FCFG0_PHACFG_TXACOM                      21UL
#define RF24_PBE32_FCFG0_PHACFG_TXACOM_S         21UL
#define PBE32_FCFG0_PHACFG_TXACOM_BM                   0x00200000UL
#define RF24_PBE32_FCFG0_PHACFG_TXACOM_M         0x00200000UL
// enums for bitfield FCFG0_PHACFG_TXACOM (width: 1)UL
#define PBE32_FCFG0_PHACFG_TXACOM_DIS                  0x0UL
#define PBE32_FCFG0_PHACFG_TXACOM_EN                   0x1UL
// bitfield: FCFG0_PHACFG_TXADEAL
#define PBE32_FCFG0_PHACFG_TXADEAL                     20UL
#define RF24_PBE32_FCFG0_PHACFG_TXADEAL_S        20UL
#define PBE32_FCFG0_PHACFG_TXADEAL_BM                  0x00100000UL
#define RF24_PBE32_FCFG0_PHACFG_TXADEAL_M        0x00100000UL
// enums for bitfield FCFG0_PHACFG_TXADEAL (width: 1)UL
#define PBE32_FCFG0_PHACFG_TXADEAL_DIS                 0x0UL
#define PBE32_FCFG0_PHACFG_TXADEAL_EN                  0x1UL
// bitfield: FCFG0_PHACFG_RXACOM
#define PBE32_FCFG0_PHACFG_RXACOM                      17UL
#define RF24_PBE32_FCFG0_PHACFG_RXACOM_S         17UL
#define PBE32_FCFG0_PHACFG_RXACOM_BM                   0x00020000UL
#define RF24_PBE32_FCFG0_PHACFG_RXACOM_M         0x00020000UL
// enums for bitfield FCFG0_PHACFG_RXACOM (width: 1)UL
#define PBE32_FCFG0_PHACFG_RXACOM_DIS                  0x0UL
#define PBE32_FCFG0_PHACFG_RXACOM_EN                   0x1UL
// bitfield: FCFG0_PHACFG_RXADEAL
#define PBE32_FCFG0_PHACFG_RXADEAL                     16UL
#define RF24_PBE32_FCFG0_PHACFG_RXADEAL_S        16UL
#define PBE32_FCFG0_PHACFG_RXADEAL_BM                  0x00010000UL
#define RF24_PBE32_FCFG0_PHACFG_RXADEAL_M        0x00010000UL
// enums for bitfield FCFG0_PHACFG_RXADEAL (width: 1)UL
#define PBE32_FCFG0_PHACFG_RXADEAL_DIS                 0x0UL
#define PBE32_FCFG0_PHACFG_RXADEAL_EN                  0x1UL
// bitfield: FCFG0_PHACFG_MODE1
#define PBE32_FCFG0_PHACFG_MODE1                       1UL
#define RF24_PBE32_FCFG0_PHACFG_MODE1_S          1UL
#define PBE32_FCFG0_PHACFG_MODE1_BM                    0x00000006UL
#define RF24_PBE32_FCFG0_PHACFG_MODE1_M          0x00000006UL
// enums for bitfield FCFG0_PHACFG_MODE1 (width: 2)UL
#define PBE32_FCFG0_PHACFG_MODE1_INDEP                 0x0UL
#define PBE32_FCFG0_PHACFG_MODE1_CASC                  0x1UL
#define PBE32_FCFG0_PHACFG_MODE1_PARAL                 0x2UL
// bitfield: FCFG0_PHACFG_MODE0
#define PBE32_FCFG0_PHACFG_MODE0                       0UL
#define RF24_PBE32_FCFG0_PHACFG_MODE0_S          0UL
#define PBE32_FCFG0_PHACFG_MODE0_BM                    0x00000001UL
#define RF24_PBE32_FCFG0_PHACFG_MODE0_M          0x00000001UL
// enums for bitfield FCFG0_PHACFG_MODE0 (width: 1)UL
#define PBE32_FCFG0_PHACFG_MODE0_CRC                   0x0UL
#define PBE32_FCFG0_PHACFG_MODE0_WHITE                 0x1UL
// --------------------------------------------------------------
// FCFG2_FCFG1
// 
#define PBE32_FCFG2_FCFG1_ADR (PBE32_BASE + 0x005CUL)
static volatile unsigned long* const SP_PBE32_FCFG2_FCFG1 = (unsigned long*) PBE32_FCFG2_FCFG1_ADR;
#define S_PBE32_FCFG2_FCFG1 (*SP_PBE32_FCFG2_FCFG1)
#define RF24_PBE32_O_FCFG2_FCFG1                   92
// bitfield: FCFG2_FCFG1_TXHSIZE
#define PBE32_FCFG2_FCFG1_TXHSIZE                      24UL
#define RF24_PBE32_FCFG2_FCFG1_TXHSIZE_S         24UL
#define PBE32_FCFG2_FCFG1_TXHSIZE_BM                   0x07000000UL
#define RF24_PBE32_FCFG2_FCFG1_TXHSIZE_M         0x07000000UL
// enums for bitfield FCFG2_FCFG1_TXHSIZE (width: 3)UL
#define PBE32_FCFG2_FCFG1_TXHSIZE_BYTE                 0x0UL
#define PBE32_FCFG2_FCFG1_TXHSIZE_WORD                 0x2UL
#define PBE32_FCFG2_FCFG1_TXHSIZE_HALFW                0x1UL
// bitfield: FCFG2_FCFG1_TXSIZE
#define PBE32_FCFG2_FCFG1_TXSIZE                       16UL
#define RF24_PBE32_FCFG2_FCFG1_TXSIZE_S          16UL
#define PBE32_FCFG2_FCFG1_TXSIZE_BM                    0x00FF0000UL
#define RF24_PBE32_FCFG2_FCFG1_TXSIZE_M          0x00FF0000UL
// enums for bitfield FCFG2_FCFG1_TXSIZE (width: 8)UL
#define PBE32_FCFG2_FCFG1_TXSIZE_ZEROS                 0x00UL
#define PBE32_FCFG2_FCFG1_TXSIZE_ONES                  0xFFUL
// bitfield: FCFG2_FCFG1_TXSTRT
#define PBE32_FCFG2_FCFG1_TXSTRT                       0UL
#define RF24_PBE32_FCFG2_FCFG1_TXSTRT_S          0UL
#define PBE32_FCFG2_FCFG1_TXSTRT_BM                    0x000001FFUL
#define RF24_PBE32_FCFG2_FCFG1_TXSTRT_M          0x000001FFUL
// enums for bitfield FCFG2_FCFG1_TXSTRT (width: 9)UL
#define PBE32_FCFG2_FCFG1_TXSTRT_ZEROS                 0x000UL
#define PBE32_FCFG2_FCFG1_TXSTRT_ONES                  0x1FFUL
// --------------------------------------------------------------
// FCFG4_FCFG3
// 
#define PBE32_FCFG4_FCFG3_ADR (PBE32_BASE + 0x0060UL)
static volatile unsigned long* const SP_PBE32_FCFG4_FCFG3 = (unsigned long*) PBE32_FCFG4_FCFG3_ADR;
#define S_PBE32_FCFG4_FCFG3 (*SP_PBE32_FCFG4_FCFG3)
#define RF24_PBE32_O_FCFG4_FCFG3                   96
// bitfield: FCFG4_FCFG3_RXHSIZE
#define PBE32_FCFG4_FCFG3_RXHSIZE                      24UL
#define RF24_PBE32_FCFG4_FCFG3_RXHSIZE_S         24UL
#define PBE32_FCFG4_FCFG3_RXHSIZE_BM                   0x07000000UL
#define RF24_PBE32_FCFG4_FCFG3_RXHSIZE_M         0x07000000UL
// enums for bitfield FCFG4_FCFG3_RXHSIZE (width: 3)UL
#define PBE32_FCFG4_FCFG3_RXHSIZE_BYTE                 0x0UL
#define PBE32_FCFG4_FCFG3_RXHSIZE_WORD                 0x2UL
#define PBE32_FCFG4_FCFG3_RXHSIZE_HALFW                0x1UL
// bitfield: FCFG4_FCFG3_RXSIZE
#define PBE32_FCFG4_FCFG3_RXSIZE                       16UL
#define RF24_PBE32_FCFG4_FCFG3_RXSIZE_S          16UL
#define PBE32_FCFG4_FCFG3_RXSIZE_BM                    0x00FF0000UL
#define RF24_PBE32_FCFG4_FCFG3_RXSIZE_M          0x00FF0000UL
// enums for bitfield FCFG4_FCFG3_RXSIZE (width: 8)UL
#define PBE32_FCFG4_FCFG3_RXSIZE_ZEROS                 0x00UL
#define PBE32_FCFG4_FCFG3_RXSIZE_ONES                  0xFFUL
// bitfield: FCFG4_FCFG3_RXSTRT
#define PBE32_FCFG4_FCFG3_RXSTRT                       0UL
#define RF24_PBE32_FCFG4_FCFG3_RXSTRT_S          0UL
#define PBE32_FCFG4_FCFG3_RXSTRT_BM                    0x000001FFUL
#define RF24_PBE32_FCFG4_FCFG3_RXSTRT_M          0x000001FFUL
// enums for bitfield FCFG4_FCFG3_RXSTRT (width: 9)UL
#define PBE32_FCFG4_FCFG3_RXSTRT_ZEROS                 0x000UL
#define PBE32_FCFG4_FCFG3_RXSTRT_ONES                  0x1FFUL
// --------------------------------------------------------------
// RXFWBTHRS_FCFG5
// 
#define PBE32_RXFWBTHRS_FCFG5_ADR (PBE32_BASE + 0x0064UL)
static volatile unsigned long* const SP_PBE32_RXFWBTHRS_FCFG5 = (unsigned long*) PBE32_RXFWBTHRS_FCFG5_ADR;
#define S_PBE32_RXFWBTHRS_FCFG5 (*SP_PBE32_RXFWBTHRS_FCFG5)
#define RF24_PBE32_O_RXFWBTHRS_FCFG5               100
// bitfield: RXFWBTHRS_FCFG5_BYTES
#define PBE32_RXFWBTHRS_FCFG5_BYTES                    16UL
#define RF24_PBE32_RXFWBTHRS_FCFG5_BYTES_S       16UL
#define PBE32_RXFWBTHRS_FCFG5_BYTES_BM                 0x03FF0000UL
#define RF24_PBE32_RXFWBTHRS_FCFG5_BYTES_M       0x03FF0000UL
// enums for bitfield RXFWBTHRS_FCFG5_BYTES (width: 10)UL
#define PBE32_RXFWBTHRS_FCFG5_BYTES_ALLZEROS           0x000UL
#define PBE32_RXFWBTHRS_FCFG5_BYTES_ALLONES            0x3FFUL
// bitfield: RXFWBTHRS_FCFG5_DMASREQ
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ                  6UL
#define RF24_PBE32_RXFWBTHRS_FCFG5_DMASREQ_S     6UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_BM               0x000001C0UL
#define RF24_PBE32_RXFWBTHRS_FCFG5_DMASREQ_M     0x000001C0UL
// enums for bitfield RXFWBTHRS_FCFG5_DMASREQ (width: 3)UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_NONE             0x0UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_RXFIFOMD         0x1UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_RXFIFOFREE       0x2UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_TXFIFOMD         0x3UL
#define PBE32_RXFWBTHRS_FCFG5_DMASREQ_TXFIFOFREE       0x4UL
// bitfield: RXFWBTHRS_FCFG5_DMAREQ
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ                   0UL
#define RF24_PBE32_RXFWBTHRS_FCFG5_DMAREQ_S      0UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_BM                0x0000001FUL
#define RF24_PBE32_RXFWBTHRS_FCFG5_DMAREQ_M      0x0000001FUL
// enums for bitfield RXFWBTHRS_FCFG5_DMAREQ (width: 5)UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_NONE              0x00UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXRDBTHR_MET      0x01UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXWRBTHR_MET      0x02UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXFIFO_RESET      0x03UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXFIFO_DEALLOC    0x04UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXFIFO_RETRY      0x05UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXFIFO_DISCARD    0x06UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_RXFIFO_COMMIT     0x07UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXWRBTHR_MET      0x0AUL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXRDBTHR_MET      0x09UL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXFIFO_RESET      0x0BUL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXFIFO_DEALLOC    0x0CUL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXFIFO_RETRY      0x0DUL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXFIFO_DISCARD    0x0EUL
#define PBE32_RXFWBTHRS_FCFG5_DMAREQ_TXFIFO_COMMIT     0x0FUL
// --------------------------------------------------------------
// TXFWBTHRS_RXFRBTHRS
// 
#define PBE32_TXFWBTHRS_RXFRBTHRS_ADR (PBE32_BASE + 0x0068UL)
static volatile unsigned long* const SP_PBE32_TXFWBTHRS_RXFRBTHRS = (unsigned long*) PBE32_TXFWBTHRS_RXFRBTHRS_ADR;
#define S_PBE32_TXFWBTHRS_RXFRBTHRS (*SP_PBE32_TXFWBTHRS_RXFRBTHRS)
#define RF24_PBE32_O_TXFWBTHRS_RXFRBTHRS           104
// bitfield: TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES
#define PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES      16UL
#define RF24_PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES_S 16UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES_BM   0x03FF0000UL
#define RF24_PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES_M 0x03FF0000UL
// enums for bitfield TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES (width: 10)UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES_ALLZEROS 0x000UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_TXFWBTHRS_BYTES_ALLONES 0x3FFUL
// bitfield: TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES
#define PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES      0UL
#define RF24_PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES_S 0UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES_BM   0x000003FFUL
#define RF24_PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES_M 0x000003FFUL
// enums for bitfield TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES (width: 10)UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES_ALLZEROS 0x000UL
#define PBE32_TXFWBTHRS_RXFRBTHRS_RXFRBTHRS_BYTES_ALLONES 0x3FFUL
// --------------------------------------------------------------
// TIMCTL_TXFRBTHRS
// 
#define PBE32_TIMCTL_TXFRBTHRS_ADR (PBE32_BASE + 0x006CUL)
static volatile unsigned long* const SP_PBE32_TIMCTL_TXFRBTHRS = (unsigned long*) PBE32_TIMCTL_TXFRBTHRS_ADR;
#define S_PBE32_TIMCTL_TXFRBTHRS (*SP_PBE32_TIMCTL_TXFRBTHRS)
#define RF24_PBE32_O_TIMCTL_TXFRBTHRS              108
// bitfield: TIMCTL_TXFRBTHRS_CPTSRC1
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC1                 27UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_CPTSRC1_S    27UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC1_BM              0xF8000000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_CPTSRC1_M    0xF8000000UL
// enums for bitfield TIMCTL_TXFRBTHRS_CPTSRC1 (width: 5)UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC1_ALLZEROS        0x00UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC1_ALLONES         0x1FUL
// bitfield: TIMCTL_TXFRBTHRS_ENCPT1
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT1                  26UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_ENCPT1_S     26UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT1_BM               0x04000000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_ENCPT1_M     0x04000000UL
// enums for bitfield TIMCTL_TXFRBTHRS_ENCPT1 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT1_OFF              0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT1_ON               0x1UL
// bitfield: TIMCTL_TXFRBTHRS_SRC1
#define PBE32_TIMCTL_TXFRBTHRS_SRC1                    25UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_SRC1_S       25UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC1_BM                 0x02000000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_SRC1_M       0x02000000UL
// enums for bitfield TIMCTL_TXFRBTHRS_SRC1 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC1_CLK                0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC1_PRE1               0x1UL
// bitfield: TIMCTL_TXFRBTHRS_EN1
#define PBE32_TIMCTL_TXFRBTHRS_EN1                     24UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_EN1_S        24UL
#define PBE32_TIMCTL_TXFRBTHRS_EN1_BM                  0x01000000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_EN1_M        0x01000000UL
// enums for bitfield TIMCTL_TXFRBTHRS_EN1 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_EN1_OFF                 0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_EN1_ON                  0x1UL
// bitfield: TIMCTL_TXFRBTHRS_CPTSRC0
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC0                 19UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_CPTSRC0_S    19UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC0_BM              0x00F80000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_CPTSRC0_M    0x00F80000UL
// enums for bitfield TIMCTL_TXFRBTHRS_CPTSRC0 (width: 5)UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC0_ALLZEROS        0x00UL
#define PBE32_TIMCTL_TXFRBTHRS_CPTSRC0_ALLONES         0x1FUL
// bitfield: TIMCTL_TXFRBTHRS_ENCPT0
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT0                  18UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_ENCPT0_S     18UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT0_BM               0x00040000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_ENCPT0_M     0x00040000UL
// enums for bitfield TIMCTL_TXFRBTHRS_ENCPT0 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT0_OFF              0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_ENCPT0_ON               0x1UL
// bitfield: TIMCTL_TXFRBTHRS_SRC0
#define PBE32_TIMCTL_TXFRBTHRS_SRC0                    17UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_SRC0_S       17UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC0_BM                 0x00020000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_SRC0_M       0x00020000UL
// enums for bitfield TIMCTL_TXFRBTHRS_SRC0 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC0_CLK                0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_SRC0_PRE0               0x1UL
// bitfield: TIMCTL_TXFRBTHRS_EN0
#define PBE32_TIMCTL_TXFRBTHRS_EN0                     16UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_EN0_S        16UL
#define PBE32_TIMCTL_TXFRBTHRS_EN0_BM                  0x00010000UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_EN0_M        0x00010000UL
// enums for bitfield TIMCTL_TXFRBTHRS_EN0 (width: 1)UL
#define PBE32_TIMCTL_TXFRBTHRS_EN0_OFF                 0x0UL
#define PBE32_TIMCTL_TXFRBTHRS_EN0_ON                  0x1UL
// bitfield: TIMCTL_TXFRBTHRS_BYTES
#define PBE32_TIMCTL_TXFRBTHRS_BYTES                   0UL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_BYTES_S      0UL
#define PBE32_TIMCTL_TXFRBTHRS_BYTES_BM                0x000003FFUL
#define RF24_PBE32_TIMCTL_TXFRBTHRS_BYTES_M      0x000003FFUL
// enums for bitfield TIMCTL_TXFRBTHRS_BYTES (width: 10)UL
#define PBE32_TIMCTL_TXFRBTHRS_BYTES_ALLZEROS          0x000UL
#define PBE32_TIMCTL_TXFRBTHRS_BYTES_ALLONES           0x3FFUL
// --------------------------------------------------------------
// TIMPER0_TIMPRE
// 
#define PBE32_TIMPER0_TIMPRE_ADR (PBE32_BASE + 0x0070UL)
static volatile unsigned long* const SP_PBE32_TIMPER0_TIMPRE = (unsigned long*) PBE32_TIMPER0_TIMPRE_ADR;
#define S_PBE32_TIMPER0_TIMPRE (*SP_PBE32_TIMPER0_TIMPRE)
#define RF24_PBE32_O_TIMPER0_TIMPRE                112
// bitfield: TIMPER0_TIMPRE_VAL
#define PBE32_TIMPER0_TIMPRE_VAL                       16UL
#define RF24_PBE32_TIMPER0_TIMPRE_VAL_S          16UL
#define PBE32_TIMPER0_TIMPRE_VAL_BM                    0xFFFF0000UL
#define RF24_PBE32_TIMPER0_TIMPRE_VAL_M          0xFFFF0000UL
// enums for bitfield TIMPER0_TIMPRE_VAL (width: 16)UL
#define PBE32_TIMPER0_TIMPRE_VAL_ALLZEROS              0x0000UL
#define PBE32_TIMPER0_TIMPRE_VAL_ALLONES               0xFFFFUL
// bitfield: TIMPER0_TIMPRE_PRE1
#define PBE32_TIMPER0_TIMPRE_PRE1                      8UL
#define RF24_PBE32_TIMPER0_TIMPRE_PRE1_S         8UL
#define PBE32_TIMPER0_TIMPRE_PRE1_BM                   0x00003F00UL
#define RF24_PBE32_TIMPER0_TIMPRE_PRE1_M         0x00003F00UL
// enums for bitfield TIMPER0_TIMPRE_PRE1 (width: 6)UL
#define PBE32_TIMPER0_TIMPRE_PRE1_NO_DIV               0x00UL
#define PBE32_TIMPER0_TIMPRE_PRE1_DIV64                0x3FUL
// bitfield: TIMPER0_TIMPRE_PRE0
#define PBE32_TIMPER0_TIMPRE_PRE0                      0UL
#define RF24_PBE32_TIMPER0_TIMPRE_PRE0_S         0UL
#define PBE32_TIMPER0_TIMPRE_PRE0_BM                   0x0000003FUL
#define RF24_PBE32_TIMPER0_TIMPRE_PRE0_M         0x0000003FUL
// enums for bitfield TIMPER0_TIMPRE_PRE0 (width: 6)UL
#define PBE32_TIMPER0_TIMPRE_PRE0_NO_DIV               0x00UL
#define PBE32_TIMPER0_TIMPRE_PRE0_DIV64                0x3FUL
// --------------------------------------------------------------
// TIMCAPT0_TIMPER1
// 
#define PBE32_TIMCAPT0_TIMPER1_ADR (PBE32_BASE + 0x0074UL)
static volatile unsigned long* const SP_PBE32_TIMCAPT0_TIMPER1 = (unsigned long*) PBE32_TIMCAPT0_TIMPER1_ADR;
#define S_PBE32_TIMCAPT0_TIMPER1 (*SP_PBE32_TIMCAPT0_TIMPER1)
#define RF24_PBE32_O_TIMCAPT0_TIMPER1              116
// bitfield: TIMCAPT0_TIMPER1_VALUE
#define PBE32_TIMCAPT0_TIMPER1_VALUE                   16UL
#define RF24_PBE32_TIMCAPT0_TIMPER1_VALUE_S      16UL
#define PBE32_TIMCAPT0_TIMPER1_VALUE_BM                0xFFFF0000UL
#define RF24_PBE32_TIMCAPT0_TIMPER1_VALUE_M      0xFFFF0000UL
// enums for bitfield TIMCAPT0_TIMPER1_VALUE (width: 16)UL
#define PBE32_TIMCAPT0_TIMPER1_VALUE_ALLZEROS          0x0000UL
#define PBE32_TIMCAPT0_TIMPER1_VALUE_ALLONES           0xFFFFUL
// bitfield: TIMCAPT0_TIMPER1_VAL
#define PBE32_TIMCAPT0_TIMPER1_VAL                     0UL
#define RF24_PBE32_TIMCAPT0_TIMPER1_VAL_S        0UL
#define PBE32_TIMCAPT0_TIMPER1_VAL_BM                  0x0000FFFFUL
#define RF24_PBE32_TIMCAPT0_TIMPER1_VAL_M        0x0000FFFFUL
// enums for bitfield TIMCAPT0_TIMPER1_VAL (width: 16)UL
#define PBE32_TIMCAPT0_TIMPER1_VAL_ALLZEROS            0x0000UL
#define PBE32_TIMCAPT0_TIMPER1_VAL_ALLONES             0xFFFFUL
// --------------------------------------------------------------
// TIMCAPT1
// 
#define PBE32_TIMCAPT1_ADR (PBE32_BASE + 0x0078UL)
static volatile unsigned long* const SP_PBE32_TIMCAPT1 = (unsigned long*) PBE32_TIMCAPT1_ADR;
#define S_PBE32_TIMCAPT1 (*SP_PBE32_TIMCAPT1)
#define RF24_PBE32_O_TIMCAPT1                      120
// bitfield: TIMCAPT1_VALUE
#define PBE32_TIMCAPT1_VALUE                           0UL
#define RF24_PBE32_TIMCAPT1_VALUE_S              0UL
#define PBE32_TIMCAPT1_VALUE_BM                        0x0000FFFFUL
#define RF24_PBE32_TIMCAPT1_VALUE_M              0x0000FFFFUL
// enums for bitfield TIMCAPT1_VALUE (width: 16)UL
#define PBE32_TIMCAPT1_VALUE_ALLZEROS                  0x0000UL
#define PBE32_TIMCAPT1_VALUE_ALLONES                   0xFFFFUL
// --------------------------------------------------------------
// TRCSTAT_TRCCTL
// 
#define PBE32_TRCSTAT_TRCCTL_ADR (PBE32_BASE + 0x0080UL)
static volatile unsigned long* const SP_PBE32_TRCSTAT_TRCCTL = (unsigned long*) PBE32_TRCSTAT_TRCCTL_ADR;
#define S_PBE32_TRCSTAT_TRCCTL (*SP_PBE32_TRCSTAT_TRCCTL)
#define RF24_PBE32_O_TRCSTAT_TRCCTL                128
// bitfield: TRCSTAT_TRCCTL_BUSY
#define PBE32_TRCSTAT_TRCCTL_BUSY                      16UL
#define RF24_PBE32_TRCSTAT_TRCCTL_BUSY_S         16UL
#define PBE32_TRCSTAT_TRCCTL_BUSY_BM                   0x00010000UL
#define RF24_PBE32_TRCSTAT_TRCCTL_BUSY_M         0x00010000UL
// enums for bitfield TRCSTAT_TRCCTL_BUSY (width: 1)UL
#define PBE32_TRCSTAT_TRCCTL_BUSY_ZERO                 0x0UL
#define PBE32_TRCSTAT_TRCCTL_BUSY_ONE                  0x1UL
// bitfield: TRCSTAT_TRCCTL_SEND
#define PBE32_TRCSTAT_TRCCTL_SEND                      0UL
#define RF24_PBE32_TRCSTAT_TRCCTL_SEND_S         0UL
#define PBE32_TRCSTAT_TRCCTL_SEND_BM                   0x00000001UL
#define RF24_PBE32_TRCSTAT_TRCCTL_SEND_M         0x00000001UL
// enums for bitfield TRCSTAT_TRCCTL_SEND (width: 1)UL
#define PBE32_TRCSTAT_TRCCTL_SEND_ZERO                 0x0UL
#define PBE32_TRCSTAT_TRCCTL_SEND_ONE                  0x1UL
// --------------------------------------------------------------
// TRCPAR0_TRCCMD
// 
#define PBE32_TRCPAR0_TRCCMD_ADR (PBE32_BASE + 0x0084UL)
static volatile unsigned long* const SP_PBE32_TRCPAR0_TRCCMD = (unsigned long*) PBE32_TRCPAR0_TRCCMD_ADR;
#define S_PBE32_TRCPAR0_TRCCMD (*SP_PBE32_TRCPAR0_TRCCMD)
#define RF24_PBE32_O_TRCPAR0_TRCCMD                132
// bitfield: TRCPAR0_TRCCMD_VAL
#define PBE32_TRCPAR0_TRCCMD_VAL                       16UL
#define RF24_PBE32_TRCPAR0_TRCCMD_VAL_S          16UL
#define PBE32_TRCPAR0_TRCCMD_VAL_BM                    0xFFFF0000UL
#define RF24_PBE32_TRCPAR0_TRCCMD_VAL_M          0xFFFF0000UL
// enums for bitfield TRCPAR0_TRCCMD_VAL (width: 16)UL
#define PBE32_TRCPAR0_TRCCMD_VAL_ALLZEROS              0x0000UL
#define PBE32_TRCPAR0_TRCCMD_VAL_ALLONES               0xFFFFUL
// bitfield: TRCPAR0_TRCCMD_PARCNT
#define PBE32_TRCPAR0_TRCCMD_PARCNT                    8UL
#define RF24_PBE32_TRCPAR0_TRCCMD_PARCNT_S       8UL
#define PBE32_TRCPAR0_TRCCMD_PARCNT_BM                 0x00000300UL
#define RF24_PBE32_TRCPAR0_TRCCMD_PARCNT_M       0x00000300UL
// enums for bitfield TRCPAR0_TRCCMD_PARCNT (width: 2)UL
#define PBE32_TRCPAR0_TRCCMD_PARCNT_ALLZEROS           0x0UL
#define PBE32_TRCPAR0_TRCCMD_PARCNT_ALLONES            0x3UL
// bitfield: TRCPAR0_TRCCMD_PKTHDR
#define PBE32_TRCPAR0_TRCCMD_PKTHDR                    0UL
#define RF24_PBE32_TRCPAR0_TRCCMD_PKTHDR_S       0UL
#define PBE32_TRCPAR0_TRCCMD_PKTHDR_BM                 0x000000FFUL
#define RF24_PBE32_TRCPAR0_TRCCMD_PKTHDR_M       0x000000FFUL
// enums for bitfield TRCPAR0_TRCCMD_PKTHDR (width: 8)UL
#define PBE32_TRCPAR0_TRCCMD_PKTHDR_ALLZEROS           0x00UL
#define PBE32_TRCPAR0_TRCCMD_PKTHDR_ALLONES            0xFFUL
// --------------------------------------------------------------
// GPOCTRL_TRCPAR1
// 
#define PBE32_GPOCTRL_TRCPAR1_ADR (PBE32_BASE + 0x0088UL)
static volatile unsigned long* const SP_PBE32_GPOCTRL_TRCPAR1 = (unsigned long*) PBE32_GPOCTRL_TRCPAR1_ADR;
#define S_PBE32_GPOCTRL_TRCPAR1 (*SP_PBE32_GPOCTRL_TRCPAR1)
#define RF24_PBE32_O_GPOCTRL_TRCPAR1               136
// bitfield: GPOCTRL_TRCPAR1_GPO7
#define PBE32_GPOCTRL_TRCPAR1_GPO7                     23UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO7_S        23UL
#define PBE32_GPOCTRL_TRCPAR1_GPO7_BM                  0x00800000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO7_M        0x00800000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO7 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO7_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO7_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO6
#define PBE32_GPOCTRL_TRCPAR1_GPO6                     22UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO6_S        22UL
#define PBE32_GPOCTRL_TRCPAR1_GPO6_BM                  0x00400000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO6_M        0x00400000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO6 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO6_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO6_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO5
#define PBE32_GPOCTRL_TRCPAR1_GPO5                     21UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO5_S        21UL
#define PBE32_GPOCTRL_TRCPAR1_GPO5_BM                  0x00200000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO5_M        0x00200000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO5 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO5_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO5_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO4
#define PBE32_GPOCTRL_TRCPAR1_GPO4                     20UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO4_S        20UL
#define PBE32_GPOCTRL_TRCPAR1_GPO4_BM                  0x00100000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO4_M        0x00100000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO4 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO4_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO4_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO3
#define PBE32_GPOCTRL_TRCPAR1_GPO3                     19UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO3_S        19UL
#define PBE32_GPOCTRL_TRCPAR1_GPO3_BM                  0x00080000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO3_M        0x00080000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO3 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO3_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO3_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO2
#define PBE32_GPOCTRL_TRCPAR1_GPO2                     18UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO2_S        18UL
#define PBE32_GPOCTRL_TRCPAR1_GPO2_BM                  0x00040000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO2_M        0x00040000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO2 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO2_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO2_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO1
#define PBE32_GPOCTRL_TRCPAR1_GPO1                     17UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO1_S        17UL
#define PBE32_GPOCTRL_TRCPAR1_GPO1_BM                  0x00020000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO1_M        0x00020000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO1 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO1_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO1_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_GPO0
#define PBE32_GPOCTRL_TRCPAR1_GPO0                     16UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO0_S        16UL
#define PBE32_GPOCTRL_TRCPAR1_GPO0_BM                  0x00010000UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_GPO0_M        0x00010000UL
// enums for bitfield GPOCTRL_TRCPAR1_GPO0 (width: 1)UL
#define PBE32_GPOCTRL_TRCPAR1_GPO0_ZERO                0x0UL
#define PBE32_GPOCTRL_TRCPAR1_GPO0_ONE                 0x1UL
// bitfield: GPOCTRL_TRCPAR1_VAL
#define PBE32_GPOCTRL_TRCPAR1_VAL                      0UL
#define RF24_PBE32_GPOCTRL_TRCPAR1_VAL_S         0UL
#define PBE32_GPOCTRL_TRCPAR1_VAL_BM                   0x0000FFFFUL
#define RF24_PBE32_GPOCTRL_TRCPAR1_VAL_M         0x0000FFFFUL
// enums for bitfield GPOCTRL_TRCPAR1_VAL (width: 16)UL
#define PBE32_GPOCTRL_TRCPAR1_VAL_ALLZEROS             0x0000UL
#define PBE32_GPOCTRL_TRCPAR1_VAL_ALLONES              0xFFFFUL
// --------------------------------------------------------------
// MDMFRD_MDMFWR
// 
#define PBE32_MDMFRD_MDMFWR_ADR (PBE32_BASE + 0x008CUL)
static volatile unsigned long* const SP_PBE32_MDMFRD_MDMFWR = (unsigned long*) PBE32_MDMFRD_MDMFWR_ADR;
#define S_PBE32_MDMFRD_MDMFWR (*SP_PBE32_MDMFRD_MDMFWR)
#define RF24_PBE32_O_MDMFRD_MDMFWR                 140
// bitfield: MDMFRD_MDMFWR_PAYLOADOUT
#define PBE32_MDMFRD_MDMFWR_PAYLOADOUT                 16UL
#define RF24_PBE32_MDMFRD_MDMFWR_PAYLOADOUT_S    16UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADOUT_BM              0xFFFF0000UL
#define RF24_PBE32_MDMFRD_MDMFWR_PAYLOADOUT_M    0xFFFF0000UL
// enums for bitfield MDMFRD_MDMFWR_PAYLOADOUT (width: 16)UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADOUT_ALLZEROS        0x0000UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADOUT_ALLONES         0xFFFFUL
// bitfield: MDMFRD_MDMFWR_PAYLOADIN
#define PBE32_MDMFRD_MDMFWR_PAYLOADIN                  0UL
#define RF24_PBE32_MDMFRD_MDMFWR_PAYLOADIN_S     0UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADIN_BM               0x0000FFFFUL
#define RF24_PBE32_MDMFRD_MDMFWR_PAYLOADIN_M     0x0000FFFFUL
// enums for bitfield MDMFRD_MDMFWR_PAYLOADIN (width: 16)UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADIN_ALLZEROS         0x0000UL
#define PBE32_MDMFRD_MDMFWR_PAYLOADIN_ALLONES          0xFFFFUL
// --------------------------------------------------------------
// MDMFRDCTL_MDMFWRCTL
// 
#define PBE32_MDMFRDCTL_MDMFWRCTL_ADR (PBE32_BASE + 0x0090UL)
static volatile unsigned long* const SP_PBE32_MDMFRDCTL_MDMFWRCTL = (unsigned long*) PBE32_MDMFRDCTL_MDMFWRCTL_ADR;
#define S_PBE32_MDMFRDCTL_MDMFWRCTL (*SP_PBE32_MDMFRDCTL_MDMFWRCTL)
#define RF24_PBE32_O_MDMFRDCTL_MDMFWRCTL           144
// bitfield: MDMFRDCTL_MDMFWRCTL_WORDSZRD
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD             16UL
#define RF24_PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_S 16UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BM          0x000F0000UL
#define RF24_PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_M 0x000F0000UL
// enums for bitfield MDMFRDCTL_MDMFWRCTL_WORDSZRD (width: 4)UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS1       0x0UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS2       0x1UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS3       0x2UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS4       0x3UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS5       0x4UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS6       0x5UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS7       0x6UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS8       0x7UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS9       0x8UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS10      0x9UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS11      0xAUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS12      0xBUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS13      0xCUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS14      0xDUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS15      0xEUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZRD_BITS16      0xFUL
// bitfield: MDMFRDCTL_MDMFWRCTL_WORDSZWR
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR             0UL
#define RF24_PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_S 0UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BM          0x0000000FUL
#define RF24_PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_M 0x0000000FUL
// enums for bitfield MDMFRDCTL_MDMFWRCTL_WORDSZWR (width: 4)UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS1       0x0UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS2       0x1UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS3       0x2UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS4       0x3UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS5       0x4UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS6       0x5UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS7       0x6UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS8       0x7UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS9       0x8UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS10      0x9UL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS11      0xAUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS12      0xBUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS13      0xCUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS14      0xDUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS15      0xEUL
#define PBE32_MDMFRDCTL_MDMFWRCTL_WORDSZWR_BITS16      0xFUL
// --------------------------------------------------------------
// MDMFSTA_MDMFCFG
// 
#define PBE32_MDMFSTA_MDMFCFG_ADR (PBE32_BASE + 0x0094UL)
static volatile unsigned long* const SP_PBE32_MDMFSTA_MDMFCFG = (unsigned long*) PBE32_MDMFSTA_MDMFCFG_ADR;
#define S_PBE32_MDMFSTA_MDMFCFG (*SP_PBE32_MDMFSTA_MDMFCFG)
#define RF24_PBE32_O_MDMFSTA_MDMFCFG               148
// bitfield: MDMFSTA_MDMFCFG_OVFL
#define PBE32_MDMFSTA_MDMFCFG_OVFL                     21UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_OVFL_S        21UL
#define PBE32_MDMFSTA_MDMFCFG_OVFL_BM                  0x00200000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_OVFL_M        0x00200000UL
// enums for bitfield MDMFSTA_MDMFCFG_OVFL (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_OVFL_ZERO                0x0UL
#define PBE32_MDMFSTA_MDMFCFG_OVFL_ONE                 0x1UL
// bitfield: MDMFSTA_MDMFCFG_ALMOSTFULL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL               20UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL_S  20UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL_BM            0x00100000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL_M  0x00100000UL
// enums for bitfield MDMFSTA_MDMFCFG_ALMOSTFULL (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL_ZERO          0x0UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTFULL_ONE           0x1UL
// bitfield: MDMFSTA_MDMFCFG_ALMOSTEMPTY
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY              19UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY_S 19UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY_BM           0x00080000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY_M 0x00080000UL
// enums for bitfield MDMFSTA_MDMFCFG_ALMOSTEMPTY (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY_ZERO         0x0UL
#define PBE32_MDMFSTA_MDMFCFG_ALMOSTEMPTY_ONE          0x1UL
// bitfield: MDMFSTA_MDMFCFG_UNFL
#define PBE32_MDMFSTA_MDMFCFG_UNFL                     18UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_UNFL_S        18UL
#define PBE32_MDMFSTA_MDMFCFG_UNFL_BM                  0x00040000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_UNFL_M        0x00040000UL
// enums for bitfield MDMFSTA_MDMFCFG_UNFL (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_UNFL_ZERO                0x0UL
#define PBE32_MDMFSTA_MDMFCFG_UNFL_ONE                 0x1UL
// bitfield: MDMFSTA_MDMFCFG_RXVALID
#define PBE32_MDMFSTA_MDMFCFG_RXVALID                  17UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_RXVALID_S     17UL
#define PBE32_MDMFSTA_MDMFCFG_RXVALID_BM               0x00020000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_RXVALID_M     0x00020000UL
// enums for bitfield MDMFSTA_MDMFCFG_RXVALID (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_RXVALID_ZERO             0x0UL
#define PBE32_MDMFSTA_MDMFCFG_RXVALID_ONE              0x1UL
// bitfield: MDMFSTA_MDMFCFG_TXREADY
#define PBE32_MDMFSTA_MDMFCFG_TXREADY                  16UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_TXREADY_S     16UL
#define PBE32_MDMFSTA_MDMFCFG_TXREADY_BM               0x00010000UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_TXREADY_M     0x00010000UL
// enums for bitfield MDMFSTA_MDMFCFG_TXREADY (width: 1)UL
#define PBE32_MDMFSTA_MDMFCFG_TXREADY_ZERO             0x0UL
#define PBE32_MDMFSTA_MDMFCFG_TXREADY_ONE              0x1UL
// bitfield: MDMFSTA_MDMFCFG_AFULLTHR
#define PBE32_MDMFSTA_MDMFCFG_AFULLTHR                 8UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_AFULLTHR_S    8UL
#define PBE32_MDMFSTA_MDMFCFG_AFULLTHR_BM              0x0000FF00UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_AFULLTHR_M    0x0000FF00UL
// enums for bitfield MDMFSTA_MDMFCFG_AFULLTHR (width: 8)UL
#define PBE32_MDMFSTA_MDMFCFG_AFULLTHR_ALLZEROS        0x00UL
#define PBE32_MDMFSTA_MDMFCFG_AFULLTHR_ALLONES         0xFFUL
// bitfield: MDMFSTA_MDMFCFG_AEMPTYTHR
#define PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR                0UL
#define RF24_PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR_S   0UL
#define PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR_BM             0x000000FFUL
#define RF24_PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR_M   0x000000FFUL
// enums for bitfield MDMFSTA_MDMFCFG_AEMPTYTHR (width: 8)UL
#define PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR_ALLZEROS       0x00UL
#define PBE32_MDMFSTA_MDMFCFG_AEMPTYTHR_ALLONES        0xFFUL
// --------------------------------------------------------------
// PHASTA
// 
#define PBE32_PHASTA_ADR (PBE32_BASE + 0x0098UL)
static volatile unsigned long* const SP_PBE32_PHASTA = (unsigned long*) PBE32_PHASTA_ADR;
#define S_PBE32_PHASTA (*SP_PBE32_PHASTA)
#define RF24_PBE32_O_PHASTA                        152
// bitfield: PHASTA_BUSY
#define PBE32_PHASTA_BUSY                              16UL
#define RF24_PBE32_PHASTA_BUSY_S                 16UL
#define PBE32_PHASTA_BUSY_BM                           0x00030000UL
#define RF24_PBE32_PHASTA_BUSY_M                 0x00030000UL
// enums for bitfield PHASTA_BUSY (width: 2)UL
#define PBE32_PHASTA_BUSY_IDLE                         0x0UL
#define PBE32_PHASTA_BUSY_BUSY                         0x1UL
// --------------------------------------------------------------
// LFSR0
// 
#define PBE32_LFSR0_ADR (PBE32_BASE + 0x009CUL)
static volatile unsigned long* const SP_PBE32_LFSR0 = (unsigned long*) PBE32_LFSR0_ADR;
#define S_PBE32_LFSR0 (*SP_PBE32_LFSR0)
#define RF24_PBE32_O_LFSR0                         156
// bitfield: LFSR0_VAL
#define PBE32_LFSR0_VAL                                0UL
#define RF24_PBE32_LFSR0_VAL_S                   0UL
#define PBE32_LFSR0_VAL_BM                             0xFFFFFFFFUL
#define RF24_PBE32_LFSR0_VAL_M                   0xFFFFFFFFUL
// enums for bitfield LFSR0_VAL (width: 32)UL
#define PBE32_LFSR0_VAL_ALLZEROS                       0x00000000UL
#define PBE32_LFSR0_VAL_ALLONES                        0x0000FFFFUL
// --------------------------------------------------------------
// LFSR0BR
// 
#define PBE32_LFSR0BR_ADR (PBE32_BASE + 0x00A0UL)
static volatile unsigned long* const SP_PBE32_LFSR0BR = (unsigned long*) PBE32_LFSR0BR_ADR;
#define S_PBE32_LFSR0BR (*SP_PBE32_LFSR0BR)
#define RF24_PBE32_O_LFSR0BR                       160
// bitfield: LFSR0BR_VAL
#define PBE32_LFSR0BR_VAL                              0UL
#define RF24_PBE32_LFSR0BR_VAL_S                 0UL
#define PBE32_LFSR0BR_VAL_BM                           0xFFFFFFFFUL
#define RF24_PBE32_LFSR0BR_VAL_M                 0xFFFFFFFFUL
// enums for bitfield LFSR0BR_VAL (width: 32)UL
#define PBE32_LFSR0BR_VAL_ALLZEROS                     0x00000000UL
#define PBE32_LFSR0BR_VAL_ALLONES                      0x0000FFFFUL
// --------------------------------------------------------------
// LFSR1
// 
#define PBE32_LFSR1_ADR (PBE32_BASE + 0x00A4UL)
static volatile unsigned long* const SP_PBE32_LFSR1 = (unsigned long*) PBE32_LFSR1_ADR;
#define S_PBE32_LFSR1 (*SP_PBE32_LFSR1)
#define RF24_PBE32_O_LFSR1                         164
// bitfield: LFSR1_VAL
#define PBE32_LFSR1_VAL                                0UL
#define RF24_PBE32_LFSR1_VAL_S                   0UL
#define PBE32_LFSR1_VAL_BM                             0xFFFFFFFFUL
#define RF24_PBE32_LFSR1_VAL_M                   0xFFFFFFFFUL
// enums for bitfield LFSR1_VAL (width: 32)UL
#define PBE32_LFSR1_VAL_ALLZEROS                       0x00000000UL
#define PBE32_LFSR1_VAL_ALLONES                        0x0000FFFFUL
// --------------------------------------------------------------
// LFSR1BR
// 
#define PBE32_LFSR1BR_ADR (PBE32_BASE + 0x00A8UL)
static volatile unsigned long* const SP_PBE32_LFSR1BR = (unsigned long*) PBE32_LFSR1BR_ADR;
#define S_PBE32_LFSR1BR (*SP_PBE32_LFSR1BR)
#define RF24_PBE32_O_LFSR1BR                       168
// bitfield: LFSR1BR_VAL
#define PBE32_LFSR1BR_VAL                              0UL
#define RF24_PBE32_LFSR1BR_VAL_S                 0UL
#define PBE32_LFSR1BR_VAL_BM                           0xFFFFFFFFUL
#define RF24_PBE32_LFSR1BR_VAL_M                 0xFFFFFFFFUL
// enums for bitfield LFSR1BR_VAL (width: 32)UL
#define PBE32_LFSR1BR_VAL_ALLZEROS                     0x00000000UL
#define PBE32_LFSR1BR_VAL_ALLONES                      0x0000FFFFUL
// --------------------------------------------------------------
// LFSR0N_LFSR0INL
// 
#define PBE32_LFSR0N_LFSR0INL_ADR (PBE32_BASE + 0x00ACUL)
static volatile unsigned long* const SP_PBE32_LFSR0N_LFSR0INL = (unsigned long*) PBE32_LFSR0N_LFSR0INL_ADR;
#define S_PBE32_LFSR0N_LFSR0INL (*SP_PBE32_LFSR0N_LFSR0INL)
#define RF24_PBE32_O_LFSR0N_LFSR0INL               172
// bitfield: LFSR0N_LFSR0INL_SIZE
#define PBE32_LFSR0N_LFSR0INL_SIZE                     16UL
#define RF24_PBE32_LFSR0N_LFSR0INL_SIZE_S        16UL
#define PBE32_LFSR0N_LFSR0INL_SIZE_BM                  0x000F0000UL
#define RF24_PBE32_LFSR0N_LFSR0INL_SIZE_M        0x000F0000UL
// enums for bitfield LFSR0N_LFSR0INL_SIZE (width: 4)UL
#define PBE32_LFSR0N_LFSR0INL_SIZE_ALLZEROS            0x0UL
#define PBE32_LFSR0N_LFSR0INL_SIZE_ALLONES             0xFUL
// bitfield: LFSR0N_LFSR0INL_VAL
#define PBE32_LFSR0N_LFSR0INL_VAL                      0UL
#define RF24_PBE32_LFSR0N_LFSR0INL_VAL_S         0UL
#define PBE32_LFSR0N_LFSR0INL_VAL_BM                   0x0000FFFFUL
#define RF24_PBE32_LFSR0N_LFSR0INL_VAL_M         0x0000FFFFUL
// enums for bitfield LFSR0N_LFSR0INL_VAL (width: 16)UL
#define PBE32_LFSR0N_LFSR0INL_VAL_ALLZEROS             0x0000UL
#define PBE32_LFSR0N_LFSR0INL_VAL_ALLONES              0x0003UL
// --------------------------------------------------------------
// PHAOUT0_LFSR0INM
// 
#define PBE32_PHAOUT0_LFSR0INM_ADR (PBE32_BASE + 0x00B0UL)
static volatile unsigned long* const SP_PBE32_PHAOUT0_LFSR0INM = (unsigned long*) PBE32_PHAOUT0_LFSR0INM_ADR;
#define S_PBE32_PHAOUT0_LFSR0INM (*SP_PBE32_PHAOUT0_LFSR0INM)
#define RF24_PBE32_O_PHAOUT0_LFSR0INM              176
// bitfield: PHAOUT0_LFSR0INM_PHAOUT0_VAL
#define PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL             16UL
#define RF24_PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL_S 16UL
#define PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL_BM          0xFFFF0000UL
#define RF24_PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL_M 0xFFFF0000UL
// enums for bitfield PHAOUT0_LFSR0INM_PHAOUT0_VAL (width: 16)UL
#define PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL_ALLZEROS    0x0000UL
#define PBE32_PHAOUT0_LFSR0INM_PHAOUT0_VAL_ALLONES     0xDCD7UL
// bitfield: PHAOUT0_LFSR0INM_LFSR0INM_VAL
#define PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL            0UL
#define RF24_PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL_S 0UL
#define PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL_BM         0x0000FFFFUL
#define RF24_PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL_M 0x0000FFFFUL
// enums for bitfield PHAOUT0_LFSR0INM_LFSR0INM_VAL (width: 16)UL
#define PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL_ZERO       0x0000UL
#define PBE32_PHAOUT0_LFSR0INM_LFSR0INM_VAL_ONE        0x0001UL
// --------------------------------------------------------------
// LFSR1N_LFSR1INL
// 
#define PBE32_LFSR1N_LFSR1INL_ADR (PBE32_BASE + 0x00B4UL)
static volatile unsigned long* const SP_PBE32_LFSR1N_LFSR1INL = (unsigned long*) PBE32_LFSR1N_LFSR1INL_ADR;
#define S_PBE32_LFSR1N_LFSR1INL (*SP_PBE32_LFSR1N_LFSR1INL)
#define RF24_PBE32_O_LFSR1N_LFSR1INL               180
// bitfield: LFSR1N_LFSR1INL_SIZE
#define PBE32_LFSR1N_LFSR1INL_SIZE                     16UL
#define RF24_PBE32_LFSR1N_LFSR1INL_SIZE_S        16UL
#define PBE32_LFSR1N_LFSR1INL_SIZE_BM                  0x000F0000UL
#define RF24_PBE32_LFSR1N_LFSR1INL_SIZE_M        0x000F0000UL
// enums for bitfield LFSR1N_LFSR1INL_SIZE (width: 4)UL
#define PBE32_LFSR1N_LFSR1INL_SIZE_ALLZEROS            0x0UL
#define PBE32_LFSR1N_LFSR1INL_SIZE_ALLONES             0xFUL
// bitfield: LFSR1N_LFSR1INL_VAL
#define PBE32_LFSR1N_LFSR1INL_VAL                      0UL
#define RF24_PBE32_LFSR1N_LFSR1INL_VAL_S         0UL
#define PBE32_LFSR1N_LFSR1INL_VAL_BM                   0x0000FFFFUL
#define RF24_PBE32_LFSR1N_LFSR1INL_VAL_M         0x0000FFFFUL
// enums for bitfield LFSR1N_LFSR1INL_VAL (width: 16)UL
#define PBE32_LFSR1N_LFSR1INL_VAL_ALLZEROS             0x0000UL
#define PBE32_LFSR1N_LFSR1INL_VAL_ALLONES              0x0003UL
// --------------------------------------------------------------
// PHAOUT0BR_LFSR1INM
// 
#define PBE32_PHAOUT0BR_LFSR1INM_ADR (PBE32_BASE + 0x00B8UL)
static volatile unsigned long* const SP_PBE32_PHAOUT0BR_LFSR1INM = (unsigned long*) PBE32_PHAOUT0BR_LFSR1INM_ADR;
#define S_PBE32_PHAOUT0BR_LFSR1INM (*SP_PBE32_PHAOUT0BR_LFSR1INM)
#define RF24_PBE32_O_PHAOUT0BR_LFSR1INM            184
// bitfield: PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL
#define PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL         16UL
#define RF24_PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL_S 16UL
#define PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL_BM      0xFFFF0000UL
#define RF24_PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL_M 0xFFFF0000UL
// enums for bitfield PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL (width: 16)UL
#define PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL_ALLZEROS 0x0000UL
#define PBE32_PHAOUT0BR_LFSR1INM_PHAOUT0BR_VAL_ALLONES 0xFFFFUL
// bitfield: PHAOUT0BR_LFSR1INM_LFSR1INM_VAL
#define PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL          0UL
#define RF24_PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL_S 0UL
#define PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL_BM       0x0000FFFFUL
#define RF24_PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL_M 0x0000FFFFUL
// enums for bitfield PHAOUT0BR_LFSR1INM_LFSR1INM_VAL (width: 16)UL
#define PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL_ZERO     0x0000UL
#define PBE32_PHAOUT0BR_LFSR1INM_LFSR1INM_VAL_ONE      0x0001UL
// --------------------------------------------------------------
// SYSTIM0
// 
#define PBE32_SYSTIM0_ADR (PBE32_BASE + 0x00C0UL)
static volatile unsigned long* const SP_PBE32_SYSTIM0 = (unsigned long*) PBE32_SYSTIM0_ADR;
#define S_PBE32_SYSTIM0 (*SP_PBE32_SYSTIM0)
#define RF24_PBE32_O_SYSTIM0                       192
// bitfield: SYSTIM0_VAL
#define PBE32_SYSTIM0_VAL                              0UL
#define RF24_PBE32_SYSTIM0_VAL_S                 0UL
#define PBE32_SYSTIM0_VAL_BM                           0xFFFFFFFFUL
#define RF24_PBE32_SYSTIM0_VAL_M                 0xFFFFFFFFUL
// enums for bitfield SYSTIM0_VAL (width: 32)UL
#define PBE32_SYSTIM0_VAL_ZERO                         0x00000000UL
#define PBE32_SYSTIM0_VAL_ONE                          0x00000001UL
// --------------------------------------------------------------
// SYSTIM1
// 
#define PBE32_SYSTIM1_ADR (PBE32_BASE + 0x00C4UL)
static volatile unsigned long* const SP_PBE32_SYSTIM1 = (unsigned long*) PBE32_SYSTIM1_ADR;
#define S_PBE32_SYSTIM1 (*SP_PBE32_SYSTIM1)
#define RF24_PBE32_O_SYSTIM1                       196
// bitfield: SYSTIM1_VAL
#define PBE32_SYSTIM1_VAL                              0UL
#define RF24_PBE32_SYSTIM1_VAL_S                 0UL
#define PBE32_SYSTIM1_VAL_BM                           0xFFFFFFFFUL
#define RF24_PBE32_SYSTIM1_VAL_M                 0xFFFFFFFFUL
// enums for bitfield SYSTIM1_VAL (width: 32)UL
#define PBE32_SYSTIM1_VAL_ZERO                         0x00000000UL
#define PBE32_SYSTIM1_VAL_ONE                          0x00000001UL
// --------------------------------------------------------------
// SYSTIM2
// 
#define PBE32_SYSTIM2_ADR (PBE32_BASE + 0x00C8UL)
static volatile unsigned long* const SP_PBE32_SYSTIM2 = (unsigned long*) PBE32_SYSTIM2_ADR;
#define S_PBE32_SYSTIM2 (*SP_PBE32_SYSTIM2)
#define RF24_PBE32_O_SYSTIM2                       200
// bitfield: SYSTIM2_VAL
#define PBE32_SYSTIM2_VAL                              0UL
#define RF24_PBE32_SYSTIM2_VAL_S                 0UL
#define PBE32_SYSTIM2_VAL_BM                           0xFFFFFFFFUL
#define RF24_PBE32_SYSTIM2_VAL_M                 0xFFFFFFFFUL
// enums for bitfield SYSTIM2_VAL (width: 32)UL
#define PBE32_SYSTIM2_VAL_ZERO                         0x00000000UL
#define PBE32_SYSTIM2_VAL_ONE                          0x00000001UL
// --------------------------------------------------------------
// GPI
// 
#define PBE32_GPI_ADR (PBE32_BASE + 0x00CCUL)
static volatile unsigned long* const SP_PBE32_GPI = (unsigned long*) PBE32_GPI_ADR;
#define S_PBE32_GPI (*SP_PBE32_GPI)
#define RF24_PBE32_O_GPI                           204
// bitfield: GPI_GPI7
#define PBE32_GPI_GPI7                                 7UL
#define RF24_PBE32_GPI_GPI7_S                    7UL
#define PBE32_GPI_GPI7_BM                              0x00000080UL
#define RF24_PBE32_GPI_GPI7_M                    0x00000080UL
// enums for bitfield GPI_GPI7 (width: 1)UL
#define PBE32_GPI_GPI7_ZERO                            0x0UL
#define PBE32_GPI_GPI7_ONE                             0x1UL
// bitfield: GPI_GPI6
#define PBE32_GPI_GPI6                                 6UL
#define RF24_PBE32_GPI_GPI6_S                    6UL
#define PBE32_GPI_GPI6_BM                              0x00000040UL
#define RF24_PBE32_GPI_GPI6_M                    0x00000040UL
// enums for bitfield GPI_GPI6 (width: 1)UL
#define PBE32_GPI_GPI6_ZERO                            0x0UL
#define PBE32_GPI_GPI6_ONE                             0x1UL
// bitfield: GPI_GPI5
#define PBE32_GPI_GPI5                                 5UL
#define RF24_PBE32_GPI_GPI5_S                    5UL
#define PBE32_GPI_GPI5_BM                              0x00000020UL
#define RF24_PBE32_GPI_GPI5_M                    0x00000020UL
// enums for bitfield GPI_GPI5 (width: 1)UL
#define PBE32_GPI_GPI5_ZERO                            0x0UL
#define PBE32_GPI_GPI5_ONE                             0x1UL
// bitfield: GPI_GPI4
#define PBE32_GPI_GPI4                                 4UL
#define RF24_PBE32_GPI_GPI4_S                    4UL
#define PBE32_GPI_GPI4_BM                              0x00000010UL
#define RF24_PBE32_GPI_GPI4_M                    0x00000010UL
// enums for bitfield GPI_GPI4 (width: 1)UL
#define PBE32_GPI_GPI4_ZERO                            0x0UL
#define PBE32_GPI_GPI4_ONE                             0x1UL
// bitfield: GPI_GPI3
#define PBE32_GPI_GPI3                                 3UL
#define RF24_PBE32_GPI_GPI3_S                    3UL
#define PBE32_GPI_GPI3_BM                              0x00000008UL
#define RF24_PBE32_GPI_GPI3_M                    0x00000008UL
// enums for bitfield GPI_GPI3 (width: 1)UL
#define PBE32_GPI_GPI3_ZERO                            0x0UL
#define PBE32_GPI_GPI3_ONE                             0x1UL
// bitfield: GPI_GPI2
#define PBE32_GPI_GPI2                                 2UL
#define RF24_PBE32_GPI_GPI2_S                    2UL
#define PBE32_GPI_GPI2_BM                              0x00000004UL
#define RF24_PBE32_GPI_GPI2_M                    0x00000004UL
// enums for bitfield GPI_GPI2 (width: 1)UL
#define PBE32_GPI_GPI2_ZERO                            0x0UL
#define PBE32_GPI_GPI2_ONE                             0x1UL
// bitfield: GPI_GPI1
#define PBE32_GPI_GPI1                                 1UL
#define RF24_PBE32_GPI_GPI1_S                    1UL
#define PBE32_GPI_GPI1_BM                              0x00000002UL
#define RF24_PBE32_GPI_GPI1_M                    0x00000002UL
// enums for bitfield GPI_GPI1 (width: 1)UL
#define PBE32_GPI_GPI1_ZERO                            0x0UL
#define PBE32_GPI_GPI1_ONE                             0x1UL
// bitfield: GPI_GPI0
#define PBE32_GPI_GPI0                                 0UL
#define RF24_PBE32_GPI_GPI0_S                    0UL
#define PBE32_GPI_GPI0_BM                              0x00000001UL
#define RF24_PBE32_GPI_GPI0_M                    0x00000001UL
// enums for bitfield GPI_GPI0 (width: 1)UL
#define PBE32_GPI_GPI0_ZERO                            0x0UL
#define PBE32_GPI_GPI0_ONE                             0x1UL
// --------------------------------------------------------------
// FSTAT_FCMD
// 
#define PBE32_FSTAT_FCMD_ADR (PBE32_BASE + 0x00D0UL)
static volatile unsigned long* const SP_PBE32_FSTAT_FCMD = (unsigned long*) PBE32_FSTAT_FCMD_ADR;
#define S_PBE32_FSTAT_FCMD (*SP_PBE32_FSTAT_FCMD)
#define RF24_PBE32_O_FSTAT_FCMD                    208
// bitfield: FSTAT_FCMD_TXUNFL
#define PBE32_FSTAT_FCMD_TXUNFL                        27UL
#define RF24_PBE32_FSTAT_FCMD_TXUNFL_S           27UL
#define PBE32_FSTAT_FCMD_TXUNFL_BM                     0x08000000UL
#define RF24_PBE32_FSTAT_FCMD_TXUNFL_M           0x08000000UL
// enums for bitfield FSTAT_FCMD_TXUNFL (width: 1)UL
#define PBE32_FSTAT_FCMD_TXUNFL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_TXUNFL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_TXOVFL
#define PBE32_FSTAT_FCMD_TXOVFL                        26UL
#define RF24_PBE32_FSTAT_FCMD_TXOVFL_S           26UL
#define PBE32_FSTAT_FCMD_TXOVFL_BM                     0x04000000UL
#define RF24_PBE32_FSTAT_FCMD_TXOVFL_M           0x04000000UL
// enums for bitfield FSTAT_FCMD_TXOVFL (width: 1)UL
#define PBE32_FSTAT_FCMD_TXOVFL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_TXOVFL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_TXEMPTY
#define PBE32_FSTAT_FCMD_TXEMPTY                       25UL
#define RF24_PBE32_FSTAT_FCMD_TXEMPTY_S          25UL
#define PBE32_FSTAT_FCMD_TXEMPTY_BM                    0x02000000UL
#define RF24_PBE32_FSTAT_FCMD_TXEMPTY_M          0x02000000UL
// enums for bitfield FSTAT_FCMD_TXEMPTY (width: 1)UL
#define PBE32_FSTAT_FCMD_TXEMPTY_FALSE                 0x0UL
#define PBE32_FSTAT_FCMD_TXEMPTY_TRUE                  0x1UL
// bitfield: FSTAT_FCMD_TXFULL
#define PBE32_FSTAT_FCMD_TXFULL                        24UL
#define RF24_PBE32_FSTAT_FCMD_TXFULL_S           24UL
#define PBE32_FSTAT_FCMD_TXFULL_BM                     0x01000000UL
#define RF24_PBE32_FSTAT_FCMD_TXFULL_M           0x01000000UL
// enums for bitfield FSTAT_FCMD_TXFULL (width: 1)UL
#define PBE32_FSTAT_FCMD_TXFULL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_TXFULL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_RXUNFL
#define PBE32_FSTAT_FCMD_RXUNFL                        19UL
#define RF24_PBE32_FSTAT_FCMD_RXUNFL_S           19UL
#define PBE32_FSTAT_FCMD_RXUNFL_BM                     0x00080000UL
#define RF24_PBE32_FSTAT_FCMD_RXUNFL_M           0x00080000UL
// enums for bitfield FSTAT_FCMD_RXUNFL (width: 1)UL
#define PBE32_FSTAT_FCMD_RXUNFL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_RXUNFL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_RXOVFL
#define PBE32_FSTAT_FCMD_RXOVFL                        18UL
#define RF24_PBE32_FSTAT_FCMD_RXOVFL_S           18UL
#define PBE32_FSTAT_FCMD_RXOVFL_BM                     0x00040000UL
#define RF24_PBE32_FSTAT_FCMD_RXOVFL_M           0x00040000UL
// enums for bitfield FSTAT_FCMD_RXOVFL (width: 1)UL
#define PBE32_FSTAT_FCMD_RXOVFL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_RXOVFL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_RXEMPTY
#define PBE32_FSTAT_FCMD_RXEMPTY                       17UL
#define RF24_PBE32_FSTAT_FCMD_RXEMPTY_S          17UL
#define PBE32_FSTAT_FCMD_RXEMPTY_BM                    0x00020000UL
#define RF24_PBE32_FSTAT_FCMD_RXEMPTY_M          0x00020000UL
// enums for bitfield FSTAT_FCMD_RXEMPTY (width: 1)UL
#define PBE32_FSTAT_FCMD_RXEMPTY_FALSE                 0x0UL
#define PBE32_FSTAT_FCMD_RXEMPTY_TRUE                  0x1UL
// bitfield: FSTAT_FCMD_RXFULL
#define PBE32_FSTAT_FCMD_RXFULL                        16UL
#define RF24_PBE32_FSTAT_FCMD_RXFULL_S           16UL
#define PBE32_FSTAT_FCMD_RXFULL_BM                     0x00010000UL
#define RF24_PBE32_FSTAT_FCMD_RXFULL_M           0x00010000UL
// enums for bitfield FSTAT_FCMD_RXFULL (width: 1)UL
#define PBE32_FSTAT_FCMD_RXFULL_FALSE                  0x0UL
#define PBE32_FSTAT_FCMD_RXFULL_TRUE                   0x1UL
// bitfield: FSTAT_FCMD_DATA
#define PBE32_FSTAT_FCMD_DATA                          0UL
#define RF24_PBE32_FSTAT_FCMD_DATA_S             0UL
#define PBE32_FSTAT_FCMD_DATA_BM                       0x000000FFUL
#define RF24_PBE32_FSTAT_FCMD_DATA_M             0x000000FFUL
// enums for bitfield FSTAT_FCMD_DATA (width: 8)UL
#define PBE32_FSTAT_FCMD_DATA_RXFIFO_RESET             0x01UL
#define PBE32_FSTAT_FCMD_DATA_RXFIFO_DEALLOC           0x02UL
#define PBE32_FSTAT_FCMD_DATA_TXFIFO_COMMIT            0x03UL
#define PBE32_FSTAT_FCMD_DATA_TXFIFO_DISCARD           0x04UL
#define PBE32_FSTAT_FCMD_DATA_TXFIFO_RETRY             0x05UL
#define PBE32_FSTAT_FCMD_DATA_TXFIFO_DEALLOC           0x06UL
#define PBE32_FSTAT_FCMD_DATA_TXFIFO_RESET             0x07UL
#define PBE32_FSTAT_FCMD_DATA_RXFIFO_COMMIT            0x08UL
#define PBE32_FSTAT_FCMD_DATA_RXFIFO_DISCARD           0x09UL
#define PBE32_FSTAT_FCMD_DATA_RXFIFO_RETRY             0x0AUL
#define PBE32_FSTAT_FCMD_DATA_FIFO_RESET               0x0BUL
#define PBE32_FSTAT_FCMD_DATA_FIFO_DEALLOC             0x0CUL
#define PBE32_FSTAT_FCMD_DATA_FIFO_RETRY               0x0DUL
#define PBE32_FSTAT_FCMD_DATA_FIFO_DISCARD             0x0EUL
#define PBE32_FSTAT_FCMD_DATA_FIFO_COMMIT              0x0FUL
// --------------------------------------------------------------
// RXFRP_RXFWP
// 
#define PBE32_RXFRP_RXFWP_ADR (PBE32_BASE + 0x00D4UL)
static volatile unsigned long* const SP_PBE32_RXFRP_RXFWP = (unsigned long*) PBE32_RXFRP_RXFWP_ADR;
#define S_PBE32_RXFRP_RXFWP (*SP_PBE32_RXFRP_RXFWP)
#define RF24_PBE32_O_RXFRP_RXFWP                   212
// bitfield: RXFRP_RXFWP_RXFRP_PTR
#define PBE32_RXFRP_RXFWP_RXFRP_PTR                    16UL
#define RF24_PBE32_RXFRP_RXFWP_RXFRP_PTR_S       16UL
#define PBE32_RXFRP_RXFWP_RXFRP_PTR_BM                 0x03FF0000UL
#define RF24_PBE32_RXFRP_RXFWP_RXFRP_PTR_M       0x03FF0000UL
// enums for bitfield RXFRP_RXFWP_RXFRP_PTR (width: 10)UL
#define PBE32_RXFRP_RXFWP_RXFRP_PTR_ALLZEROS           0x000UL
#define PBE32_RXFRP_RXFWP_RXFRP_PTR_ALLONES            0x3FFUL
// bitfield: RXFRP_RXFWP_RXFWP_PTR
#define PBE32_RXFRP_RXFWP_RXFWP_PTR                    0UL
#define RF24_PBE32_RXFRP_RXFWP_RXFWP_PTR_S       0UL
#define PBE32_RXFRP_RXFWP_RXFWP_PTR_BM                 0x000003FFUL
#define RF24_PBE32_RXFRP_RXFWP_RXFWP_PTR_M       0x000003FFUL
// enums for bitfield RXFRP_RXFWP_RXFWP_PTR (width: 10)UL
#define PBE32_RXFRP_RXFWP_RXFWP_PTR_ALLZEROS           0x000UL
#define PBE32_RXFRP_RXFWP_RXFWP_PTR_ALLONES            0x3FFUL
// --------------------------------------------------------------
// RXFSRP_RXFSWP
// 
#define PBE32_RXFSRP_RXFSWP_ADR (PBE32_BASE + 0x00D8UL)
static volatile unsigned long* const SP_PBE32_RXFSRP_RXFSWP = (unsigned long*) PBE32_RXFSRP_RXFSWP_ADR;
#define S_PBE32_RXFSRP_RXFSWP (*SP_PBE32_RXFSRP_RXFSWP)
#define RF24_PBE32_O_RXFSRP_RXFSWP                 216
// bitfield: RXFSRP_RXFSWP_RXFSRP_PTR
#define PBE32_RXFSRP_RXFSWP_RXFSRP_PTR                 16UL
#define RF24_PBE32_RXFSRP_RXFSWP_RXFSRP_PTR_S    16UL
#define PBE32_RXFSRP_RXFSWP_RXFSRP_PTR_BM              0x03FF0000UL
#define RF24_PBE32_RXFSRP_RXFSWP_RXFSRP_PTR_M    0x03FF0000UL
// enums for bitfield RXFSRP_RXFSWP_RXFSRP_PTR (width: 10)UL
#define PBE32_RXFSRP_RXFSWP_RXFSRP_PTR_ALLZEROS        0x000UL
#define PBE32_RXFSRP_RXFSWP_RXFSRP_PTR_ALLONES         0x3FFUL
// bitfield: RXFSRP_RXFSWP_RXFSWP_PTR
#define PBE32_RXFSRP_RXFSWP_RXFSWP_PTR                 0UL
#define RF24_PBE32_RXFSRP_RXFSWP_RXFSWP_PTR_S    0UL
#define PBE32_RXFSRP_RXFSWP_RXFSWP_PTR_BM              0x000003FFUL
#define RF24_PBE32_RXFSRP_RXFSWP_RXFSWP_PTR_M    0x000003FFUL
// enums for bitfield RXFSRP_RXFSWP_RXFSWP_PTR (width: 10)UL
#define PBE32_RXFSRP_RXFSWP_RXFSWP_PTR_ALLZEROS        0x000UL
#define PBE32_RXFSRP_RXFSWP_RXFSWP_PTR_ALLONES         0x3FFUL
// --------------------------------------------------------------
// TXFRP_TXFWP
// 
#define PBE32_TXFRP_TXFWP_ADR (PBE32_BASE + 0x00DCUL)
static volatile unsigned long* const SP_PBE32_TXFRP_TXFWP = (unsigned long*) PBE32_TXFRP_TXFWP_ADR;
#define S_PBE32_TXFRP_TXFWP (*SP_PBE32_TXFRP_TXFWP)
#define RF24_PBE32_O_TXFRP_TXFWP                   220
// bitfield: TXFRP_TXFWP_TXFRP_PTR
#define PBE32_TXFRP_TXFWP_TXFRP_PTR                    16UL
#define RF24_PBE32_TXFRP_TXFWP_TXFRP_PTR_S       16UL
#define PBE32_TXFRP_TXFWP_TXFRP_PTR_BM                 0x03FF0000UL
#define RF24_PBE32_TXFRP_TXFWP_TXFRP_PTR_M       0x03FF0000UL
// enums for bitfield TXFRP_TXFWP_TXFRP_PTR (width: 10)UL
#define PBE32_TXFRP_TXFWP_TXFRP_PTR_ALLZEROS           0x000UL
#define PBE32_TXFRP_TXFWP_TXFRP_PTR_ALLONES            0x3FFUL
// bitfield: TXFRP_TXFWP_TXFWP_PTR
#define PBE32_TXFRP_TXFWP_TXFWP_PTR                    0UL
#define RF24_PBE32_TXFRP_TXFWP_TXFWP_PTR_S       0UL
#define PBE32_TXFRP_TXFWP_TXFWP_PTR_BM                 0x000003FFUL
#define RF24_PBE32_TXFRP_TXFWP_TXFWP_PTR_M       0x000003FFUL
// enums for bitfield TXFRP_TXFWP_TXFWP_PTR (width: 10)UL
#define PBE32_TXFRP_TXFWP_TXFWP_PTR_ALLZEROS           0x000UL
#define PBE32_TXFRP_TXFWP_TXFWP_PTR_ALLONES            0x3FFUL
// --------------------------------------------------------------
// TXFSRP_TXFSWP
// 
#define PBE32_TXFSRP_TXFSWP_ADR (PBE32_BASE + 0x00E0UL)
static volatile unsigned long* const SP_PBE32_TXFSRP_TXFSWP = (unsigned long*) PBE32_TXFSRP_TXFSWP_ADR;
#define S_PBE32_TXFSRP_TXFSWP (*SP_PBE32_TXFSRP_TXFSWP)
#define RF24_PBE32_O_TXFSRP_TXFSWP                 224
// bitfield: TXFSRP_TXFSWP_TXFSRP_PTR
#define PBE32_TXFSRP_TXFSWP_TXFSRP_PTR                 16UL
#define RF24_PBE32_TXFSRP_TXFSWP_TXFSRP_PTR_S    16UL
#define PBE32_TXFSRP_TXFSWP_TXFSRP_PTR_BM              0x03FF0000UL
#define RF24_PBE32_TXFSRP_TXFSWP_TXFSRP_PTR_M    0x03FF0000UL
// enums for bitfield TXFSRP_TXFSWP_TXFSRP_PTR (width: 10)UL
#define PBE32_TXFSRP_TXFSWP_TXFSRP_PTR_ALLZEROS        0x000UL
#define PBE32_TXFSRP_TXFSWP_TXFSRP_PTR_ALLONES_2       0x3FFUL
// bitfield: TXFSRP_TXFSWP_TXFSWP_PTR
#define PBE32_TXFSRP_TXFSWP_TXFSWP_PTR                 0UL
#define RF24_PBE32_TXFSRP_TXFSWP_TXFSWP_PTR_S    0UL
#define PBE32_TXFSRP_TXFSWP_TXFSWP_PTR_BM              0x000003FFUL
#define RF24_PBE32_TXFSRP_TXFSWP_TXFSWP_PTR_M    0x000003FFUL
// enums for bitfield TXFSRP_TXFSWP_TXFSWP_PTR (width: 10)UL
#define PBE32_TXFSRP_TXFSWP_TXFSWP_PTR_ALLZEROS        0x000UL
#define PBE32_TXFSRP_TXFSWP_TXFSWP_PTR_ALLONES         0x3FFUL
// --------------------------------------------------------------
// RXFREADABLE_RXFWRITABLE
// 
#define PBE32_RXFREADABLE_RXFWRITABLE_ADR (PBE32_BASE + 0x00E4UL)
static volatile unsigned long* const SP_PBE32_RXFREADABLE_RXFWRITABLE = (unsigned long*) PBE32_RXFREADABLE_RXFWRITABLE_ADR;
#define S_PBE32_RXFREADABLE_RXFWRITABLE (*SP_PBE32_RXFREADABLE_RXFWRITABLE)
#define RF24_PBE32_O_RXFREADABLE_RXFWRITABLE       228
// bitfield: RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES 16UL
#define RF24_PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES_S 16UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES_BM 0x03FF0000UL
#define RF24_PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES_M 0x03FF0000UL
// enums for bitfield RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES (width: 10)UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES_ALLZEROS 0x000UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFREADABLE_BYTES_ALLONES 0x3FFUL
// bitfield: RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES 0UL
#define RF24_PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES_S 0UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES_BM 0x000003FFUL
#define RF24_PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES_M 0x000003FFUL
// enums for bitfield RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES (width: 10)UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES_ALLZEROS 0x000UL
#define PBE32_RXFREADABLE_RXFWRITABLE_RXFWRITABLE_BYTES_ALLONES 0x3FFUL
// --------------------------------------------------------------
// TXFREADABLE_TXFWRITABLE
// 
#define PBE32_TXFREADABLE_TXFWRITABLE_ADR (PBE32_BASE + 0x00E8UL)
static volatile unsigned long* const SP_PBE32_TXFREADABLE_TXFWRITABLE = (unsigned long*) PBE32_TXFREADABLE_TXFWRITABLE_ADR;
#define S_PBE32_TXFREADABLE_TXFWRITABLE (*SP_PBE32_TXFREADABLE_TXFWRITABLE)
#define RF24_PBE32_O_TXFREADABLE_TXFWRITABLE       232
// bitfield: TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES 16UL
#define RF24_PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES_S 16UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES_BM 0x03FF0000UL
#define RF24_PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES_M 0x03FF0000UL
// enums for bitfield TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES (width: 10)UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES_ALLZEROS 0x000UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFREADABLE_BYTES_ALLONES 0x3FFUL
// bitfield: TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES 0UL
#define RF24_PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES_S 0UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES_BM 0x000003FFUL
#define RF24_PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES_M 0x000003FFUL
// enums for bitfield TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES (width: 10)UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES_ALLZEROS 0x000UL
#define PBE32_TXFREADABLE_TXFWRITABLE_TXFWRITABLE_BYTES_ALLONES 0x3FFUL
// --------------------------------------------------------------
// RXFBWR_RXFBRD
// 
#define PBE32_RXFBWR_RXFBRD_ADR (PBE32_BASE + 0x00ECUL)
static volatile unsigned long* const SP_PBE32_RXFBWR_RXFBRD = (unsigned long*) PBE32_RXFBWR_RXFBRD_ADR;
#define S_PBE32_RXFBWR_RXFBRD (*SP_PBE32_RXFBWR_RXFBRD)
#define RF24_PBE32_O_RXFBWR_RXFBRD                 236
// bitfield: RXFBWR_RXFBRD_RXFBWR_DATA
#define PBE32_RXFBWR_RXFBRD_RXFBWR_DATA                16UL
#define RF24_PBE32_RXFBWR_RXFBRD_RXFBWR_DATA_S   16UL
#define PBE32_RXFBWR_RXFBRD_RXFBWR_DATA_BM             0x00FF0000UL
#define RF24_PBE32_RXFBWR_RXFBRD_RXFBWR_DATA_M   0x00FF0000UL
// enums for bitfield RXFBWR_RXFBRD_RXFBWR_DATA (width: 8)UL
#define PBE32_RXFBWR_RXFBRD_RXFBWR_DATA_ALLZEROS       0x00UL
#define PBE32_RXFBWR_RXFBRD_RXFBWR_DATA_ALLONES        0xFFUL
// bitfield: RXFBWR_RXFBRD_RXFBRD_DATA
#define PBE32_RXFBWR_RXFBRD_RXFBRD_DATA                0UL
#define RF24_PBE32_RXFBWR_RXFBRD_RXFBRD_DATA_S   0UL
#define PBE32_RXFBWR_RXFBRD_RXFBRD_DATA_BM             0x000000FFUL
#define RF24_PBE32_RXFBWR_RXFBRD_RXFBRD_DATA_M   0x000000FFUL
// enums for bitfield RXFBWR_RXFBRD_RXFBRD_DATA (width: 8)UL
#define PBE32_RXFBWR_RXFBRD_RXFBRD_DATA_ALLZEROS       0x00UL
#define PBE32_RXFBWR_RXFBRD_RXFBRD_DATA_ALLONES        0xFFUL
// --------------------------------------------------------------
// TXFBWR_TXFBRD
// 
#define PBE32_TXFBWR_TXFBRD_ADR (PBE32_BASE + 0x00F0UL)
static volatile unsigned long* const SP_PBE32_TXFBWR_TXFBRD = (unsigned long*) PBE32_TXFBWR_TXFBRD_ADR;
#define S_PBE32_TXFBWR_TXFBRD (*SP_PBE32_TXFBWR_TXFBRD)
#define RF24_PBE32_O_TXFBWR_TXFBRD                 240
// bitfield: TXFBWR_TXFBRD_TXFBWR_DATA
#define PBE32_TXFBWR_TXFBRD_TXFBWR_DATA                16UL
#define RF24_PBE32_TXFBWR_TXFBRD_TXFBWR_DATA_S   16UL
#define PBE32_TXFBWR_TXFBRD_TXFBWR_DATA_BM             0x00FF0000UL
#define RF24_PBE32_TXFBWR_TXFBRD_TXFBWR_DATA_M   0x00FF0000UL
// enums for bitfield TXFBWR_TXFBRD_TXFBWR_DATA (width: 8)UL
#define PBE32_TXFBWR_TXFBRD_TXFBWR_DATA_ALLZEROS       0x00UL
#define PBE32_TXFBWR_TXFBRD_TXFBWR_DATA_ALLONES        0xFFUL
// bitfield: TXFBWR_TXFBRD_TXFBRD_DATA
#define PBE32_TXFBWR_TXFBRD_TXFBRD_DATA                0UL
#define RF24_PBE32_TXFBWR_TXFBRD_TXFBRD_DATA_S   0UL
#define PBE32_TXFBWR_TXFBRD_TXFBRD_DATA_BM             0x000000FFUL
#define RF24_PBE32_TXFBWR_TXFBRD_TXFBRD_DATA_M   0x000000FFUL
// enums for bitfield TXFBWR_TXFBRD_TXFBRD_DATA (width: 8)UL
#define PBE32_TXFBWR_TXFBRD_TXFBRD_DATA_ALLZEROS       0x00UL
#define PBE32_TXFBWR_TXFBRD_TXFBRD_DATA_ALLONES        0xFFUL
// --------------------------------------------------------------
// RXFHWR_RXFHRD
// 
#define PBE32_RXFHWR_RXFHRD_ADR (PBE32_BASE + 0x00F4UL)
static volatile unsigned long* const SP_PBE32_RXFHWR_RXFHRD = (unsigned long*) PBE32_RXFHWR_RXFHRD_ADR;
#define S_PBE32_RXFHWR_RXFHRD (*SP_PBE32_RXFHWR_RXFHRD)
#define RF24_PBE32_O_RXFHWR_RXFHRD                 244
// bitfield: RXFHWR_RXFHRD_RXFHWR_DATA
#define PBE32_RXFHWR_RXFHRD_RXFHWR_DATA                16UL
#define RF24_PBE32_RXFHWR_RXFHRD_RXFHWR_DATA_S   16UL
#define PBE32_RXFHWR_RXFHRD_RXFHWR_DATA_BM             0xFFFF0000UL
#define RF24_PBE32_RXFHWR_RXFHRD_RXFHWR_DATA_M   0xFFFF0000UL
// enums for bitfield RXFHWR_RXFHRD_RXFHWR_DATA (width: 16)UL
#define PBE32_RXFHWR_RXFHRD_RXFHWR_DATA_ALLZEROS       0x0000UL
#define PBE32_RXFHWR_RXFHRD_RXFHWR_DATA_ALLONES        0xFFFFUL
// bitfield: RXFHWR_RXFHRD_RXFHRD_DATA
#define PBE32_RXFHWR_RXFHRD_RXFHRD_DATA                0UL
#define RF24_PBE32_RXFHWR_RXFHRD_RXFHRD_DATA_S   0UL
#define PBE32_RXFHWR_RXFHRD_RXFHRD_DATA_BM             0x0000FFFFUL
#define RF24_PBE32_RXFHWR_RXFHRD_RXFHRD_DATA_M   0x0000FFFFUL
// enums for bitfield RXFHWR_RXFHRD_RXFHRD_DATA (width: 16)UL
#define PBE32_RXFHWR_RXFHRD_RXFHRD_DATA_ALLZEROS       0x0000UL
#define PBE32_RXFHWR_RXFHRD_RXFHRD_DATA_ALLONES        0xFFFFUL
// --------------------------------------------------------------
// TXFHWR_TXFHRD
// 
#define PBE32_TXFHWR_TXFHRD_ADR (PBE32_BASE + 0x00F8UL)
static volatile unsigned long* const SP_PBE32_TXFHWR_TXFHRD = (unsigned long*) PBE32_TXFHWR_TXFHRD_ADR;
#define S_PBE32_TXFHWR_TXFHRD (*SP_PBE32_TXFHWR_TXFHRD)
#define RF24_PBE32_O_TXFHWR_TXFHRD                 248
// bitfield: TXFHWR_TXFHRD_TXFHWR_DATA
#define PBE32_TXFHWR_TXFHRD_TXFHWR_DATA                16UL
#define RF24_PBE32_TXFHWR_TXFHRD_TXFHWR_DATA_S   16UL
#define PBE32_TXFHWR_TXFHRD_TXFHWR_DATA_BM             0xFFFF0000UL
#define RF24_PBE32_TXFHWR_TXFHRD_TXFHWR_DATA_M   0xFFFF0000UL
// enums for bitfield TXFHWR_TXFHRD_TXFHWR_DATA (width: 16)UL
#define PBE32_TXFHWR_TXFHRD_TXFHWR_DATA_ALLZEROS       0x0000UL
#define PBE32_TXFHWR_TXFHRD_TXFHWR_DATA_ALLONES        0xFFFFUL
// bitfield: TXFHWR_TXFHRD_TXFHRD_DATA
#define PBE32_TXFHWR_TXFHRD_TXFHRD_DATA                0UL
#define RF24_PBE32_TXFHWR_TXFHRD_TXFHRD_DATA_S   0UL
#define PBE32_TXFHWR_TXFHRD_TXFHRD_DATA_BM             0x0000FFFFUL
#define RF24_PBE32_TXFHWR_TXFHRD_TXFHRD_DATA_M   0x0000FFFFUL
// enums for bitfield TXFHWR_TXFHRD_TXFHRD_DATA (width: 16)UL
#define PBE32_TXFHWR_TXFHRD_TXFHRD_DATA_ALLZEROS       0x0000UL
#define PBE32_TXFHWR_TXFHRD_TXFHRD_DATA_ALLONES        0xFFFFUL

#endif
