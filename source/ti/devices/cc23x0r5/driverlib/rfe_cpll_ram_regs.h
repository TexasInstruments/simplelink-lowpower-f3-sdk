// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:21
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40096000 -dat_sz 16 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/rfe/coherent_pll/doc/ram_registers.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40096000 -dat_sz 16 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/rfe/coherent_pll/doc/ram_registers.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/rfe/coherent_pll/doc/ram_registers.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 344d767ee7f0c0993aff290aa527e906d55fadbc
//
// ===========================================================================


#ifndef __RFE_CPLL_RAM_REGS_H
#define __RFE_CPLL_RAM_REGS_H

#define RFE_CPLL_RAM_BASE 0x40096000UL
// --------------------------------------------------------------
// FREQ_SETTLE
// 
#define RFE_CPLL_RAM_FREQ_SETTLE_ADR (RFE_CPLL_RAM_BASE + 0x0004UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_FREQ_SETTLE = (unsigned short*) RFE_CPLL_RAM_FREQ_SETTLE_ADR;
#define S_RFE_CPLL_RAM_FREQ_SETTLE (*SP_RFE_CPLL_RAM_FREQ_SETTLE)
// bitfield: FREQ_SETTLE_VAL
#define RFE_CPLL_RAM_FREQ_SETTLE_VAL                          0UL
#define RFE_CPLL_RAM_FREQ_SETTLE_VAL_BM                       0xFFFFUL
// --------------------------------------------------------------
// TONE_LENGTH
// 
#define RFE_CPLL_RAM_TONE_LENGTH_ADR (RFE_CPLL_RAM_BASE + 0x0008UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_TONE_LENGTH = (unsigned short*) RFE_CPLL_RAM_TONE_LENGTH_ADR;
#define S_RFE_CPLL_RAM_TONE_LENGTH (*SP_RFE_CPLL_RAM_TONE_LENGTH)
// bitfield: TONE_LENGTH_VAL
#define RFE_CPLL_RAM_TONE_LENGTH_VAL                          0UL
#define RFE_CPLL_RAM_TONE_LENGTH_VAL_BM                       0xFFFFUL
// --------------------------------------------------------------
// RX_LENGTH
// 
#define RFE_CPLL_RAM_RX_LENGTH_ADR (RFE_CPLL_RAM_BASE + 0x000CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_RX_LENGTH = (unsigned short*) RFE_CPLL_RAM_RX_LENGTH_ADR;
#define S_RFE_CPLL_RAM_RX_LENGTH (*SP_RFE_CPLL_RAM_RX_LENGTH)
// bitfield: RX_LENGTH_VAL
#define RFE_CPLL_RAM_RX_LENGTH_VAL                            0UL
#define RFE_CPLL_RAM_RX_LENGTH_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// CHANMAP0
// 
#define RFE_CPLL_RAM_CHANMAP0_ADR (RFE_CPLL_RAM_BASE + 0x0E00UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP0 = (unsigned short*) RFE_CPLL_RAM_CHANMAP0_ADR;
#define S_RFE_CPLL_RAM_CHANMAP0 (*SP_RFE_CPLL_RAM_CHANMAP0)
// bitfield: CHANMAP0_FREQ
#define RFE_CPLL_RAM_CHANMAP0_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP0_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP1
// 
#define RFE_CPLL_RAM_CHANMAP1_ADR (RFE_CPLL_RAM_BASE + 0x0E02UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP1 = (unsigned short*) RFE_CPLL_RAM_CHANMAP1_ADR;
#define S_RFE_CPLL_RAM_CHANMAP1 (*SP_RFE_CPLL_RAM_CHANMAP1)
// bitfield: CHANMAP1_FREQ
#define RFE_CPLL_RAM_CHANMAP1_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP1_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP2
// 
#define RFE_CPLL_RAM_CHANMAP2_ADR (RFE_CPLL_RAM_BASE + 0x0E04UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP2 = (unsigned short*) RFE_CPLL_RAM_CHANMAP2_ADR;
#define S_RFE_CPLL_RAM_CHANMAP2 (*SP_RFE_CPLL_RAM_CHANMAP2)
// bitfield: CHANMAP2_FREQ
#define RFE_CPLL_RAM_CHANMAP2_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP2_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP3
// 
#define RFE_CPLL_RAM_CHANMAP3_ADR (RFE_CPLL_RAM_BASE + 0x0E06UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP3 = (unsigned short*) RFE_CPLL_RAM_CHANMAP3_ADR;
#define S_RFE_CPLL_RAM_CHANMAP3 (*SP_RFE_CPLL_RAM_CHANMAP3)
// bitfield: CHANMAP3_FREQ
#define RFE_CPLL_RAM_CHANMAP3_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP3_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP4
// 
#define RFE_CPLL_RAM_CHANMAP4_ADR (RFE_CPLL_RAM_BASE + 0x0E08UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP4 = (unsigned short*) RFE_CPLL_RAM_CHANMAP4_ADR;
#define S_RFE_CPLL_RAM_CHANMAP4 (*SP_RFE_CPLL_RAM_CHANMAP4)
// bitfield: CHANMAP4_FREQ
#define RFE_CPLL_RAM_CHANMAP4_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP4_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP5
// 
#define RFE_CPLL_RAM_CHANMAP5_ADR (RFE_CPLL_RAM_BASE + 0x0E0AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP5 = (unsigned short*) RFE_CPLL_RAM_CHANMAP5_ADR;
#define S_RFE_CPLL_RAM_CHANMAP5 (*SP_RFE_CPLL_RAM_CHANMAP5)
// bitfield: CHANMAP5_FREQ
#define RFE_CPLL_RAM_CHANMAP5_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP5_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP6
// 
#define RFE_CPLL_RAM_CHANMAP6_ADR (RFE_CPLL_RAM_BASE + 0x0E0CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP6 = (unsigned short*) RFE_CPLL_RAM_CHANMAP6_ADR;
#define S_RFE_CPLL_RAM_CHANMAP6 (*SP_RFE_CPLL_RAM_CHANMAP6)
// bitfield: CHANMAP6_FREQ
#define RFE_CPLL_RAM_CHANMAP6_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP6_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP7
// 
#define RFE_CPLL_RAM_CHANMAP7_ADR (RFE_CPLL_RAM_BASE + 0x0E0EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP7 = (unsigned short*) RFE_CPLL_RAM_CHANMAP7_ADR;
#define S_RFE_CPLL_RAM_CHANMAP7 (*SP_RFE_CPLL_RAM_CHANMAP7)
// bitfield: CHANMAP7_FREQ
#define RFE_CPLL_RAM_CHANMAP7_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP7_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP8
// 
#define RFE_CPLL_RAM_CHANMAP8_ADR (RFE_CPLL_RAM_BASE + 0x0E10UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP8 = (unsigned short*) RFE_CPLL_RAM_CHANMAP8_ADR;
#define S_RFE_CPLL_RAM_CHANMAP8 (*SP_RFE_CPLL_RAM_CHANMAP8)
// bitfield: CHANMAP8_FREQ
#define RFE_CPLL_RAM_CHANMAP8_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP8_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP9
// 
#define RFE_CPLL_RAM_CHANMAP9_ADR (RFE_CPLL_RAM_BASE + 0x0E12UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP9 = (unsigned short*) RFE_CPLL_RAM_CHANMAP9_ADR;
#define S_RFE_CPLL_RAM_CHANMAP9 (*SP_RFE_CPLL_RAM_CHANMAP9)
// bitfield: CHANMAP9_FREQ
#define RFE_CPLL_RAM_CHANMAP9_FREQ                            0UL
#define RFE_CPLL_RAM_CHANMAP9_FREQ_BM                         0x0FFFUL
// --------------------------------------------------------------
// CHANMAP10
// 
#define RFE_CPLL_RAM_CHANMAP10_ADR (RFE_CPLL_RAM_BASE + 0x0E14UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP10 = (unsigned short*) RFE_CPLL_RAM_CHANMAP10_ADR;
#define S_RFE_CPLL_RAM_CHANMAP10 (*SP_RFE_CPLL_RAM_CHANMAP10)
// bitfield: CHANMAP10_FREQ
#define RFE_CPLL_RAM_CHANMAP10_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP10_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP11
// 
#define RFE_CPLL_RAM_CHANMAP11_ADR (RFE_CPLL_RAM_BASE + 0x0E16UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP11 = (unsigned short*) RFE_CPLL_RAM_CHANMAP11_ADR;
#define S_RFE_CPLL_RAM_CHANMAP11 (*SP_RFE_CPLL_RAM_CHANMAP11)
// bitfield: CHANMAP11_FREQ
#define RFE_CPLL_RAM_CHANMAP11_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP11_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP12
// 
#define RFE_CPLL_RAM_CHANMAP12_ADR (RFE_CPLL_RAM_BASE + 0x0E18UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP12 = (unsigned short*) RFE_CPLL_RAM_CHANMAP12_ADR;
#define S_RFE_CPLL_RAM_CHANMAP12 (*SP_RFE_CPLL_RAM_CHANMAP12)
// bitfield: CHANMAP12_FREQ
#define RFE_CPLL_RAM_CHANMAP12_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP12_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP13
// 
#define RFE_CPLL_RAM_CHANMAP13_ADR (RFE_CPLL_RAM_BASE + 0x0E1AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP13 = (unsigned short*) RFE_CPLL_RAM_CHANMAP13_ADR;
#define S_RFE_CPLL_RAM_CHANMAP13 (*SP_RFE_CPLL_RAM_CHANMAP13)
// bitfield: CHANMAP13_FREQ
#define RFE_CPLL_RAM_CHANMAP13_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP13_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP14
// 
#define RFE_CPLL_RAM_CHANMAP14_ADR (RFE_CPLL_RAM_BASE + 0x0E1CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP14 = (unsigned short*) RFE_CPLL_RAM_CHANMAP14_ADR;
#define S_RFE_CPLL_RAM_CHANMAP14 (*SP_RFE_CPLL_RAM_CHANMAP14)
// bitfield: CHANMAP14_FREQ
#define RFE_CPLL_RAM_CHANMAP14_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP14_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP15
// 
#define RFE_CPLL_RAM_CHANMAP15_ADR (RFE_CPLL_RAM_BASE + 0x0E1EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP15 = (unsigned short*) RFE_CPLL_RAM_CHANMAP15_ADR;
#define S_RFE_CPLL_RAM_CHANMAP15 (*SP_RFE_CPLL_RAM_CHANMAP15)
// bitfield: CHANMAP15_FREQ
#define RFE_CPLL_RAM_CHANMAP15_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP15_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP16
// 
#define RFE_CPLL_RAM_CHANMAP16_ADR (RFE_CPLL_RAM_BASE + 0x0E20UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP16 = (unsigned short*) RFE_CPLL_RAM_CHANMAP16_ADR;
#define S_RFE_CPLL_RAM_CHANMAP16 (*SP_RFE_CPLL_RAM_CHANMAP16)
// bitfield: CHANMAP16_FREQ
#define RFE_CPLL_RAM_CHANMAP16_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP16_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP17
// 
#define RFE_CPLL_RAM_CHANMAP17_ADR (RFE_CPLL_RAM_BASE + 0x0E22UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP17 = (unsigned short*) RFE_CPLL_RAM_CHANMAP17_ADR;
#define S_RFE_CPLL_RAM_CHANMAP17 (*SP_RFE_CPLL_RAM_CHANMAP17)
// bitfield: CHANMAP17_FREQ
#define RFE_CPLL_RAM_CHANMAP17_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP17_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP18
// 
#define RFE_CPLL_RAM_CHANMAP18_ADR (RFE_CPLL_RAM_BASE + 0x0E24UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP18 = (unsigned short*) RFE_CPLL_RAM_CHANMAP18_ADR;
#define S_RFE_CPLL_RAM_CHANMAP18 (*SP_RFE_CPLL_RAM_CHANMAP18)
// bitfield: CHANMAP18_FREQ
#define RFE_CPLL_RAM_CHANMAP18_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP18_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP19
// 
#define RFE_CPLL_RAM_CHANMAP19_ADR (RFE_CPLL_RAM_BASE + 0x0E26UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP19 = (unsigned short*) RFE_CPLL_RAM_CHANMAP19_ADR;
#define S_RFE_CPLL_RAM_CHANMAP19 (*SP_RFE_CPLL_RAM_CHANMAP19)
// bitfield: CHANMAP19_FREQ
#define RFE_CPLL_RAM_CHANMAP19_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP19_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP20
// 
#define RFE_CPLL_RAM_CHANMAP20_ADR (RFE_CPLL_RAM_BASE + 0x0E28UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP20 = (unsigned short*) RFE_CPLL_RAM_CHANMAP20_ADR;
#define S_RFE_CPLL_RAM_CHANMAP20 (*SP_RFE_CPLL_RAM_CHANMAP20)
// bitfield: CHANMAP20_FREQ
#define RFE_CPLL_RAM_CHANMAP20_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP20_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP21
// 
#define RFE_CPLL_RAM_CHANMAP21_ADR (RFE_CPLL_RAM_BASE + 0x0E2AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP21 = (unsigned short*) RFE_CPLL_RAM_CHANMAP21_ADR;
#define S_RFE_CPLL_RAM_CHANMAP21 (*SP_RFE_CPLL_RAM_CHANMAP21)
// bitfield: CHANMAP21_FREQ
#define RFE_CPLL_RAM_CHANMAP21_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP21_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP22
// 
#define RFE_CPLL_RAM_CHANMAP22_ADR (RFE_CPLL_RAM_BASE + 0x0E2CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP22 = (unsigned short*) RFE_CPLL_RAM_CHANMAP22_ADR;
#define S_RFE_CPLL_RAM_CHANMAP22 (*SP_RFE_CPLL_RAM_CHANMAP22)
// bitfield: CHANMAP22_FREQ
#define RFE_CPLL_RAM_CHANMAP22_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP22_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP23
// 
#define RFE_CPLL_RAM_CHANMAP23_ADR (RFE_CPLL_RAM_BASE + 0x0E2EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP23 = (unsigned short*) RFE_CPLL_RAM_CHANMAP23_ADR;
#define S_RFE_CPLL_RAM_CHANMAP23 (*SP_RFE_CPLL_RAM_CHANMAP23)
// bitfield: CHANMAP23_FREQ
#define RFE_CPLL_RAM_CHANMAP23_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP23_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP25
// 
#define RFE_CPLL_RAM_CHANMAP25_ADR (RFE_CPLL_RAM_BASE + 0x0E30UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP25 = (unsigned short*) RFE_CPLL_RAM_CHANMAP25_ADR;
#define S_RFE_CPLL_RAM_CHANMAP25 (*SP_RFE_CPLL_RAM_CHANMAP25)
// bitfield: CHANMAP25_FREQ
#define RFE_CPLL_RAM_CHANMAP25_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP25_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP26
// 
#define RFE_CPLL_RAM_CHANMAP26_ADR (RFE_CPLL_RAM_BASE + 0x0E32UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP26 = (unsigned short*) RFE_CPLL_RAM_CHANMAP26_ADR;
#define S_RFE_CPLL_RAM_CHANMAP26 (*SP_RFE_CPLL_RAM_CHANMAP26)
// bitfield: CHANMAP26_FREQ
#define RFE_CPLL_RAM_CHANMAP26_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP26_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP27
// 
#define RFE_CPLL_RAM_CHANMAP27_ADR (RFE_CPLL_RAM_BASE + 0x0E34UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP27 = (unsigned short*) RFE_CPLL_RAM_CHANMAP27_ADR;
#define S_RFE_CPLL_RAM_CHANMAP27 (*SP_RFE_CPLL_RAM_CHANMAP27)
// bitfield: CHANMAP27_FREQ
#define RFE_CPLL_RAM_CHANMAP27_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP27_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP28
// 
#define RFE_CPLL_RAM_CHANMAP28_ADR (RFE_CPLL_RAM_BASE + 0x0E36UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP28 = (unsigned short*) RFE_CPLL_RAM_CHANMAP28_ADR;
#define S_RFE_CPLL_RAM_CHANMAP28 (*SP_RFE_CPLL_RAM_CHANMAP28)
// bitfield: CHANMAP28_FREQ
#define RFE_CPLL_RAM_CHANMAP28_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP28_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP29
// 
#define RFE_CPLL_RAM_CHANMAP29_ADR (RFE_CPLL_RAM_BASE + 0x0E38UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP29 = (unsigned short*) RFE_CPLL_RAM_CHANMAP29_ADR;
#define S_RFE_CPLL_RAM_CHANMAP29 (*SP_RFE_CPLL_RAM_CHANMAP29)
// bitfield: CHANMAP29_FREQ
#define RFE_CPLL_RAM_CHANMAP29_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP29_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP30
// 
#define RFE_CPLL_RAM_CHANMAP30_ADR (RFE_CPLL_RAM_BASE + 0x0E3AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP30 = (unsigned short*) RFE_CPLL_RAM_CHANMAP30_ADR;
#define S_RFE_CPLL_RAM_CHANMAP30 (*SP_RFE_CPLL_RAM_CHANMAP30)
// bitfield: CHANMAP30_FREQ
#define RFE_CPLL_RAM_CHANMAP30_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP30_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP31
// 
#define RFE_CPLL_RAM_CHANMAP31_ADR (RFE_CPLL_RAM_BASE + 0x0E3CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP31 = (unsigned short*) RFE_CPLL_RAM_CHANMAP31_ADR;
#define S_RFE_CPLL_RAM_CHANMAP31 (*SP_RFE_CPLL_RAM_CHANMAP31)
// bitfield: CHANMAP31_FREQ
#define RFE_CPLL_RAM_CHANMAP31_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP31_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP32
// 
#define RFE_CPLL_RAM_CHANMAP32_ADR (RFE_CPLL_RAM_BASE + 0x0E3EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP32 = (unsigned short*) RFE_CPLL_RAM_CHANMAP32_ADR;
#define S_RFE_CPLL_RAM_CHANMAP32 (*SP_RFE_CPLL_RAM_CHANMAP32)
// bitfield: CHANMAP32_FREQ
#define RFE_CPLL_RAM_CHANMAP32_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP32_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP33
// 
#define RFE_CPLL_RAM_CHANMAP33_ADR (RFE_CPLL_RAM_BASE + 0x0E40UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP33 = (unsigned short*) RFE_CPLL_RAM_CHANMAP33_ADR;
#define S_RFE_CPLL_RAM_CHANMAP33 (*SP_RFE_CPLL_RAM_CHANMAP33)
// bitfield: CHANMAP33_FREQ
#define RFE_CPLL_RAM_CHANMAP33_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP33_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP34
// 
#define RFE_CPLL_RAM_CHANMAP34_ADR (RFE_CPLL_RAM_BASE + 0x0E42UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP34 = (unsigned short*) RFE_CPLL_RAM_CHANMAP34_ADR;
#define S_RFE_CPLL_RAM_CHANMAP34 (*SP_RFE_CPLL_RAM_CHANMAP34)
// bitfield: CHANMAP34_FREQ
#define RFE_CPLL_RAM_CHANMAP34_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP34_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP35
// 
#define RFE_CPLL_RAM_CHANMAP35_ADR (RFE_CPLL_RAM_BASE + 0x0E44UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP35 = (unsigned short*) RFE_CPLL_RAM_CHANMAP35_ADR;
#define S_RFE_CPLL_RAM_CHANMAP35 (*SP_RFE_CPLL_RAM_CHANMAP35)
// bitfield: CHANMAP35_FREQ
#define RFE_CPLL_RAM_CHANMAP35_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP35_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP36
// 
#define RFE_CPLL_RAM_CHANMAP36_ADR (RFE_CPLL_RAM_BASE + 0x0E46UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP36 = (unsigned short*) RFE_CPLL_RAM_CHANMAP36_ADR;
#define S_RFE_CPLL_RAM_CHANMAP36 (*SP_RFE_CPLL_RAM_CHANMAP36)
// bitfield: CHANMAP36_FREQ
#define RFE_CPLL_RAM_CHANMAP36_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP36_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP37
// 
#define RFE_CPLL_RAM_CHANMAP37_ADR (RFE_CPLL_RAM_BASE + 0x0E48UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP37 = (unsigned short*) RFE_CPLL_RAM_CHANMAP37_ADR;
#define S_RFE_CPLL_RAM_CHANMAP37 (*SP_RFE_CPLL_RAM_CHANMAP37)
// bitfield: CHANMAP37_FREQ
#define RFE_CPLL_RAM_CHANMAP37_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP37_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP38
// 
#define RFE_CPLL_RAM_CHANMAP38_ADR (RFE_CPLL_RAM_BASE + 0x0E4AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP38 = (unsigned short*) RFE_CPLL_RAM_CHANMAP38_ADR;
#define S_RFE_CPLL_RAM_CHANMAP38 (*SP_RFE_CPLL_RAM_CHANMAP38)
// bitfield: CHANMAP38_FREQ
#define RFE_CPLL_RAM_CHANMAP38_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP38_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP39
// 
#define RFE_CPLL_RAM_CHANMAP39_ADR (RFE_CPLL_RAM_BASE + 0x0E4CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP39 = (unsigned short*) RFE_CPLL_RAM_CHANMAP39_ADR;
#define S_RFE_CPLL_RAM_CHANMAP39 (*SP_RFE_CPLL_RAM_CHANMAP39)
// bitfield: CHANMAP39_FREQ
#define RFE_CPLL_RAM_CHANMAP39_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP39_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP40
// 
#define RFE_CPLL_RAM_CHANMAP40_ADR (RFE_CPLL_RAM_BASE + 0x0E4EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP40 = (unsigned short*) RFE_CPLL_RAM_CHANMAP40_ADR;
#define S_RFE_CPLL_RAM_CHANMAP40 (*SP_RFE_CPLL_RAM_CHANMAP40)
// bitfield: CHANMAP40_FREQ
#define RFE_CPLL_RAM_CHANMAP40_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP40_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP41
// 
#define RFE_CPLL_RAM_CHANMAP41_ADR (RFE_CPLL_RAM_BASE + 0x0E50UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP41 = (unsigned short*) RFE_CPLL_RAM_CHANMAP41_ADR;
#define S_RFE_CPLL_RAM_CHANMAP41 (*SP_RFE_CPLL_RAM_CHANMAP41)
// bitfield: CHANMAP41_FREQ
#define RFE_CPLL_RAM_CHANMAP41_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP41_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP42
// 
#define RFE_CPLL_RAM_CHANMAP42_ADR (RFE_CPLL_RAM_BASE + 0x0E52UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP42 = (unsigned short*) RFE_CPLL_RAM_CHANMAP42_ADR;
#define S_RFE_CPLL_RAM_CHANMAP42 (*SP_RFE_CPLL_RAM_CHANMAP42)
// bitfield: CHANMAP42_FREQ
#define RFE_CPLL_RAM_CHANMAP42_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP42_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP43
// 
#define RFE_CPLL_RAM_CHANMAP43_ADR (RFE_CPLL_RAM_BASE + 0x0E54UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP43 = (unsigned short*) RFE_CPLL_RAM_CHANMAP43_ADR;
#define S_RFE_CPLL_RAM_CHANMAP43 (*SP_RFE_CPLL_RAM_CHANMAP43)
// bitfield: CHANMAP43_FREQ
#define RFE_CPLL_RAM_CHANMAP43_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP43_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP44
// 
#define RFE_CPLL_RAM_CHANMAP44_ADR (RFE_CPLL_RAM_BASE + 0x0E56UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP44 = (unsigned short*) RFE_CPLL_RAM_CHANMAP44_ADR;
#define S_RFE_CPLL_RAM_CHANMAP44 (*SP_RFE_CPLL_RAM_CHANMAP44)
// bitfield: CHANMAP44_FREQ
#define RFE_CPLL_RAM_CHANMAP44_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP44_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP45
// 
#define RFE_CPLL_RAM_CHANMAP45_ADR (RFE_CPLL_RAM_BASE + 0x0E58UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP45 = (unsigned short*) RFE_CPLL_RAM_CHANMAP45_ADR;
#define S_RFE_CPLL_RAM_CHANMAP45 (*SP_RFE_CPLL_RAM_CHANMAP45)
// bitfield: CHANMAP45_FREQ
#define RFE_CPLL_RAM_CHANMAP45_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP45_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP46
// 
#define RFE_CPLL_RAM_CHANMAP46_ADR (RFE_CPLL_RAM_BASE + 0x0E5AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP46 = (unsigned short*) RFE_CPLL_RAM_CHANMAP46_ADR;
#define S_RFE_CPLL_RAM_CHANMAP46 (*SP_RFE_CPLL_RAM_CHANMAP46)
// bitfield: CHANMAP46_FREQ
#define RFE_CPLL_RAM_CHANMAP46_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP46_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP47
// 
#define RFE_CPLL_RAM_CHANMAP47_ADR (RFE_CPLL_RAM_BASE + 0x0E5CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP47 = (unsigned short*) RFE_CPLL_RAM_CHANMAP47_ADR;
#define S_RFE_CPLL_RAM_CHANMAP47 (*SP_RFE_CPLL_RAM_CHANMAP47)
// bitfield: CHANMAP47_FREQ
#define RFE_CPLL_RAM_CHANMAP47_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP47_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP48
// 
#define RFE_CPLL_RAM_CHANMAP48_ADR (RFE_CPLL_RAM_BASE + 0x0E5EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP48 = (unsigned short*) RFE_CPLL_RAM_CHANMAP48_ADR;
#define S_RFE_CPLL_RAM_CHANMAP48 (*SP_RFE_CPLL_RAM_CHANMAP48)
// bitfield: CHANMAP48_FREQ
#define RFE_CPLL_RAM_CHANMAP48_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP48_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP49
// 
#define RFE_CPLL_RAM_CHANMAP49_ADR (RFE_CPLL_RAM_BASE + 0x0E60UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP49 = (unsigned short*) RFE_CPLL_RAM_CHANMAP49_ADR;
#define S_RFE_CPLL_RAM_CHANMAP49 (*SP_RFE_CPLL_RAM_CHANMAP49)
// bitfield: CHANMAP49_FREQ
#define RFE_CPLL_RAM_CHANMAP49_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP49_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP50
// 
#define RFE_CPLL_RAM_CHANMAP50_ADR (RFE_CPLL_RAM_BASE + 0x0E62UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP50 = (unsigned short*) RFE_CPLL_RAM_CHANMAP50_ADR;
#define S_RFE_CPLL_RAM_CHANMAP50 (*SP_RFE_CPLL_RAM_CHANMAP50)
// bitfield: CHANMAP50_FREQ
#define RFE_CPLL_RAM_CHANMAP50_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP50_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP51
// 
#define RFE_CPLL_RAM_CHANMAP51_ADR (RFE_CPLL_RAM_BASE + 0x0E64UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP51 = (unsigned short*) RFE_CPLL_RAM_CHANMAP51_ADR;
#define S_RFE_CPLL_RAM_CHANMAP51 (*SP_RFE_CPLL_RAM_CHANMAP51)
// bitfield: CHANMAP51_FREQ
#define RFE_CPLL_RAM_CHANMAP51_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP51_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP52
// 
#define RFE_CPLL_RAM_CHANMAP52_ADR (RFE_CPLL_RAM_BASE + 0x0E66UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP52 = (unsigned short*) RFE_CPLL_RAM_CHANMAP52_ADR;
#define S_RFE_CPLL_RAM_CHANMAP52 (*SP_RFE_CPLL_RAM_CHANMAP52)
// bitfield: CHANMAP52_FREQ
#define RFE_CPLL_RAM_CHANMAP52_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP52_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP53
// 
#define RFE_CPLL_RAM_CHANMAP53_ADR (RFE_CPLL_RAM_BASE + 0x0E68UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP53 = (unsigned short*) RFE_CPLL_RAM_CHANMAP53_ADR;
#define S_RFE_CPLL_RAM_CHANMAP53 (*SP_RFE_CPLL_RAM_CHANMAP53)
// bitfield: CHANMAP53_FREQ
#define RFE_CPLL_RAM_CHANMAP53_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP53_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP54
// 
#define RFE_CPLL_RAM_CHANMAP54_ADR (RFE_CPLL_RAM_BASE + 0x0E6AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP54 = (unsigned short*) RFE_CPLL_RAM_CHANMAP54_ADR;
#define S_RFE_CPLL_RAM_CHANMAP54 (*SP_RFE_CPLL_RAM_CHANMAP54)
// bitfield: CHANMAP54_FREQ
#define RFE_CPLL_RAM_CHANMAP54_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP54_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP55
// 
#define RFE_CPLL_RAM_CHANMAP55_ADR (RFE_CPLL_RAM_BASE + 0x0E6CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP55 = (unsigned short*) RFE_CPLL_RAM_CHANMAP55_ADR;
#define S_RFE_CPLL_RAM_CHANMAP55 (*SP_RFE_CPLL_RAM_CHANMAP55)
// bitfield: CHANMAP55_FREQ
#define RFE_CPLL_RAM_CHANMAP55_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP55_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP56
// 
#define RFE_CPLL_RAM_CHANMAP56_ADR (RFE_CPLL_RAM_BASE + 0x0E6EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP56 = (unsigned short*) RFE_CPLL_RAM_CHANMAP56_ADR;
#define S_RFE_CPLL_RAM_CHANMAP56 (*SP_RFE_CPLL_RAM_CHANMAP56)
// bitfield: CHANMAP56_FREQ
#define RFE_CPLL_RAM_CHANMAP56_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP56_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP57
// 
#define RFE_CPLL_RAM_CHANMAP57_ADR (RFE_CPLL_RAM_BASE + 0x0E70UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP57 = (unsigned short*) RFE_CPLL_RAM_CHANMAP57_ADR;
#define S_RFE_CPLL_RAM_CHANMAP57 (*SP_RFE_CPLL_RAM_CHANMAP57)
// bitfield: CHANMAP57_FREQ
#define RFE_CPLL_RAM_CHANMAP57_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP57_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP58
// 
#define RFE_CPLL_RAM_CHANMAP58_ADR (RFE_CPLL_RAM_BASE + 0x0E72UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP58 = (unsigned short*) RFE_CPLL_RAM_CHANMAP58_ADR;
#define S_RFE_CPLL_RAM_CHANMAP58 (*SP_RFE_CPLL_RAM_CHANMAP58)
// bitfield: CHANMAP58_FREQ
#define RFE_CPLL_RAM_CHANMAP58_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP58_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP59
// 
#define RFE_CPLL_RAM_CHANMAP59_ADR (RFE_CPLL_RAM_BASE + 0x0E74UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP59 = (unsigned short*) RFE_CPLL_RAM_CHANMAP59_ADR;
#define S_RFE_CPLL_RAM_CHANMAP59 (*SP_RFE_CPLL_RAM_CHANMAP59)
// bitfield: CHANMAP59_FREQ
#define RFE_CPLL_RAM_CHANMAP59_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP59_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP60
// 
#define RFE_CPLL_RAM_CHANMAP60_ADR (RFE_CPLL_RAM_BASE + 0x0E76UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP60 = (unsigned short*) RFE_CPLL_RAM_CHANMAP60_ADR;
#define S_RFE_CPLL_RAM_CHANMAP60 (*SP_RFE_CPLL_RAM_CHANMAP60)
// bitfield: CHANMAP60_FREQ
#define RFE_CPLL_RAM_CHANMAP60_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP60_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP61
// 
#define RFE_CPLL_RAM_CHANMAP61_ADR (RFE_CPLL_RAM_BASE + 0x0E78UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP61 = (unsigned short*) RFE_CPLL_RAM_CHANMAP61_ADR;
#define S_RFE_CPLL_RAM_CHANMAP61 (*SP_RFE_CPLL_RAM_CHANMAP61)
// bitfield: CHANMAP61_FREQ
#define RFE_CPLL_RAM_CHANMAP61_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP61_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP62
// 
#define RFE_CPLL_RAM_CHANMAP62_ADR (RFE_CPLL_RAM_BASE + 0x0E7AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP62 = (unsigned short*) RFE_CPLL_RAM_CHANMAP62_ADR;
#define S_RFE_CPLL_RAM_CHANMAP62 (*SP_RFE_CPLL_RAM_CHANMAP62)
// bitfield: CHANMAP62_FREQ
#define RFE_CPLL_RAM_CHANMAP62_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP62_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP63
// 
#define RFE_CPLL_RAM_CHANMAP63_ADR (RFE_CPLL_RAM_BASE + 0x0E7CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP63 = (unsigned short*) RFE_CPLL_RAM_CHANMAP63_ADR;
#define S_RFE_CPLL_RAM_CHANMAP63 (*SP_RFE_CPLL_RAM_CHANMAP63)
// bitfield: CHANMAP63_FREQ
#define RFE_CPLL_RAM_CHANMAP63_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP63_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP65
// 
#define RFE_CPLL_RAM_CHANMAP65_ADR (RFE_CPLL_RAM_BASE + 0x0E7EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP65 = (unsigned short*) RFE_CPLL_RAM_CHANMAP65_ADR;
#define S_RFE_CPLL_RAM_CHANMAP65 (*SP_RFE_CPLL_RAM_CHANMAP65)
// bitfield: CHANMAP65_FREQ
#define RFE_CPLL_RAM_CHANMAP65_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP65_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP66
// 
#define RFE_CPLL_RAM_CHANMAP66_ADR (RFE_CPLL_RAM_BASE + 0x0E80UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP66 = (unsigned short*) RFE_CPLL_RAM_CHANMAP66_ADR;
#define S_RFE_CPLL_RAM_CHANMAP66 (*SP_RFE_CPLL_RAM_CHANMAP66)
// bitfield: CHANMAP66_FREQ
#define RFE_CPLL_RAM_CHANMAP66_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP66_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP67
// 
#define RFE_CPLL_RAM_CHANMAP67_ADR (RFE_CPLL_RAM_BASE + 0x0E82UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP67 = (unsigned short*) RFE_CPLL_RAM_CHANMAP67_ADR;
#define S_RFE_CPLL_RAM_CHANMAP67 (*SP_RFE_CPLL_RAM_CHANMAP67)
// bitfield: CHANMAP67_FREQ
#define RFE_CPLL_RAM_CHANMAP67_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP67_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP68
// 
#define RFE_CPLL_RAM_CHANMAP68_ADR (RFE_CPLL_RAM_BASE + 0x0E84UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP68 = (unsigned short*) RFE_CPLL_RAM_CHANMAP68_ADR;
#define S_RFE_CPLL_RAM_CHANMAP68 (*SP_RFE_CPLL_RAM_CHANMAP68)
// bitfield: CHANMAP68_FREQ
#define RFE_CPLL_RAM_CHANMAP68_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP68_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP69
// 
#define RFE_CPLL_RAM_CHANMAP69_ADR (RFE_CPLL_RAM_BASE + 0x0E86UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP69 = (unsigned short*) RFE_CPLL_RAM_CHANMAP69_ADR;
#define S_RFE_CPLL_RAM_CHANMAP69 (*SP_RFE_CPLL_RAM_CHANMAP69)
// bitfield: CHANMAP69_FREQ
#define RFE_CPLL_RAM_CHANMAP69_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP69_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP70
// 
#define RFE_CPLL_RAM_CHANMAP70_ADR (RFE_CPLL_RAM_BASE + 0x0E88UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP70 = (unsigned short*) RFE_CPLL_RAM_CHANMAP70_ADR;
#define S_RFE_CPLL_RAM_CHANMAP70 (*SP_RFE_CPLL_RAM_CHANMAP70)
// bitfield: CHANMAP70_FREQ
#define RFE_CPLL_RAM_CHANMAP70_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP70_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP71
// 
#define RFE_CPLL_RAM_CHANMAP71_ADR (RFE_CPLL_RAM_BASE + 0x0E8AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP71 = (unsigned short*) RFE_CPLL_RAM_CHANMAP71_ADR;
#define S_RFE_CPLL_RAM_CHANMAP71 (*SP_RFE_CPLL_RAM_CHANMAP71)
// bitfield: CHANMAP71_FREQ
#define RFE_CPLL_RAM_CHANMAP71_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP71_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP72
// 
#define RFE_CPLL_RAM_CHANMAP72_ADR (RFE_CPLL_RAM_BASE + 0x0E8CUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP72 = (unsigned short*) RFE_CPLL_RAM_CHANMAP72_ADR;
#define S_RFE_CPLL_RAM_CHANMAP72 (*SP_RFE_CPLL_RAM_CHANMAP72)
// bitfield: CHANMAP72_FREQ
#define RFE_CPLL_RAM_CHANMAP72_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP72_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP73
// 
#define RFE_CPLL_RAM_CHANMAP73_ADR (RFE_CPLL_RAM_BASE + 0x0E8EUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP73 = (unsigned short*) RFE_CPLL_RAM_CHANMAP73_ADR;
#define S_RFE_CPLL_RAM_CHANMAP73 (*SP_RFE_CPLL_RAM_CHANMAP73)
// bitfield: CHANMAP73_FREQ
#define RFE_CPLL_RAM_CHANMAP73_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP73_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP74
// 
#define RFE_CPLL_RAM_CHANMAP74_ADR (RFE_CPLL_RAM_BASE + 0x0E90UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP74 = (unsigned short*) RFE_CPLL_RAM_CHANMAP74_ADR;
#define S_RFE_CPLL_RAM_CHANMAP74 (*SP_RFE_CPLL_RAM_CHANMAP74)
// bitfield: CHANMAP74_FREQ
#define RFE_CPLL_RAM_CHANMAP74_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP74_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP75
// 
#define RFE_CPLL_RAM_CHANMAP75_ADR (RFE_CPLL_RAM_BASE + 0x0E92UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP75 = (unsigned short*) RFE_CPLL_RAM_CHANMAP75_ADR;
#define S_RFE_CPLL_RAM_CHANMAP75 (*SP_RFE_CPLL_RAM_CHANMAP75)
// bitfield: CHANMAP75_FREQ
#define RFE_CPLL_RAM_CHANMAP75_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP75_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP76
// 
#define RFE_CPLL_RAM_CHANMAP76_ADR (RFE_CPLL_RAM_BASE + 0x0E94UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP76 = (unsigned short*) RFE_CPLL_RAM_CHANMAP76_ADR;
#define S_RFE_CPLL_RAM_CHANMAP76 (*SP_RFE_CPLL_RAM_CHANMAP76)
// bitfield: CHANMAP76_FREQ
#define RFE_CPLL_RAM_CHANMAP76_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP76_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP77
// 
#define RFE_CPLL_RAM_CHANMAP77_ADR (RFE_CPLL_RAM_BASE + 0x0E96UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP77 = (unsigned short*) RFE_CPLL_RAM_CHANMAP77_ADR;
#define S_RFE_CPLL_RAM_CHANMAP77 (*SP_RFE_CPLL_RAM_CHANMAP77)
// bitfield: CHANMAP77_FREQ
#define RFE_CPLL_RAM_CHANMAP77_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP77_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP78
// 
#define RFE_CPLL_RAM_CHANMAP78_ADR (RFE_CPLL_RAM_BASE + 0x0E98UL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP78 = (unsigned short*) RFE_CPLL_RAM_CHANMAP78_ADR;
#define S_RFE_CPLL_RAM_CHANMAP78 (*SP_RFE_CPLL_RAM_CHANMAP78)
// bitfield: CHANMAP78_FREQ
#define RFE_CPLL_RAM_CHANMAP78_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP78_FREQ_BM                        0x0FFFUL
// --------------------------------------------------------------
// CHANMAP79
// 
#define RFE_CPLL_RAM_CHANMAP79_ADR (RFE_CPLL_RAM_BASE + 0x0E9AUL)
static volatile unsigned short* const SP_RFE_CPLL_RAM_CHANMAP79 = (unsigned short*) RFE_CPLL_RAM_CHANMAP79_ADR;
#define S_RFE_CPLL_RAM_CHANMAP79 (*SP_RFE_CPLL_RAM_CHANMAP79)
// bitfield: CHANMAP79_FREQ
#define RFE_CPLL_RAM_CHANMAP79_FREQ                           0UL
#define RFE_CPLL_RAM_CHANMAP79_FREQ_BM                        0x0FFFUL

#endif
