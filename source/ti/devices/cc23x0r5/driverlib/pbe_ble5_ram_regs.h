// ===========================================================================
// This file is autogenerated, please DO NOT modify!
//
// Generated on  2023-04-18 13:27:20
// by user:      developer
// on machine:   swtools
// CWD:          /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tc/octopus/regs/inc
// Commandline:  /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble5/doc/ram_registers.txt
// C&P friendly: /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl -target c -base 0x40092000 -dat_sz 16 -sub 128 -ramreg -i /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble5/doc/ram_registers.txt
//
// Relevant file version(s):
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/tools/topsm/topsmregs.pl
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 0d11a0ea4ba55ba3ef648be18aeec231d5314753
//
// /home/developer/.conan/data/loki-lrf/7.11.00.18/library-lprf/eng/build/7c92806c54e4cfdd9df8e8c53e37468130adda90/pbe/ble5/doc/ram_registers.txt
//   rcs-info: (file not managed or unknown revision control system)
//   git-hash: 8b259f632b0d19f7c59e143c72ac985aea29e213
//
// ===========================================================================


#ifndef __PBE_BLE5_RAM_REGS_H
#define __PBE_BLE5_RAM_REGS_H

#define PBE_BLE5_RAM_BASE 0x40092000UL
// --------------------------------------------------------------
// PHY
// 
#define PBE_BLE5_RAM_PHY_ADR (PBE_BLE5_RAM_BASE + 0x0020UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PHY = (unsigned short*) PBE_BLE5_RAM_PHY_ADR;
#define S_PBE_BLE5_RAM_PHY (*SP_PBE_BLE5_RAM_PHY)
// bitfield: PHY_SEL
#define PBE_BLE5_RAM_PHY_SEL                                  0UL
#define PBE_BLE5_RAM_PHY_SEL_BM                               0x0003UL
// enums for bitfield PHY_SEL (width: 2)UL
#define PBE_BLE5_RAM_PHY_SEL_1M                               0x0UL
#define PBE_BLE5_RAM_PHY_SEL_2M                               0x1UL
#define PBE_BLE5_RAM_PHY_SEL_CODED_125K                       0x2UL
#define PBE_BLE5_RAM_PHY_SEL_CODED_500K                       0x3UL
// --------------------------------------------------------------
// PRETXIFS500K
// 
#define PBE_BLE5_RAM_PRETXIFS500K_ADR (PBE_BLE5_RAM_BASE + 0x0022UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PRETXIFS500K = (unsigned short*) PBE_BLE5_RAM_PRETXIFS500K_ADR;
#define S_PBE_BLE5_RAM_PRETXIFS500K (*SP_PBE_BLE5_RAM_PRETXIFS500K)
// bitfield: PRETXIFS500K_VAL
#define PBE_BLE5_RAM_PRETXIFS500K_VAL                         0UL
#define PBE_BLE5_RAM_PRETXIFS500K_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// PRETXIFS
// 
#define PBE_BLE5_RAM_PRETXIFS_ADR (PBE_BLE5_RAM_BASE + 0x0024UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PRETXIFS = (unsigned short*) PBE_BLE5_RAM_PRETXIFS_ADR;
#define S_PBE_BLE5_RAM_PRETXIFS (*SP_PBE_BLE5_RAM_PRETXIFS)
// bitfield: PRETXIFS_VAL
#define PBE_BLE5_RAM_PRETXIFS_VAL                             0UL
#define PBE_BLE5_RAM_PRETXIFS_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// PRERXIFS
// 
#define PBE_BLE5_RAM_PRERXIFS_ADR (PBE_BLE5_RAM_BASE + 0x0026UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PRERXIFS = (unsigned short*) PBE_BLE5_RAM_PRERXIFS_ADR;
#define S_PBE_BLE5_RAM_PRERXIFS (*SP_PBE_BLE5_RAM_PRERXIFS)
// bitfield: PRERXIFS_VAL
#define PBE_BLE5_RAM_PRERXIFS_VAL                             0UL
#define PBE_BLE5_RAM_PRERXIFS_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// RXTIMEOUT
// 
#define PBE_BLE5_RAM_RXTIMEOUT_ADR (PBE_BLE5_RAM_BASE + 0x0028UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_RXTIMEOUT = (unsigned short*) PBE_BLE5_RAM_RXTIMEOUT_ADR;
#define S_PBE_BLE5_RAM_RXTIMEOUT (*SP_PBE_BLE5_RAM_RXTIMEOUT)
// bitfield: RXTIMEOUT_VAL
#define PBE_BLE5_RAM_RXTIMEOUT_VAL                            0UL
#define PBE_BLE5_RAM_RXTIMEOUT_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// SYNTHCALTIMEOUT
// 
#define PBE_BLE5_RAM_SYNTHCALTIMEOUT_ADR (PBE_BLE5_RAM_BASE + 0x002AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_SYNTHCALTIMEOUT = (unsigned short*) PBE_BLE5_RAM_SYNTHCALTIMEOUT_ADR;
#define S_PBE_BLE5_RAM_SYNTHCALTIMEOUT (*SP_PBE_BLE5_RAM_SYNTHCALTIMEOUT)
// bitfield: SYNTHCALTIMEOUT_VAL
#define PBE_BLE5_RAM_SYNTHCALTIMEOUT_VAL                      0UL
#define PBE_BLE5_RAM_SYNTHCALTIMEOUT_VAL_BM                   0xFFFFUL
// --------------------------------------------------------------
// RECALTIMEOUT
// 
#define PBE_BLE5_RAM_RECALTIMEOUT_ADR (PBE_BLE5_RAM_BASE + 0x002CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_RECALTIMEOUT = (unsigned short*) PBE_BLE5_RAM_RECALTIMEOUT_ADR;
#define S_PBE_BLE5_RAM_RECALTIMEOUT (*SP_PBE_BLE5_RAM_RECALTIMEOUT)
// bitfield: RECALTIMEOUT_VAL
#define PBE_BLE5_RAM_RECALTIMEOUT_VAL                         0UL
#define PBE_BLE5_RAM_RECALTIMEOUT_VAL_BM                      0xFFFFUL
// --------------------------------------------------------------
// RPAMODE
// 
#define PBE_BLE5_RAM_RPAMODE_ADR (PBE_BLE5_RAM_BASE + 0x002EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_RPAMODE = (unsigned short*) PBE_BLE5_RAM_RPAMODE_ADR;
#define S_PBE_BLE5_RAM_RPAMODE (*SP_PBE_BLE5_RAM_RPAMODE)
// bitfield: RPAMODE_OWNADR
#define PBE_BLE5_RAM_RPAMODE_OWNADR                           3UL
#define PBE_BLE5_RAM_RPAMODE_OWNADR_BM                        0x0008UL
// bitfield: RPAMODE_PEERADR
#define PBE_BLE5_RAM_RPAMODE_PEERADR                          2UL
#define PBE_BLE5_RAM_RPAMODE_PEERADR_BM                       0x0004UL
// --------------------------------------------------------------
// RPACONNECT
// 
#define PBE_BLE5_RAM_RPACONNECT_ADR (PBE_BLE5_RAM_BASE + 0x0030UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_RPACONNECT = (unsigned short*) PBE_BLE5_RAM_RPACONNECT_ADR;
#define S_PBE_BLE5_RAM_RPACONNECT (*SP_PBE_BLE5_RAM_RPACONNECT)
// bitfield: RPACONNECT_ENDADV
#define PBE_BLE5_RAM_RPACONNECT_ENDADV                        0UL
#define PBE_BLE5_RAM_RPACONNECT_ENDADV_BM                     0x0001UL
// --------------------------------------------------------------
// FIFOCFG
// 
#define PBE_BLE5_RAM_FIFOCFG_ADR (PBE_BLE5_RAM_BASE + 0x0032UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FIFOCFG = (unsigned short*) PBE_BLE5_RAM_FIFOCFG_ADR;
#define S_PBE_BLE5_RAM_FIFOCFG (*SP_PBE_BLE5_RAM_FIFOCFG)
// bitfield: FIFOCFG_APPENDTIMESTAMP
#define PBE_BLE5_RAM_FIFOCFG_APPENDTIMESTAMP                  8UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDTIMESTAMP_BM               0x0100UL
// enums for bitfield FIFOCFG_APPENDTIMESTAMP (width: 1)UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDTIMESTAMP_DIS              0x0UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDTIMESTAMP_ENA              0x1UL
// bitfield: FIFOCFG_APPENDRSSI
#define PBE_BLE5_RAM_FIFOCFG_APPENDRSSI                       7UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDRSSI_BM                    0x0080UL
// bitfield: FIFOCFG_APPENDFREQEST
#define PBE_BLE5_RAM_FIFOCFG_APPENDFREQEST                    6UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDFREQEST_BM                 0x0040UL
// bitfield: FIFOCFG_APPENDLQI
#define PBE_BLE5_RAM_FIFOCFG_APPENDLQI                        5UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDLQI_BM                     0x0020UL
// bitfield: FIFOCFG_APPENDSTATUS
#define PBE_BLE5_RAM_FIFOCFG_APPENDSTATUS                     4UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDSTATUS_BM                  0x0010UL
// bitfield: FIFOCFG_APPENDCRC
#define PBE_BLE5_RAM_FIFOCFG_APPENDCRC                        3UL
#define PBE_BLE5_RAM_FIFOCFG_APPENDCRC_BM                     0x0008UL
// bitfield: FIFOCFG_AUTOFLUSHEMPTY
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHEMPTY                   2UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHEMPTY_BM                0x0004UL
// enums for bitfield FIFOCFG_AUTOFLUSHEMPTY (width: 1)UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHEMPTY_KEEP              0x0UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHEMPTY_FLUSH             0x1UL
// bitfield: FIFOCFG_AUTOFLUSHIGN
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHIGN                     1UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHIGN_BM                  0x0002UL
// enums for bitfield FIFOCFG_AUTOFLUSHIGN (width: 1)UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHIGN_KEEP                0x0UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHIGN_FLUSH               0x1UL
// bitfield: FIFOCFG_AUTOFLUSHCRC
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHCRC                     0UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHCRC_BM                  0x0001UL
// enums for bitfield FIFOCFG_AUTOFLUSHCRC (width: 1)UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHCRC_KEEP                0x0UL
#define PBE_BLE5_RAM_FIFOCFG_AUTOFLUSHCRC_FLUSH               0x1UL
// --------------------------------------------------------------
// STATUSBYTE
// 
#define PBE_BLE5_RAM_STATUSBYTE_ADR (PBE_BLE5_RAM_BASE + 0x0034UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_STATUSBYTE = (unsigned short*) PBE_BLE5_RAM_STATUSBYTE_ADR;
#define S_PBE_BLE5_RAM_STATUSBYTE (*SP_PBE_BLE5_RAM_STATUSBYTE)
// bitfield: STATUSBYTE_RESERVED
#define PBE_BLE5_RAM_STATUSBYTE_RESERVED                      5UL
#define PBE_BLE5_RAM_STATUSBYTE_RESERVED_BM                   0xFFE0UL
// bitfield: STATUSBYTE_RPAIGNORED
#define PBE_BLE5_RAM_STATUSBYTE_RPAIGNORED                    4UL
#define PBE_BLE5_RAM_STATUSBYTE_RPAIGNORED_BM                 0x0010UL
// bitfield: STATUSBYTE_IGNORED
#define PBE_BLE5_RAM_STATUSBYTE_IGNORED                       3UL
#define PBE_BLE5_RAM_STATUSBYTE_IGNORED_BM                    0x0008UL
// bitfield: STATUSBYTE_CRCERROR
#define PBE_BLE5_RAM_STATUSBYTE_CRCERROR                      2UL
#define PBE_BLE5_RAM_STATUSBYTE_CRCERROR_BM                   0x0004UL
// bitfield: STATUSBYTE_PHY
#define PBE_BLE5_RAM_STATUSBYTE_PHY                           0UL
#define PBE_BLE5_RAM_STATUSBYTE_PHY_BM                        0x0003UL
// enums for bitfield STATUSBYTE_PHY (width: 2)UL
#define PBE_BLE5_RAM_STATUSBYTE_PHY_1M                        0x0UL
#define PBE_BLE5_RAM_STATUSBYTE_PHY_2M                        0x1UL
#define PBE_BLE5_RAM_STATUSBYTE_PHY_CODED_125K                0x2UL
#define PBE_BLE5_RAM_STATUSBYTE_PHY_CODED_500K                0x3UL
// --------------------------------------------------------------
// NAKHUB
// 
#define PBE_BLE5_RAM_NAKHUB_ADR (PBE_BLE5_RAM_BASE + 0x0036UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NAKHUB = (unsigned short*) PBE_BLE5_RAM_NAKHUB_ADR;
#define S_PBE_BLE5_RAM_NAKHUB (*SP_PBE_BLE5_RAM_NAKHUB)
// bitfield: NAKHUB_NRNAKS
#define PBE_BLE5_RAM_NAKHUB_NRNAKS                            3UL
#define PBE_BLE5_RAM_NAKHUB_NRNAKS_BM                         0x0038UL
// bitfield: NAKHUB_MAXNAK
#define PBE_BLE5_RAM_NAKHUB_MAXNAK                            0UL
#define PBE_BLE5_RAM_NAKHUB_MAXNAK_BM                         0x0007UL
// --------------------------------------------------------------
// WHITEINIT
// 
#define PBE_BLE5_RAM_WHITEINIT_ADR (PBE_BLE5_RAM_BASE + 0x0038UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_WHITEINIT = (unsigned short*) PBE_BLE5_RAM_WHITEINIT_ADR;
#define S_PBE_BLE5_RAM_WHITEINIT (*SP_PBE_BLE5_RAM_WHITEINIT)
// bitfield: WHITEINIT_VAL
#define PBE_BLE5_RAM_WHITEINIT_VAL                            0UL
#define PBE_BLE5_RAM_WHITEINIT_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// EXTRABYTES
// 
#define PBE_BLE5_RAM_EXTRABYTES_ADR (PBE_BLE5_RAM_BASE + 0x003AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_EXTRABYTES = (unsigned short*) PBE_BLE5_RAM_EXTRABYTES_ADR;
#define S_PBE_BLE5_RAM_EXTRABYTES (*SP_PBE_BLE5_RAM_EXTRABYTES)
// bitfield: EXTRABYTES_VAL
#define PBE_BLE5_RAM_EXTRABYTES_VAL                           0UL
#define PBE_BLE5_RAM_EXTRABYTES_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// CRCINITL
// 
#define PBE_BLE5_RAM_CRCINITL_ADR (PBE_BLE5_RAM_BASE + 0x003CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_CRCINITL = (unsigned short*) PBE_BLE5_RAM_CRCINITL_ADR;
#define S_PBE_BLE5_RAM_CRCINITL (*SP_PBE_BLE5_RAM_CRCINITL)
// bitfield: CRCINITL_VALLSB
#define PBE_BLE5_RAM_CRCINITL_VALLSB                          0UL
#define PBE_BLE5_RAM_CRCINITL_VALLSB_BM                       0xFFFFUL
// --------------------------------------------------------------
// CRCINITH
// 
#define PBE_BLE5_RAM_CRCINITH_ADR (PBE_BLE5_RAM_BASE + 0x003EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_CRCINITH = (unsigned short*) PBE_BLE5_RAM_CRCINITH_ADR;
#define S_PBE_BLE5_RAM_CRCINITH (*SP_PBE_BLE5_RAM_CRCINITH)
// bitfield: CRCINITH_VALMSB
#define PBE_BLE5_RAM_CRCINITH_VALMSB                          0UL
#define PBE_BLE5_RAM_CRCINITH_VALMSB_BM                       0xFFFFUL
// --------------------------------------------------------------
// SEQSTAT
// 
#define PBE_BLE5_RAM_SEQSTAT_ADR (PBE_BLE5_RAM_BASE + 0x0040UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_SEQSTAT = (unsigned short*) PBE_BLE5_RAM_SEQSTAT_ADR;
#define S_PBE_BLE5_RAM_SEQSTAT (*SP_PBE_BLE5_RAM_SEQSTAT)
// bitfield: SEQSTAT_CTLACKPEND
#define PBE_BLE5_RAM_SEQSTAT_CTLACKPEND                       7UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACKPEND_BM                    0x0080UL
// enums for bitfield SEQSTAT_CTLACKPEND (width: 1)UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACKPEND_NO                    0x0UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACKPEND_YES                   0x1UL
// bitfield: SEQSTAT_CTLACK
#define PBE_BLE5_RAM_SEQSTAT_CTLACK                           6UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACK_BM                        0x0040UL
// enums for bitfield SEQSTAT_CTLACK (width: 1)UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACK_NO                        0x0UL
#define PBE_BLE5_RAM_SEQSTAT_CTLACK_YES                       0x1UL
// bitfield: SEQSTAT_CTLTX
#define PBE_BLE5_RAM_SEQSTAT_CTLTX                            5UL
#define PBE_BLE5_RAM_SEQSTAT_CTLTX_BM                         0x0020UL
// enums for bitfield SEQSTAT_CTLTX (width: 1)UL
#define PBE_BLE5_RAM_SEQSTAT_CTLTX_NO                         0x0UL
#define PBE_BLE5_RAM_SEQSTAT_CTLTX_YES                        0x1UL
// bitfield: SEQSTAT_EMPTY
#define PBE_BLE5_RAM_SEQSTAT_EMPTY                            4UL
#define PBE_BLE5_RAM_SEQSTAT_EMPTY_BM                         0x0010UL
// bitfield: SEQSTAT_FIRSTPKT
#define PBE_BLE5_RAM_SEQSTAT_FIRSTPKT                         3UL
#define PBE_BLE5_RAM_SEQSTAT_FIRSTPKT_BM                      0x0008UL
// enums for bitfield SEQSTAT_FIRSTPKT (width: 1)UL
#define PBE_BLE5_RAM_SEQSTAT_FIRSTPKT_NOT_FIRST               0x0UL
#define PBE_BLE5_RAM_SEQSTAT_FIRSTPKT_FIRST                   0x1UL
// bitfield: SEQSTAT_NEXTTXSN
#define PBE_BLE5_RAM_SEQSTAT_NEXTTXSN                         2UL
#define PBE_BLE5_RAM_SEQSTAT_NEXTTXSN_BM                      0x0004UL
// bitfield: SEQSTAT_LASTTXSN
#define PBE_BLE5_RAM_SEQSTAT_LASTTXSN                         1UL
#define PBE_BLE5_RAM_SEQSTAT_LASTTXSN_BM                      0x0002UL
// bitfield: SEQSTAT_LASTRXSN
#define PBE_BLE5_RAM_SEQSTAT_LASTRXSN                         0UL
#define PBE_BLE5_RAM_SEQSTAT_LASTRXSN_BM                      0x0001UL
// --------------------------------------------------------------
// BACKOFFCNT
// 
#define PBE_BLE5_RAM_BACKOFFCNT_ADR (PBE_BLE5_RAM_BASE + 0x0042UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_BACKOFFCNT = (unsigned short*) PBE_BLE5_RAM_BACKOFFCNT_ADR;
#define S_PBE_BLE5_RAM_BACKOFFCNT (*SP_PBE_BLE5_RAM_BACKOFFCNT)
// bitfield: BACKOFFCNT_VAL
#define PBE_BLE5_RAM_BACKOFFCNT_VAL                           0UL
#define PBE_BLE5_RAM_BACKOFFCNT_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// SCANCFG
// 
#define PBE_BLE5_RAM_SCANCFG_ADR (PBE_BLE5_RAM_BASE + 0x0044UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_SCANCFG = (unsigned short*) PBE_BLE5_RAM_SCANCFG_ADR;
#define S_PBE_BLE5_RAM_SCANCFG (*SP_PBE_BLE5_RAM_SCANCFG)
// bitfield: SCANCFG_ACTPASS
#define PBE_BLE5_RAM_SCANCFG_ACTPASS                          0UL
#define PBE_BLE5_RAM_SCANCFG_ACTPASS_BM                       0x0001UL
// enums for bitfield SCANCFG_ACTPASS (width: 1)UL
#define PBE_BLE5_RAM_SCANCFG_ACTPASS_PASS                     0x0UL
#define PBE_BLE5_RAM_SCANCFG_ACTPASS_ACT                      0x1UL
// --------------------------------------------------------------
// WINOFFSET
// 
#define PBE_BLE5_RAM_WINOFFSET_ADR (PBE_BLE5_RAM_BASE + 0x0046UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_WINOFFSET = (unsigned short*) PBE_BLE5_RAM_WINOFFSET_ADR;
#define S_PBE_BLE5_RAM_WINOFFSET (*SP_PBE_BLE5_RAM_WINOFFSET)
// bitfield: WINOFFSET_VAL
#define PBE_BLE5_RAM_WINOFFSET_VAL                            0UL
#define PBE_BLE5_RAM_WINOFFSET_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// WINMOD
// 
#define PBE_BLE5_RAM_WINMOD_ADR (PBE_BLE5_RAM_BASE + 0x0048UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_WINMOD = (unsigned short*) PBE_BLE5_RAM_WINMOD_ADR;
#define S_PBE_BLE5_RAM_WINMOD (*SP_PBE_BLE5_RAM_WINMOD)
// bitfield: WINMOD_VAL
#define PBE_BLE5_RAM_WINMOD_VAL                               0UL
#define PBE_BLE5_RAM_WINMOD_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// MAXLEN
// 
#define PBE_BLE5_RAM_MAXLEN_ADR (PBE_BLE5_RAM_BASE + 0x004AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_MAXLEN = (unsigned short*) PBE_BLE5_RAM_MAXLEN_ADR;
#define S_PBE_BLE5_RAM_MAXLEN (*SP_PBE_BLE5_RAM_MAXLEN)
// bitfield: MAXLEN_VAL
#define PBE_BLE5_RAM_MAXLEN_VAL                               0UL
#define PBE_BLE5_RAM_MAXLEN_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// FILTPOLICY
// 
#define PBE_BLE5_RAM_FILTPOLICY_ADR (PBE_BLE5_RAM_BASE + 0x004CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FILTPOLICY = (unsigned short*) PBE_BLE5_RAM_FILTPOLICY_ADR;
#define S_PBE_BLE5_RAM_FILTPOLICY (*SP_PBE_BLE5_RAM_FILTPOLICY)
// bitfield: FILTPOLICY_INTOR
#define PBE_BLE5_RAM_FILTPOLICY_INTOR                         4UL
#define PBE_BLE5_RAM_FILTPOLICY_INTOR_BM                      0x0010UL
// enums for bitfield FILTPOLICY_INTOR (width: 1)UL
#define PBE_BLE5_RAM_FILTPOLICY_INTOR_PEERADR                 0x0UL
#define PBE_BLE5_RAM_FILTPOLICY_INTOR_FL2                     0x1UL
// bitfield: FILTPOLICY_EXTSCANNER
#define PBE_BLE5_RAM_FILTPOLICY_EXTSCANNER                    3UL
#define PBE_BLE5_RAM_FILTPOLICY_EXTSCANNER_BM                 0x0008UL
// enums for bitfield FILTPOLICY_EXTSCANNER (width: 1)UL
#define PBE_BLE5_RAM_FILTPOLICY_EXTSCANNER_NORPA              0x0UL
#define PBE_BLE5_RAM_FILTPOLICY_EXTSCANNER_ANYRPA             0x1UL
// bitfield: FILTPOLICY_SCANNER
#define PBE_BLE5_RAM_FILTPOLICY_SCANNER                       2UL
#define PBE_BLE5_RAM_FILTPOLICY_SCANNER_BM                    0x0004UL
// enums for bitfield FILTPOLICY_SCANNER (width: 1)UL
#define PBE_BLE5_RAM_FILTPOLICY_SCANNER_REJFL1                0x0UL
#define PBE_BLE5_RAM_FILTPOLICY_SCANNER_FL1                   0x1UL
// bitfield: FILTPOLICY_ADV
#define PBE_BLE5_RAM_FILTPOLICY_ADV                           0UL
#define PBE_BLE5_RAM_FILTPOLICY_ADV_BM                        0x0003UL
// enums for bitfield FILTPOLICY_ADV (width: 2)UL
#define PBE_BLE5_RAM_FILTPOLICY_ADV_REJFL1_REJFL2             0x0UL
#define PBE_BLE5_RAM_FILTPOLICY_ADV_FL1_REJFL2                0x1UL
#define PBE_BLE5_RAM_FILTPOLICY_ADV_REJFL1_FL2                0x2UL
#define PBE_BLE5_RAM_FILTPOLICY_ADV_FL1_FL2                   0x3UL
// --------------------------------------------------------------
// OWNADRTYPE
// 
#define PBE_BLE5_RAM_OWNADRTYPE_ADR (PBE_BLE5_RAM_BASE + 0x004EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_OWNADRTYPE = (unsigned short*) PBE_BLE5_RAM_OWNADRTYPE_ADR;
#define S_PBE_BLE5_RAM_OWNADRTYPE (*SP_PBE_BLE5_RAM_OWNADRTYPE)
// bitfield: OWNADRTYPE_TYPE
#define PBE_BLE5_RAM_OWNADRTYPE_TYPE                          0UL
#define PBE_BLE5_RAM_OWNADRTYPE_TYPE_BM                       0x0001UL
// enums for bitfield OWNADRTYPE_TYPE (width: 1)UL
#define PBE_BLE5_RAM_OWNADRTYPE_TYPE_PUBLIC                   0x0UL
#define PBE_BLE5_RAM_OWNADRTYPE_TYPE_RANDOM                   0x1UL
// --------------------------------------------------------------
// PEERADRTYPE
// 
#define PBE_BLE5_RAM_PEERADRTYPE_ADR (PBE_BLE5_RAM_BASE + 0x0050UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PEERADRTYPE = (unsigned short*) PBE_BLE5_RAM_PEERADRTYPE_ADR;
#define S_PBE_BLE5_RAM_PEERADRTYPE (*SP_PBE_BLE5_RAM_PEERADRTYPE)
// bitfield: PEERADRTYPE_TYPE
#define PBE_BLE5_RAM_PEERADRTYPE_TYPE                         0UL
#define PBE_BLE5_RAM_PEERADRTYPE_TYPE_BM                      0x0001UL
// enums for bitfield PEERADRTYPE_TYPE (width: 1)UL
#define PBE_BLE5_RAM_PEERADRTYPE_TYPE_PUBLIC                  0x0UL
#define PBE_BLE5_RAM_PEERADRTYPE_TYPE_RANDOM                  0x1UL
// --------------------------------------------------------------
// OWNADRL
// 
#define PBE_BLE5_RAM_OWNADRL_ADR (PBE_BLE5_RAM_BASE + 0x0052UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_OWNADRL = (unsigned short*) PBE_BLE5_RAM_OWNADRL_ADR;
#define S_PBE_BLE5_RAM_OWNADRL (*SP_PBE_BLE5_RAM_OWNADRL)
// bitfield: OWNADRL_VALLSB
#define PBE_BLE5_RAM_OWNADRL_VALLSB                           0UL
#define PBE_BLE5_RAM_OWNADRL_VALLSB_BM                        0xFFFFUL
// --------------------------------------------------------------
// OWNADRM
// 
#define PBE_BLE5_RAM_OWNADRM_ADR (PBE_BLE5_RAM_BASE + 0x0054UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_OWNADRM = (unsigned short*) PBE_BLE5_RAM_OWNADRM_ADR;
#define S_PBE_BLE5_RAM_OWNADRM (*SP_PBE_BLE5_RAM_OWNADRM)
// bitfield: OWNADRM_VALLSB
#define PBE_BLE5_RAM_OWNADRM_VALLSB                           0UL
#define PBE_BLE5_RAM_OWNADRM_VALLSB_BM                        0xFFFFUL
// --------------------------------------------------------------
// OWNADRH
// 
#define PBE_BLE5_RAM_OWNADRH_ADR (PBE_BLE5_RAM_BASE + 0x0056UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_OWNADRH = (unsigned short*) PBE_BLE5_RAM_OWNADRH_ADR;
#define S_PBE_BLE5_RAM_OWNADRH (*SP_PBE_BLE5_RAM_OWNADRH)
// bitfield: OWNADRH_VALMSB
#define PBE_BLE5_RAM_OWNADRH_VALMSB                           0UL
#define PBE_BLE5_RAM_OWNADRH_VALMSB_BM                        0xFFFFUL
// --------------------------------------------------------------
// TMPADRL
// 
#define PBE_BLE5_RAM_TMPADRL_ADR (PBE_BLE5_RAM_BASE + 0x0058UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_TMPADRL = (unsigned short*) PBE_BLE5_RAM_TMPADRL_ADR;
#define S_PBE_BLE5_RAM_TMPADRL (*SP_PBE_BLE5_RAM_TMPADRL)
// bitfield: TMPADRL_VAL
#define PBE_BLE5_RAM_TMPADRL_VAL                              0UL
#define PBE_BLE5_RAM_TMPADRL_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// TMPADRM
// 
#define PBE_BLE5_RAM_TMPADRM_ADR (PBE_BLE5_RAM_BASE + 0x005AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_TMPADRM = (unsigned short*) PBE_BLE5_RAM_TMPADRM_ADR;
#define S_PBE_BLE5_RAM_TMPADRM (*SP_PBE_BLE5_RAM_TMPADRM)
// bitfield: TMPADRM_VAL
#define PBE_BLE5_RAM_TMPADRM_VAL                              0UL
#define PBE_BLE5_RAM_TMPADRM_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// TMPADRH
// 
#define PBE_BLE5_RAM_TMPADRH_ADR (PBE_BLE5_RAM_BASE + 0x005CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_TMPADRH = (unsigned short*) PBE_BLE5_RAM_TMPADRH_ADR;
#define S_PBE_BLE5_RAM_TMPADRH (*SP_PBE_BLE5_RAM_TMPADRH)
// bitfield: TMPADRH_VAL
#define PBE_BLE5_RAM_TMPADRH_VAL                              0UL
#define PBE_BLE5_RAM_TMPADRH_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// PEERADRL
// 
#define PBE_BLE5_RAM_PEERADRL_ADR (PBE_BLE5_RAM_BASE + 0x005EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PEERADRL = (unsigned short*) PBE_BLE5_RAM_PEERADRL_ADR;
#define S_PBE_BLE5_RAM_PEERADRL (*SP_PBE_BLE5_RAM_PEERADRL)
// bitfield: PEERADRL_VALLSB
#define PBE_BLE5_RAM_PEERADRL_VALLSB                          0UL
#define PBE_BLE5_RAM_PEERADRL_VALLSB_BM                       0xFFFFUL
// --------------------------------------------------------------
// PEERADRM
// 
#define PBE_BLE5_RAM_PEERADRM_ADR (PBE_BLE5_RAM_BASE + 0x0060UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PEERADRM = (unsigned short*) PBE_BLE5_RAM_PEERADRM_ADR;
#define S_PBE_BLE5_RAM_PEERADRM (*SP_PBE_BLE5_RAM_PEERADRM)
// bitfield: PEERADRM_VALLSB
#define PBE_BLE5_RAM_PEERADRM_VALLSB                          0UL
#define PBE_BLE5_RAM_PEERADRM_VALLSB_BM                       0xFFFFUL
// --------------------------------------------------------------
// PEERADRH
// 
#define PBE_BLE5_RAM_PEERADRH_ADR (PBE_BLE5_RAM_BASE + 0x0062UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PEERADRH = (unsigned short*) PBE_BLE5_RAM_PEERADRH_ADR;
#define S_PBE_BLE5_RAM_PEERADRH (*SP_PBE_BLE5_RAM_PEERADRH)
// bitfield: PEERADRH_VALMSB
#define PBE_BLE5_RAM_PEERADRH_VALMSB                          0UL
#define PBE_BLE5_RAM_PEERADRH_VALMSB_BM                       0xFFFFUL
// --------------------------------------------------------------
// NTXDONE
// 
#define PBE_BLE5_RAM_NTXDONE_ADR (PBE_BLE5_RAM_BASE + 0x0064UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXDONE = (unsigned short*) PBE_BLE5_RAM_NTXDONE_ADR;
#define S_PBE_BLE5_RAM_NTXDONE (*SP_PBE_BLE5_RAM_NTXDONE)
// bitfield: NTXDONE_VAL
#define PBE_BLE5_RAM_NTXDONE_VAL                              0UL
#define PBE_BLE5_RAM_NTXDONE_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// NTXACK
// 
#define PBE_BLE5_RAM_NTXACK_ADR (PBE_BLE5_RAM_BASE + 0x0066UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXACK = (unsigned short*) PBE_BLE5_RAM_NTXACK_ADR;
#define S_PBE_BLE5_RAM_NTXACK (*SP_PBE_BLE5_RAM_NTXACK)
// bitfield: NTXACK_VAL
#define PBE_BLE5_RAM_NTXACK_VAL                               0UL
#define PBE_BLE5_RAM_NTXACK_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// NTXCTLACK
// 
#define PBE_BLE5_RAM_NTXCTLACK_ADR (PBE_BLE5_RAM_BASE + 0x0068UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXCTLACK = (unsigned short*) PBE_BLE5_RAM_NTXCTLACK_ADR;
#define S_PBE_BLE5_RAM_NTXCTLACK (*SP_PBE_BLE5_RAM_NTXCTLACK)
// bitfield: NTXCTLACK_VAL
#define PBE_BLE5_RAM_NTXCTLACK_VAL                            0UL
#define PBE_BLE5_RAM_NTXCTLACK_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// NTXCTL
// 
#define PBE_BLE5_RAM_NTXCTL_ADR (PBE_BLE5_RAM_BASE + 0x006AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXCTL = (unsigned short*) PBE_BLE5_RAM_NTXCTL_ADR;
#define S_PBE_BLE5_RAM_NTXCTL (*SP_PBE_BLE5_RAM_NTXCTL)
// bitfield: NTXCTL_VAL
#define PBE_BLE5_RAM_NTXCTL_VAL                               0UL
#define PBE_BLE5_RAM_NTXCTL_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// NTXRETRANS
// 
#define PBE_BLE5_RAM_NTXRETRANS_ADR (PBE_BLE5_RAM_BASE + 0x006CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXRETRANS = (unsigned short*) PBE_BLE5_RAM_NTXRETRANS_ADR;
#define S_PBE_BLE5_RAM_NTXRETRANS (*SP_PBE_BLE5_RAM_NTXRETRANS)
// bitfield: NTXRETRANS_VAL
#define PBE_BLE5_RAM_NTXRETRANS_VAL                           0UL
#define PBE_BLE5_RAM_NTXRETRANS_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// NRXNOK
// 
#define PBE_BLE5_RAM_NRXNOK_ADR (PBE_BLE5_RAM_BASE + 0x006EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXNOK = (unsigned short*) PBE_BLE5_RAM_NRXNOK_ADR;
#define S_PBE_BLE5_RAM_NRXNOK (*SP_PBE_BLE5_RAM_NRXNOK)
// bitfield: NRXNOK_VAL
#define PBE_BLE5_RAM_NRXNOK_VAL                               0UL
#define PBE_BLE5_RAM_NRXNOK_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// NRXIGNORED
// 
#define PBE_BLE5_RAM_NRXIGNORED_ADR (PBE_BLE5_RAM_BASE + 0x0070UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXIGNORED = (unsigned short*) PBE_BLE5_RAM_NRXIGNORED_ADR;
#define S_PBE_BLE5_RAM_NRXIGNORED (*SP_PBE_BLE5_RAM_NRXIGNORED)
// bitfield: NRXIGNORED_VAL
#define PBE_BLE5_RAM_NRXIGNORED_VAL                           0UL
#define PBE_BLE5_RAM_NRXIGNORED_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// NRXEMPTY
// 
#define PBE_BLE5_RAM_NRXEMPTY_ADR (PBE_BLE5_RAM_BASE + 0x0072UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXEMPTY = (unsigned short*) PBE_BLE5_RAM_NRXEMPTY_ADR;
#define S_PBE_BLE5_RAM_NRXEMPTY (*SP_PBE_BLE5_RAM_NRXEMPTY)
// bitfield: NRXEMPTY_VAL
#define PBE_BLE5_RAM_NRXEMPTY_VAL                             0UL
#define PBE_BLE5_RAM_NRXEMPTY_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// NRXFIFOFULL
// 
#define PBE_BLE5_RAM_NRXFIFOFULL_ADR (PBE_BLE5_RAM_BASE + 0x0074UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXFIFOFULL = (unsigned short*) PBE_BLE5_RAM_NRXFIFOFULL_ADR;
#define S_PBE_BLE5_RAM_NRXFIFOFULL (*SP_PBE_BLE5_RAM_NRXFIFOFULL)
// bitfield: NRXFIFOFULL_VAL
#define PBE_BLE5_RAM_NRXFIFOFULL_VAL                          0UL
#define PBE_BLE5_RAM_NRXFIFOFULL_VAL_BM                       0xFFFFUL
// --------------------------------------------------------------
// NRXOK
// 
#define PBE_BLE5_RAM_NRXOK_ADR (PBE_BLE5_RAM_BASE + 0x0076UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXOK = (unsigned short*) PBE_BLE5_RAM_NRXOK_ADR;
#define S_PBE_BLE5_RAM_NRXOK (*SP_PBE_BLE5_RAM_NRXOK)
// bitfield: NRXOK_VAL
#define PBE_BLE5_RAM_NRXOK_VAL                                0UL
#define PBE_BLE5_RAM_NRXOK_VAL_BM                             0xFFFFUL
// --------------------------------------------------------------
// NTX
// 
#define PBE_BLE5_RAM_NTX_ADR (PBE_BLE5_RAM_BASE + 0x0078UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTX = (unsigned short*) PBE_BLE5_RAM_NTX_ADR;
#define S_PBE_BLE5_RAM_NTX (*SP_PBE_BLE5_RAM_NTX)
// bitfield: NTX_VAL
#define PBE_BLE5_RAM_NTX_VAL                                  0UL
#define PBE_BLE5_RAM_NTX_VAL_BM                               0xFFFFUL
// --------------------------------------------------------------
// NRXCTL
// 
#define PBE_BLE5_RAM_NRXCTL_ADR (PBE_BLE5_RAM_BASE + 0x007AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXCTL = (unsigned short*) PBE_BLE5_RAM_NRXCTL_ADR;
#define S_PBE_BLE5_RAM_NRXCTL (*SP_PBE_BLE5_RAM_NRXCTL)
// bitfield: NRXCTL_VAL
#define PBE_BLE5_RAM_NRXCTL_VAL                               0UL
#define PBE_BLE5_RAM_NRXCTL_VAL_BM                            0xFFFFUL
// --------------------------------------------------------------
// NRXCTLACK
// 
#define PBE_BLE5_RAM_NRXCTLACK_ADR (PBE_BLE5_RAM_BASE + 0x007CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NRXCTLACK = (unsigned short*) PBE_BLE5_RAM_NRXCTLACK_ADR;
#define S_PBE_BLE5_RAM_NRXCTLACK (*SP_PBE_BLE5_RAM_NRXCTLACK)
// bitfield: NRXCTLACK_VAL
#define PBE_BLE5_RAM_NRXCTLACK_VAL                            0UL
#define PBE_BLE5_RAM_NRXCTLACK_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// LASTRSSI
// 
#define PBE_BLE5_RAM_LASTRSSI_ADR (PBE_BLE5_RAM_BASE + 0x007EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_LASTRSSI = (unsigned short*) PBE_BLE5_RAM_LASTRSSI_ADR;
#define S_PBE_BLE5_RAM_LASTRSSI (*SP_PBE_BLE5_RAM_LASTRSSI)
// bitfield: LASTRSSI_VAL
#define PBE_BLE5_RAM_LASTRSSI_VAL                             0UL
#define PBE_BLE5_RAM_LASTRSSI_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FIRSTRXTIMEOUT
// 
#define PBE_BLE5_RAM_FIRSTRXTIMEOUT_ADR (PBE_BLE5_RAM_BASE + 0x0080UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FIRSTRXTIMEOUT = (unsigned short*) PBE_BLE5_RAM_FIRSTRXTIMEOUT_ADR;
#define S_PBE_BLE5_RAM_FIRSTRXTIMEOUT (*SP_PBE_BLE5_RAM_FIRSTRXTIMEOUT)
// bitfield: FIRSTRXTIMEOUT_VAL
#define PBE_BLE5_RAM_FIRSTRXTIMEOUT_VAL                       0UL
#define PBE_BLE5_RAM_FIRSTRXTIMEOUT_VAL_BM                    0xFFFFUL
// --------------------------------------------------------------
// LASTTIMESTAMPL
// 
#define PBE_BLE5_RAM_LASTTIMESTAMPL_ADR (PBE_BLE5_RAM_BASE + 0x0084UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_LASTTIMESTAMPL = (unsigned short*) PBE_BLE5_RAM_LASTTIMESTAMPL_ADR;
#define S_PBE_BLE5_RAM_LASTTIMESTAMPL (*SP_PBE_BLE5_RAM_LASTTIMESTAMPL)
// bitfield: LASTTIMESTAMPL_VAL
#define PBE_BLE5_RAM_LASTTIMESTAMPL_VAL                       0UL
#define PBE_BLE5_RAM_LASTTIMESTAMPL_VAL_BM                    0xFFFFUL
// --------------------------------------------------------------
// LASTTIMESTAMPH
// 
#define PBE_BLE5_RAM_LASTTIMESTAMPH_ADR (PBE_BLE5_RAM_BASE + 0x0086UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_LASTTIMESTAMPH = (unsigned short*) PBE_BLE5_RAM_LASTTIMESTAMPH_ADR;
#define S_PBE_BLE5_RAM_LASTTIMESTAMPH (*SP_PBE_BLE5_RAM_LASTTIMESTAMPH)
// bitfield: LASTTIMESTAMPH_VAL
#define PBE_BLE5_RAM_LASTTIMESTAMPH_VAL                       0UL
#define PBE_BLE5_RAM_LASTTIMESTAMPH_VAL_BM                    0xFFFFUL
// --------------------------------------------------------------
// MDCFG
// 
#define PBE_BLE5_RAM_MDCFG_ADR (PBE_BLE5_RAM_BASE + 0x0088UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_MDCFG = (unsigned short*) PBE_BLE5_RAM_MDCFG_ADR;
#define S_PBE_BLE5_RAM_MDCFG (*SP_PBE_BLE5_RAM_MDCFG)
// bitfield: MDCFG_FORCE
#define PBE_BLE5_RAM_MDCFG_FORCE                              0UL
#define PBE_BLE5_RAM_MDCFG_FORCE_BM                           0x0003UL
// enums for bitfield MDCFG_FORCE (width: 2)UL
#define PBE_BLE5_RAM_MDCFG_FORCE_MD0                          0x1UL
#define PBE_BLE5_RAM_MDCFG_FORCE_MD1                          0x2UL
// --------------------------------------------------------------
// ADVCFG
// 
#define PBE_BLE5_RAM_ADVCFG_ADR (PBE_BLE5_RAM_BASE + 0x008AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_ADVCFG = (unsigned short*) PBE_BLE5_RAM_ADVCFG_ADR;
#define S_PBE_BLE5_RAM_ADVCFG (*SP_PBE_BLE5_RAM_ADVCFG)
// bitfield: ADVCFG_EXTENDED
#define PBE_BLE5_RAM_ADVCFG_EXTENDED                          3UL
#define PBE_BLE5_RAM_ADVCFG_EXTENDED_BM                       0x0008UL
// bitfield: ADVCFG_DIRECTED
#define PBE_BLE5_RAM_ADVCFG_DIRECTED                          2UL
#define PBE_BLE5_RAM_ADVCFG_DIRECTED_BM                       0x0004UL
// bitfield: ADVCFG_SCANNABLE
#define PBE_BLE5_RAM_ADVCFG_SCANNABLE                         1UL
#define PBE_BLE5_RAM_ADVCFG_SCANNABLE_BM                      0x0002UL
// bitfield: ADVCFG_CONNECTABLE
#define PBE_BLE5_RAM_ADVCFG_CONNECTABLE                       0UL
#define PBE_BLE5_RAM_ADVCFG_CONNECTABLE_BM                    0x0001UL
// --------------------------------------------------------------
// TMPRSSI
// 
#define PBE_BLE5_RAM_TMPRSSI_ADR (PBE_BLE5_RAM_BASE + 0x008CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_TMPRSSI = (unsigned short*) PBE_BLE5_RAM_TMPRSSI_ADR;
#define S_PBE_BLE5_RAM_TMPRSSI (*SP_PBE_BLE5_RAM_TMPRSSI)
// bitfield: TMPRSSI_VAL
#define PBE_BLE5_RAM_TMPRSSI_VAL                              0UL
#define PBE_BLE5_RAM_TMPRSSI_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// FIRSTTIMESTAMPL
// 
#define PBE_BLE5_RAM_FIRSTTIMESTAMPL_ADR (PBE_BLE5_RAM_BASE + 0x0090UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FIRSTTIMESTAMPL = (unsigned short*) PBE_BLE5_RAM_FIRSTTIMESTAMPL_ADR;
#define S_PBE_BLE5_RAM_FIRSTTIMESTAMPL (*SP_PBE_BLE5_RAM_FIRSTTIMESTAMPL)
// bitfield: FIRSTTIMESTAMPL_VAL
#define PBE_BLE5_RAM_FIRSTTIMESTAMPL_VAL                      0UL
#define PBE_BLE5_RAM_FIRSTTIMESTAMPL_VAL_BM                   0xFFFFUL
// --------------------------------------------------------------
// FIRSTTIMESTAMPH
// 
#define PBE_BLE5_RAM_FIRSTTIMESTAMPH_ADR (PBE_BLE5_RAM_BASE + 0x0092UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FIRSTTIMESTAMPH = (unsigned short*) PBE_BLE5_RAM_FIRSTTIMESTAMPH_ADR;
#define S_PBE_BLE5_RAM_FIRSTTIMESTAMPH (*SP_PBE_BLE5_RAM_FIRSTTIMESTAMPH)
// bitfield: FIRSTTIMESTAMPH_VAL
#define PBE_BLE5_RAM_FIRSTTIMESTAMPH_VAL                      0UL
#define PBE_BLE5_RAM_FIRSTTIMESTAMPH_VAL_BM                   0xFFFFUL
// --------------------------------------------------------------
// FL1RESULT
// 
#define PBE_BLE5_RAM_FL1RESULT_ADR (PBE_BLE5_RAM_BASE + 0x0094UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1RESULT = (unsigned short*) PBE_BLE5_RAM_FL1RESULT_ADR;
#define S_PBE_BLE5_RAM_FL1RESULT (*SP_PBE_BLE5_RAM_FL1RESULT)
// bitfield: FL1RESULT_INDEX
#define PBE_BLE5_RAM_FL1RESULT_INDEX                          0UL
#define PBE_BLE5_RAM_FL1RESULT_INDEX_BM                       0x000FUL
// --------------------------------------------------------------
// FL1MASK
// 
#define PBE_BLE5_RAM_FL1MASK_ADR (PBE_BLE5_RAM_BASE + 0x0096UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1MASK = (unsigned short*) PBE_BLE5_RAM_FL1MASK_ADR;
#define S_PBE_BLE5_RAM_FL1MASK (*SP_PBE_BLE5_RAM_FL1MASK)
// bitfield: FL1MASK_MATCH
#define PBE_BLE5_RAM_FL1MASK_MATCH                            15UL
#define PBE_BLE5_RAM_FL1MASK_MATCH_BM                         0x8000UL
// enums for bitfield FL1MASK_MATCH (width: 1)UL
#define PBE_BLE5_RAM_FL1MASK_MATCH_DIS                        0x0UL
#define PBE_BLE5_RAM_FL1MASK_MATCH_EN                         0x1UL
// bitfield: FL1MASK_RFUIGN
#define PBE_BLE5_RAM_FL1MASK_RFUIGN                           4UL
#define PBE_BLE5_RAM_FL1MASK_RFUIGN_BM                        0x7FF0UL
// bitfield: FL1MASK_PRIVIGN
#define PBE_BLE5_RAM_FL1MASK_PRIVIGN                          3UL
#define PBE_BLE5_RAM_FL1MASK_PRIVIGN_BM                       0x0008UL
// enums for bitfield FL1MASK_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1MASK_PRIVIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1MASK_PRIVIGN_IGN                      0x1UL
// bitfield: FL1MASK_DUPLICATEIGN
#define PBE_BLE5_RAM_FL1MASK_DUPLICATEIGN                     2UL
#define PBE_BLE5_RAM_FL1MASK_DUPLICATEIGN_BM                  0x0004UL
// enums for bitfield FL1MASK_DUPLICATEIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1MASK_DUPLICATEIGN_NIGN                0x0UL
#define PBE_BLE5_RAM_FL1MASK_DUPLICATEIGN_IGN                 0x1UL
// bitfield: FL1MASK_TYPE
#define PBE_BLE5_RAM_FL1MASK_TYPE                             1UL
#define PBE_BLE5_RAM_FL1MASK_TYPE_BM                          0x0002UL
// enums for bitfield FL1MASK_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1MASK_TYPE_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1MASK_TYPE_EN                          0x1UL
// bitfield: FL1MASK_EN
#define PBE_BLE5_RAM_FL1MASK_EN                               0UL
#define PBE_BLE5_RAM_FL1MASK_EN_BM                            0x0001UL
// enums for bitfield FL1MASK_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1MASK_EN_DIS                           0x0UL
#define PBE_BLE5_RAM_FL1MASK_EN_EN                            0x1UL
// --------------------------------------------------------------
// FL2RESULT
// 
#define PBE_BLE5_RAM_FL2RESULT_ADR (PBE_BLE5_RAM_BASE + 0x0098UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2RESULT = (unsigned short*) PBE_BLE5_RAM_FL2RESULT_ADR;
#define S_PBE_BLE5_RAM_FL2RESULT (*SP_PBE_BLE5_RAM_FL2RESULT)
// bitfield: FL2RESULT_INDEX
#define PBE_BLE5_RAM_FL2RESULT_INDEX                          0UL
#define PBE_BLE5_RAM_FL2RESULT_INDEX_BM                       0x000FUL
// --------------------------------------------------------------
// FL2MASK
// 
#define PBE_BLE5_RAM_FL2MASK_ADR (PBE_BLE5_RAM_BASE + 0x009AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2MASK = (unsigned short*) PBE_BLE5_RAM_FL2MASK_ADR;
#define S_PBE_BLE5_RAM_FL2MASK (*SP_PBE_BLE5_RAM_FL2MASK)
// bitfield: FL2MASK_MATCH
#define PBE_BLE5_RAM_FL2MASK_MATCH                            15UL
#define PBE_BLE5_RAM_FL2MASK_MATCH_BM                         0x8000UL
// enums for bitfield FL2MASK_MATCH (width: 1)UL
#define PBE_BLE5_RAM_FL2MASK_MATCH_DIS                        0x0UL
#define PBE_BLE5_RAM_FL2MASK_MATCH_EN                         0x1UL
// bitfield: FL2MASK_RFUIGN
#define PBE_BLE5_RAM_FL2MASK_RFUIGN                           4UL
#define PBE_BLE5_RAM_FL2MASK_RFUIGN_BM                        0x7FF0UL
// bitfield: FL2MASK_PRIVIGN
#define PBE_BLE5_RAM_FL2MASK_PRIVIGN                          3UL
#define PBE_BLE5_RAM_FL2MASK_PRIVIGN_BM                       0x0008UL
// enums for bitfield FL2MASK_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2MASK_PRIVIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2MASK_PRIVIGN_IGN                      0x1UL
// bitfield: FL2MASK_DUPLICATEIGN
#define PBE_BLE5_RAM_FL2MASK_DUPLICATEIGN                     2UL
#define PBE_BLE5_RAM_FL2MASK_DUPLICATEIGN_BM                  0x0004UL
// enums for bitfield FL2MASK_DUPLICATEIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2MASK_DUPLICATEIGN_NIGN                0x0UL
#define PBE_BLE5_RAM_FL2MASK_DUPLICATEIGN_IGN                 0x1UL
// bitfield: FL2MASK_TYPE
#define PBE_BLE5_RAM_FL2MASK_TYPE                             1UL
#define PBE_BLE5_RAM_FL2MASK_TYPE_BM                          0x0002UL
// enums for bitfield FL2MASK_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2MASK_TYPE_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2MASK_TYPE_EN                          0x1UL
// bitfield: FL2MASK_EN
#define PBE_BLE5_RAM_FL2MASK_EN                               0UL
#define PBE_BLE5_RAM_FL2MASK_EN_BM                            0x0001UL
// enums for bitfield FL2MASK_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2MASK_EN_DIS                           0x0UL
#define PBE_BLE5_RAM_FL2MASK_EN_EN                            0x1UL
// --------------------------------------------------------------
// FLSTAT
// 
#define PBE_BLE5_RAM_FLSTAT_ADR (PBE_BLE5_RAM_BASE + 0x009CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FLSTAT = (unsigned short*) PBE_BLE5_RAM_FLSTAT_ADR;
#define S_PBE_BLE5_RAM_FLSTAT (*SP_PBE_BLE5_RAM_FLSTAT)
// bitfield: FLSTAT_FL2RUNNING
#define PBE_BLE5_RAM_FLSTAT_FL2RUNNING                        1UL
#define PBE_BLE5_RAM_FLSTAT_FL2RUNNING_BM                     0x0002UL
// enums for bitfield FLSTAT_FL2RUNNING (width: 1)UL
#define PBE_BLE5_RAM_FLSTAT_FL2RUNNING_IDLE                   0x0UL
#define PBE_BLE5_RAM_FLSTAT_FL2RUNNING_RUNNING                0x1UL
// bitfield: FLSTAT_FL1RUNNING
#define PBE_BLE5_RAM_FLSTAT_FL1RUNNING                        0UL
#define PBE_BLE5_RAM_FLSTAT_FL1RUNNING_BM                     0x0001UL
// enums for bitfield FLSTAT_FL1RUNNING (width: 1)UL
#define PBE_BLE5_RAM_FLSTAT_FL1RUNNING_IDLE                   0x0UL
#define PBE_BLE5_RAM_FLSTAT_FL1RUNNING_RUNNING                0x1UL
// --------------------------------------------------------------
// TMPATYPE
// 
#define PBE_BLE5_RAM_TMPATYPE_ADR (PBE_BLE5_RAM_BASE + 0x009EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_TMPATYPE = (unsigned short*) PBE_BLE5_RAM_TMPATYPE_ADR;
#define S_PBE_BLE5_RAM_TMPATYPE (*SP_PBE_BLE5_RAM_TMPATYPE)
// bitfield: TMPATYPE_VAL
#define PBE_BLE5_RAM_TMPATYPE_VAL                             0UL
#define PBE_BLE5_RAM_TMPATYPE_VAL_BM                          0x0001UL
// --------------------------------------------------------------
// PATTERN
// 
#define PBE_BLE5_RAM_PATTERN_ADR (PBE_BLE5_RAM_BASE + 0x00A0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_PATTERN = (unsigned short*) PBE_BLE5_RAM_PATTERN_ADR;
#define S_PBE_BLE5_RAM_PATTERN (*SP_PBE_BLE5_RAM_PATTERN)
// bitfield: PATTERN_VAL
#define PBE_BLE5_RAM_PATTERN_VAL                              0UL
#define PBE_BLE5_RAM_PATTERN_VAL_BM                           0xFFFFUL
// --------------------------------------------------------------
// RFINTERVAL
// 
#define PBE_BLE5_RAM_RFINTERVAL_ADR (PBE_BLE5_RAM_BASE + 0x00A2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_RFINTERVAL = (unsigned short*) PBE_BLE5_RAM_RFINTERVAL_ADR;
#define S_PBE_BLE5_RAM_RFINTERVAL (*SP_PBE_BLE5_RAM_RFINTERVAL)
// bitfield: RFINTERVAL_VAL
#define PBE_BLE5_RAM_RFINTERVAL_VAL                           0UL
#define PBE_BLE5_RAM_RFINTERVAL_VAL_BM                        0xFFFFUL
// --------------------------------------------------------------
// NTXTARGET
// 
#define PBE_BLE5_RAM_NTXTARGET_ADR (PBE_BLE5_RAM_BASE + 0x00A4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_NTXTARGET = (unsigned short*) PBE_BLE5_RAM_NTXTARGET_ADR;
#define S_PBE_BLE5_RAM_NTXTARGET (*SP_PBE_BLE5_RAM_NTXTARGET)
// bitfield: NTXTARGET_VAL
#define PBE_BLE5_RAM_NTXTARGET_VAL                            0UL
#define PBE_BLE5_RAM_NTXTARGET_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// OPCFG
// 
#define PBE_BLE5_RAM_OPCFG_ADR (PBE_BLE5_RAM_BASE + 0x00A6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_OPCFG = (unsigned short*) PBE_BLE5_RAM_OPCFG_ADR;
#define S_PBE_BLE5_RAM_OPCFG (*SP_PBE_BLE5_RAM_OPCFG)
// bitfield: OPCFG_REPEAT
#define PBE_BLE5_RAM_OPCFG_REPEAT                             4UL
#define PBE_BLE5_RAM_OPCFG_REPEAT_BM                          0x0010UL
// enums for bitfield OPCFG_REPEAT (width: 1)UL
#define PBE_BLE5_RAM_OPCFG_REPEAT_NO                          0x0UL
#define PBE_BLE5_RAM_OPCFG_REPEAT_YES                         0x1UL
// bitfield: OPCFG_TXPATTERN
#define PBE_BLE5_RAM_OPCFG_TXPATTERN                          3UL
#define PBE_BLE5_RAM_OPCFG_TXPATTERN_BM                       0x0008UL
// enums for bitfield OPCFG_TXPATTERN (width: 1)UL
#define PBE_BLE5_RAM_OPCFG_TXPATTERN_NO                       0x0UL
#define PBE_BLE5_RAM_OPCFG_TXPATTERN_YES                      0x1UL
// bitfield: OPCFG_TXFCMD
#define PBE_BLE5_RAM_OPCFG_TXFCMD                             1UL
#define PBE_BLE5_RAM_OPCFG_TXFCMD_BM                          0x0006UL
// enums for bitfield OPCFG_TXFCMD (width: 2)UL
#define PBE_BLE5_RAM_OPCFG_TXFCMD_NONE                        0x0UL
#define PBE_BLE5_RAM_OPCFG_TXFCMD_RETRY                       0x1UL
#define PBE_BLE5_RAM_OPCFG_TXFCMD_DEALLOC                     0x2UL
// bitfield: OPCFG_RFINTERVAL
#define PBE_BLE5_RAM_OPCFG_RFINTERVAL                         0UL
#define PBE_BLE5_RAM_OPCFG_RFINTERVAL_BM                      0x0001UL
// enums for bitfield OPCFG_RFINTERVAL (width: 1)UL
#define PBE_BLE5_RAM_OPCFG_RFINTERVAL_DIS                     0x0UL
#define PBE_BLE5_RAM_OPCFG_RFINTERVAL_EN                      0x1UL
// --------------------------------------------------------------
// FL1INFO0
// 
#define PBE_BLE5_RAM_FL1INFO0_ADR (PBE_BLE5_RAM_BASE + 0x00A8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO0 = (unsigned short*) PBE_BLE5_RAM_FL1INFO0_ADR;
#define S_PBE_BLE5_RAM_FL1INFO0 (*SP_PBE_BLE5_RAM_FL1INFO0)
// bitfield: FL1INFO0_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO0_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO0_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO0_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO0_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO0_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO0_RESERVED
#define PBE_BLE5_RAM_FL1INFO0_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO0_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO0_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO0_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO0_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO0_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO0_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO0_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO0_FALIGN
#define PBE_BLE5_RAM_FL1INFO0_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO0_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO0_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO0_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO0_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO0_TYPE
#define PBE_BLE5_RAM_FL1INFO0_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO0_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO0_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO0_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO0_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO0_EN
#define PBE_BLE5_RAM_FL1INFO0_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO0_EN_BM                           0x0001UL
// enums for bitfield FL1INFO0_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO0_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO0_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL0
// 
#define PBE_BLE5_RAM_FL1ADRL0_ADR (PBE_BLE5_RAM_BASE + 0x00AAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL0 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL0_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL0 (*SP_PBE_BLE5_RAM_FL1ADRL0)
// bitfield: FL1ADRL0_VAL
#define PBE_BLE5_RAM_FL1ADRL0_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM0
// 
#define PBE_BLE5_RAM_FL1ADRM0_ADR (PBE_BLE5_RAM_BASE + 0x00ACUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM0 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM0_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM0 (*SP_PBE_BLE5_RAM_FL1ADRM0)
// bitfield: FL1ADRM0_VAL
#define PBE_BLE5_RAM_FL1ADRM0_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH0
// 
#define PBE_BLE5_RAM_FL1ADRH0_ADR (PBE_BLE5_RAM_BASE + 0x00AEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH0 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH0_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH0 (*SP_PBE_BLE5_RAM_FL1ADRH0)
// bitfield: FL1ADRH0_VAL
#define PBE_BLE5_RAM_FL1ADRH0_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO1
// 
#define PBE_BLE5_RAM_FL1INFO1_ADR (PBE_BLE5_RAM_BASE + 0x00B0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO1 = (unsigned short*) PBE_BLE5_RAM_FL1INFO1_ADR;
#define S_PBE_BLE5_RAM_FL1INFO1 (*SP_PBE_BLE5_RAM_FL1INFO1)
// bitfield: FL1INFO1_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO1_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO1_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO1_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO1_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO1_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO1_RESERVED
#define PBE_BLE5_RAM_FL1INFO1_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO1_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO1_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO1_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO1_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO1_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO1_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO1_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO1_FALIGN
#define PBE_BLE5_RAM_FL1INFO1_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO1_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO1_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO1_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO1_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO1_TYPE
#define PBE_BLE5_RAM_FL1INFO1_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO1_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO1_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO1_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO1_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO1_EN
#define PBE_BLE5_RAM_FL1INFO1_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO1_EN_BM                           0x0001UL
// enums for bitfield FL1INFO1_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO1_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO1_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL1
// 
#define PBE_BLE5_RAM_FL1ADRL1_ADR (PBE_BLE5_RAM_BASE + 0x00B2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL1 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL1_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL1 (*SP_PBE_BLE5_RAM_FL1ADRL1)
// bitfield: FL1ADRL1_VAL
#define PBE_BLE5_RAM_FL1ADRL1_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM1
// 
#define PBE_BLE5_RAM_FL1ADRM1_ADR (PBE_BLE5_RAM_BASE + 0x00B4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM1 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM1_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM1 (*SP_PBE_BLE5_RAM_FL1ADRM1)
// bitfield: FL1ADRM1_VAL
#define PBE_BLE5_RAM_FL1ADRM1_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH1
// 
#define PBE_BLE5_RAM_FL1ADRH1_ADR (PBE_BLE5_RAM_BASE + 0x00B6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH1 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH1_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH1 (*SP_PBE_BLE5_RAM_FL1ADRH1)
// bitfield: FL1ADRH1_VAL
#define PBE_BLE5_RAM_FL1ADRH1_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO2
// 
#define PBE_BLE5_RAM_FL1INFO2_ADR (PBE_BLE5_RAM_BASE + 0x00B8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO2 = (unsigned short*) PBE_BLE5_RAM_FL1INFO2_ADR;
#define S_PBE_BLE5_RAM_FL1INFO2 (*SP_PBE_BLE5_RAM_FL1INFO2)
// bitfield: FL1INFO2_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO2_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO2_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO2_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO2_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO2_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO2_RESERVED
#define PBE_BLE5_RAM_FL1INFO2_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO2_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO2_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO2_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO2_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO2_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO2_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO2_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO2_FALIGN
#define PBE_BLE5_RAM_FL1INFO2_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO2_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO2_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO2_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO2_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO2_TYPE
#define PBE_BLE5_RAM_FL1INFO2_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO2_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO2_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO2_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO2_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO2_EN
#define PBE_BLE5_RAM_FL1INFO2_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO2_EN_BM                           0x0001UL
// enums for bitfield FL1INFO2_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO2_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO2_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL2
// 
#define PBE_BLE5_RAM_FL1ADRL2_ADR (PBE_BLE5_RAM_BASE + 0x00BAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL2 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL2_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL2 (*SP_PBE_BLE5_RAM_FL1ADRL2)
// bitfield: FL1ADRL2_VAL
#define PBE_BLE5_RAM_FL1ADRL2_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM2
// 
#define PBE_BLE5_RAM_FL1ADRM2_ADR (PBE_BLE5_RAM_BASE + 0x00BCUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM2 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM2_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM2 (*SP_PBE_BLE5_RAM_FL1ADRM2)
// bitfield: FL1ADRM2_VAL
#define PBE_BLE5_RAM_FL1ADRM2_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH2
// 
#define PBE_BLE5_RAM_FL1ADRH2_ADR (PBE_BLE5_RAM_BASE + 0x00BEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH2 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH2_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH2 (*SP_PBE_BLE5_RAM_FL1ADRH2)
// bitfield: FL1ADRH2_VAL
#define PBE_BLE5_RAM_FL1ADRH2_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO3
// 
#define PBE_BLE5_RAM_FL1INFO3_ADR (PBE_BLE5_RAM_BASE + 0x00C0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO3 = (unsigned short*) PBE_BLE5_RAM_FL1INFO3_ADR;
#define S_PBE_BLE5_RAM_FL1INFO3 (*SP_PBE_BLE5_RAM_FL1INFO3)
// bitfield: FL1INFO3_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO3_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO3_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO3_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO3_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO3_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO3_RESERVED
#define PBE_BLE5_RAM_FL1INFO3_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO3_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO3_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO3_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO3_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO3_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO3_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO3_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO3_FALIGN
#define PBE_BLE5_RAM_FL1INFO3_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO3_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO3_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO3_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO3_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO3_TYPE
#define PBE_BLE5_RAM_FL1INFO3_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO3_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO3_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO3_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO3_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO3_EN
#define PBE_BLE5_RAM_FL1INFO3_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO3_EN_BM                           0x0001UL
// enums for bitfield FL1INFO3_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO3_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO3_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL3
// 
#define PBE_BLE5_RAM_FL1ADRL3_ADR (PBE_BLE5_RAM_BASE + 0x00C2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL3 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL3_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL3 (*SP_PBE_BLE5_RAM_FL1ADRL3)
// bitfield: FL1ADRL3_VAL
#define PBE_BLE5_RAM_FL1ADRL3_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM3
// 
#define PBE_BLE5_RAM_FL1ADRM3_ADR (PBE_BLE5_RAM_BASE + 0x00C4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM3 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM3_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM3 (*SP_PBE_BLE5_RAM_FL1ADRM3)
// bitfield: FL1ADRM3_VAL
#define PBE_BLE5_RAM_FL1ADRM3_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH3
// 
#define PBE_BLE5_RAM_FL1ADRH3_ADR (PBE_BLE5_RAM_BASE + 0x00C6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH3 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH3_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH3 (*SP_PBE_BLE5_RAM_FL1ADRH3)
// bitfield: FL1ADRH3_VAL
#define PBE_BLE5_RAM_FL1ADRH3_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO4
// 
#define PBE_BLE5_RAM_FL1INFO4_ADR (PBE_BLE5_RAM_BASE + 0x00C8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO4 = (unsigned short*) PBE_BLE5_RAM_FL1INFO4_ADR;
#define S_PBE_BLE5_RAM_FL1INFO4 (*SP_PBE_BLE5_RAM_FL1INFO4)
// bitfield: FL1INFO4_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO4_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO4_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO4_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO4_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO4_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO4_RESERVED
#define PBE_BLE5_RAM_FL1INFO4_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO4_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO4_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO4_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO4_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO4_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO4_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO4_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO4_FALIGN
#define PBE_BLE5_RAM_FL1INFO4_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO4_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO4_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO4_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO4_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO4_TYPE
#define PBE_BLE5_RAM_FL1INFO4_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO4_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO4_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO4_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO4_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO4_EN
#define PBE_BLE5_RAM_FL1INFO4_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO4_EN_BM                           0x0001UL
// enums for bitfield FL1INFO4_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO4_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO4_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL4
// 
#define PBE_BLE5_RAM_FL1ADRL4_ADR (PBE_BLE5_RAM_BASE + 0x00CAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL4 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL4_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL4 (*SP_PBE_BLE5_RAM_FL1ADRL4)
// bitfield: FL1ADRL4_VAL
#define PBE_BLE5_RAM_FL1ADRL4_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM4
// 
#define PBE_BLE5_RAM_FL1ADRM4_ADR (PBE_BLE5_RAM_BASE + 0x00CCUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM4 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM4_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM4 (*SP_PBE_BLE5_RAM_FL1ADRM4)
// bitfield: FL1ADRM4_VAL
#define PBE_BLE5_RAM_FL1ADRM4_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH4
// 
#define PBE_BLE5_RAM_FL1ADRH4_ADR (PBE_BLE5_RAM_BASE + 0x00CEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH4 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH4_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH4 (*SP_PBE_BLE5_RAM_FL1ADRH4)
// bitfield: FL1ADRH4_VAL
#define PBE_BLE5_RAM_FL1ADRH4_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO5
// 
#define PBE_BLE5_RAM_FL1INFO5_ADR (PBE_BLE5_RAM_BASE + 0x00D0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO5 = (unsigned short*) PBE_BLE5_RAM_FL1INFO5_ADR;
#define S_PBE_BLE5_RAM_FL1INFO5 (*SP_PBE_BLE5_RAM_FL1INFO5)
// bitfield: FL1INFO5_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO5_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO5_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO5_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO5_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO5_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO5_RESERVED
#define PBE_BLE5_RAM_FL1INFO5_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO5_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO5_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO5_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO5_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO5_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO5_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO5_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO5_FALIGN
#define PBE_BLE5_RAM_FL1INFO5_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO5_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO5_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO5_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO5_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO5_TYPE
#define PBE_BLE5_RAM_FL1INFO5_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO5_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO5_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO5_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO5_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO5_EN
#define PBE_BLE5_RAM_FL1INFO5_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO5_EN_BM                           0x0001UL
// enums for bitfield FL1INFO5_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO5_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO5_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL5
// 
#define PBE_BLE5_RAM_FL1ADRL5_ADR (PBE_BLE5_RAM_BASE + 0x00D2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL5 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL5_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL5 (*SP_PBE_BLE5_RAM_FL1ADRL5)
// bitfield: FL1ADRL5_VAL
#define PBE_BLE5_RAM_FL1ADRL5_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM5
// 
#define PBE_BLE5_RAM_FL1ADRM5_ADR (PBE_BLE5_RAM_BASE + 0x00D4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM5 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM5_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM5 (*SP_PBE_BLE5_RAM_FL1ADRM5)
// bitfield: FL1ADRM5_VAL
#define PBE_BLE5_RAM_FL1ADRM5_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH5
// 
#define PBE_BLE5_RAM_FL1ADRH5_ADR (PBE_BLE5_RAM_BASE + 0x00D6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH5 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH5_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH5 (*SP_PBE_BLE5_RAM_FL1ADRH5)
// bitfield: FL1ADRH5_VAL
#define PBE_BLE5_RAM_FL1ADRH5_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO6
// 
#define PBE_BLE5_RAM_FL1INFO6_ADR (PBE_BLE5_RAM_BASE + 0x00D8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO6 = (unsigned short*) PBE_BLE5_RAM_FL1INFO6_ADR;
#define S_PBE_BLE5_RAM_FL1INFO6 (*SP_PBE_BLE5_RAM_FL1INFO6)
// bitfield: FL1INFO6_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO6_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO6_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO6_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO6_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO6_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO6_RESERVED
#define PBE_BLE5_RAM_FL1INFO6_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO6_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO6_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO6_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO6_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO6_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO6_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO6_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO6_FALIGN
#define PBE_BLE5_RAM_FL1INFO6_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO6_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO6_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO6_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO6_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO6_TYPE
#define PBE_BLE5_RAM_FL1INFO6_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO6_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO6_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO6_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO6_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO6_EN
#define PBE_BLE5_RAM_FL1INFO6_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO6_EN_BM                           0x0001UL
// enums for bitfield FL1INFO6_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO6_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO6_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL6
// 
#define PBE_BLE5_RAM_FL1ADRL6_ADR (PBE_BLE5_RAM_BASE + 0x00DAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL6 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL6_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL6 (*SP_PBE_BLE5_RAM_FL1ADRL6)
// bitfield: FL1ADRL6_VAL
#define PBE_BLE5_RAM_FL1ADRL6_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM6
// 
#define PBE_BLE5_RAM_FL1ADRM6_ADR (PBE_BLE5_RAM_BASE + 0x00DCUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM6 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM6_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM6 (*SP_PBE_BLE5_RAM_FL1ADRM6)
// bitfield: FL1ADRM6_VAL
#define PBE_BLE5_RAM_FL1ADRM6_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH6
// 
#define PBE_BLE5_RAM_FL1ADRH6_ADR (PBE_BLE5_RAM_BASE + 0x00DEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH6 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH6_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH6 (*SP_PBE_BLE5_RAM_FL1ADRH6)
// bitfield: FL1ADRH6_VAL
#define PBE_BLE5_RAM_FL1ADRH6_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO7
// 
#define PBE_BLE5_RAM_FL1INFO7_ADR (PBE_BLE5_RAM_BASE + 0x00E0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO7 = (unsigned short*) PBE_BLE5_RAM_FL1INFO7_ADR;
#define S_PBE_BLE5_RAM_FL1INFO7 (*SP_PBE_BLE5_RAM_FL1INFO7)
// bitfield: FL1INFO7_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO7_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO7_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO7_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO7_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO7_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO7_RESERVED
#define PBE_BLE5_RAM_FL1INFO7_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO7_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO7_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO7_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO7_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO7_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO7_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO7_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO7_FALIGN
#define PBE_BLE5_RAM_FL1INFO7_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO7_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO7_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO7_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO7_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO7_TYPE
#define PBE_BLE5_RAM_FL1INFO7_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO7_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO7_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO7_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO7_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO7_EN
#define PBE_BLE5_RAM_FL1INFO7_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO7_EN_BM                           0x0001UL
// enums for bitfield FL1INFO7_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO7_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO7_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL7
// 
#define PBE_BLE5_RAM_FL1ADRL7_ADR (PBE_BLE5_RAM_BASE + 0x00E2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL7 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL7_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL7 (*SP_PBE_BLE5_RAM_FL1ADRL7)
// bitfield: FL1ADRL7_VAL
#define PBE_BLE5_RAM_FL1ADRL7_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM7
// 
#define PBE_BLE5_RAM_FL1ADRM7_ADR (PBE_BLE5_RAM_BASE + 0x00E4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM7 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM7_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM7 (*SP_PBE_BLE5_RAM_FL1ADRM7)
// bitfield: FL1ADRM7_VAL
#define PBE_BLE5_RAM_FL1ADRM7_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH7
// 
#define PBE_BLE5_RAM_FL1ADRH7_ADR (PBE_BLE5_RAM_BASE + 0x00E6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH7 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH7_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH7 (*SP_PBE_BLE5_RAM_FL1ADRH7)
// bitfield: FL1ADRH7_VAL
#define PBE_BLE5_RAM_FL1ADRH7_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO8
// 
#define PBE_BLE5_RAM_FL1INFO8_ADR (PBE_BLE5_RAM_BASE + 0x00E8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO8 = (unsigned short*) PBE_BLE5_RAM_FL1INFO8_ADR;
#define S_PBE_BLE5_RAM_FL1INFO8 (*SP_PBE_BLE5_RAM_FL1INFO8)
// bitfield: FL1INFO8_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO8_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO8_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO8_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO8_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO8_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO8_RESERVED
#define PBE_BLE5_RAM_FL1INFO8_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO8_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO8_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO8_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO8_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO8_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO8_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO8_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO8_FALIGN
#define PBE_BLE5_RAM_FL1INFO8_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO8_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO8_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO8_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO8_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO8_TYPE
#define PBE_BLE5_RAM_FL1INFO8_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO8_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO8_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO8_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO8_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO8_EN
#define PBE_BLE5_RAM_FL1INFO8_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO8_EN_BM                           0x0001UL
// enums for bitfield FL1INFO8_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO8_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO8_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL8
// 
#define PBE_BLE5_RAM_FL1ADRL8_ADR (PBE_BLE5_RAM_BASE + 0x00EAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL8 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL8_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL8 (*SP_PBE_BLE5_RAM_FL1ADRL8)
// bitfield: FL1ADRL8_VAL
#define PBE_BLE5_RAM_FL1ADRL8_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM8
// 
#define PBE_BLE5_RAM_FL1ADRM8_ADR (PBE_BLE5_RAM_BASE + 0x00ECUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM8 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM8_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM8 (*SP_PBE_BLE5_RAM_FL1ADRM8)
// bitfield: FL1ADRM8_VAL
#define PBE_BLE5_RAM_FL1ADRM8_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH8
// 
#define PBE_BLE5_RAM_FL1ADRH8_ADR (PBE_BLE5_RAM_BASE + 0x00EEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH8 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH8_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH8 (*SP_PBE_BLE5_RAM_FL1ADRH8)
// bitfield: FL1ADRH8_VAL
#define PBE_BLE5_RAM_FL1ADRH8_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO9
// 
#define PBE_BLE5_RAM_FL1INFO9_ADR (PBE_BLE5_RAM_BASE + 0x00F0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO9 = (unsigned short*) PBE_BLE5_RAM_FL1INFO9_ADR;
#define S_PBE_BLE5_RAM_FL1INFO9 (*SP_PBE_BLE5_RAM_FL1INFO9)
// bitfield: FL1INFO9_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO9_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL1INFO9_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL1INFO9_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO9_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL1INFO9_MATCHTMP_MATCH                  0x1UL
// bitfield: FL1INFO9_RESERVED
#define PBE_BLE5_RAM_FL1INFO9_RESERVED                        4UL
#define PBE_BLE5_RAM_FL1INFO9_RESERVED_BM                     0x7FF0UL
// bitfield: FL1INFO9_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO9_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL1INFO9_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL1INFO9_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO9_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO9_PRIVIGN_IGN                     0x1UL
// bitfield: FL1INFO9_FALIGN
#define PBE_BLE5_RAM_FL1INFO9_FALIGN                          2UL
#define PBE_BLE5_RAM_FL1INFO9_FALIGN_BM                       0x0004UL
// enums for bitfield FL1INFO9_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO9_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL1INFO9_FALIGN_IGN                      0x1UL
// bitfield: FL1INFO9_TYPE
#define PBE_BLE5_RAM_FL1INFO9_TYPE                            1UL
#define PBE_BLE5_RAM_FL1INFO9_TYPE_BM                         0x0002UL
// enums for bitfield FL1INFO9_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO9_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL1INFO9_TYPE_RANDOM                     0x1UL
// bitfield: FL1INFO9_EN
#define PBE_BLE5_RAM_FL1INFO9_EN                              0UL
#define PBE_BLE5_RAM_FL1INFO9_EN_BM                           0x0001UL
// enums for bitfield FL1INFO9_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO9_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL1INFO9_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL1ADRL9
// 
#define PBE_BLE5_RAM_FL1ADRL9_ADR (PBE_BLE5_RAM_BASE + 0x00F2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL9 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL9_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL9 (*SP_PBE_BLE5_RAM_FL1ADRL9)
// bitfield: FL1ADRL9_VAL
#define PBE_BLE5_RAM_FL1ADRL9_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRL9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM9
// 
#define PBE_BLE5_RAM_FL1ADRM9_ADR (PBE_BLE5_RAM_BASE + 0x00F4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM9 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM9_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM9 (*SP_PBE_BLE5_RAM_FL1ADRM9)
// bitfield: FL1ADRM9_VAL
#define PBE_BLE5_RAM_FL1ADRM9_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRM9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH9
// 
#define PBE_BLE5_RAM_FL1ADRH9_ADR (PBE_BLE5_RAM_BASE + 0x00F6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH9 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH9_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH9 (*SP_PBE_BLE5_RAM_FL1ADRH9)
// bitfield: FL1ADRH9_VAL
#define PBE_BLE5_RAM_FL1ADRH9_VAL                             0UL
#define PBE_BLE5_RAM_FL1ADRH9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL1INFO10
// 
#define PBE_BLE5_RAM_FL1INFO10_ADR (PBE_BLE5_RAM_BASE + 0x00F8UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO10 = (unsigned short*) PBE_BLE5_RAM_FL1INFO10_ADR;
#define S_PBE_BLE5_RAM_FL1INFO10 (*SP_PBE_BLE5_RAM_FL1INFO10)
// bitfield: FL1INFO10_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO10_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO10_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO10_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO10_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO10_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO10_RESERVED
#define PBE_BLE5_RAM_FL1INFO10_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO10_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO10_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO10_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO10_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO10_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO10_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO10_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO10_FALIGN
#define PBE_BLE5_RAM_FL1INFO10_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO10_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO10_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO10_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO10_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO10_TYPE
#define PBE_BLE5_RAM_FL1INFO10_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO10_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO10_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO10_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO10_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO10_EN
#define PBE_BLE5_RAM_FL1INFO10_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO10_EN_BM                          0x0001UL
// enums for bitfield FL1INFO10_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO10_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO10_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL10
// 
#define PBE_BLE5_RAM_FL1ADRL10_ADR (PBE_BLE5_RAM_BASE + 0x00FAUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL10 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL10_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL10 (*SP_PBE_BLE5_RAM_FL1ADRL10)
// bitfield: FL1ADRL10_VAL
#define PBE_BLE5_RAM_FL1ADRL10_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM10
// 
#define PBE_BLE5_RAM_FL1ADRM10_ADR (PBE_BLE5_RAM_BASE + 0x00FCUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM10 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM10_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM10 (*SP_PBE_BLE5_RAM_FL1ADRM10)
// bitfield: FL1ADRM10_VAL
#define PBE_BLE5_RAM_FL1ADRM10_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH10
// 
#define PBE_BLE5_RAM_FL1ADRH10_ADR (PBE_BLE5_RAM_BASE + 0x00FEUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH10 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH10_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH10 (*SP_PBE_BLE5_RAM_FL1ADRH10)
// bitfield: FL1ADRH10_VAL
#define PBE_BLE5_RAM_FL1ADRH10_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1INFO11
// 
#define PBE_BLE5_RAM_FL1INFO11_ADR (PBE_BLE5_RAM_BASE + 0x0100UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO11 = (unsigned short*) PBE_BLE5_RAM_FL1INFO11_ADR;
#define S_PBE_BLE5_RAM_FL1INFO11 (*SP_PBE_BLE5_RAM_FL1INFO11)
// bitfield: FL1INFO11_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO11_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO11_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO11_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO11_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO11_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO11_RESERVED
#define PBE_BLE5_RAM_FL1INFO11_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO11_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO11_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO11_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO11_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO11_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO11_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO11_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO11_FALIGN
#define PBE_BLE5_RAM_FL1INFO11_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO11_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO11_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO11_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO11_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO11_TYPE
#define PBE_BLE5_RAM_FL1INFO11_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO11_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO11_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO11_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO11_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO11_EN
#define PBE_BLE5_RAM_FL1INFO11_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO11_EN_BM                          0x0001UL
// enums for bitfield FL1INFO11_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO11_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO11_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL11
// 
#define PBE_BLE5_RAM_FL1ADRL11_ADR (PBE_BLE5_RAM_BASE + 0x0102UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL11 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL11_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL11 (*SP_PBE_BLE5_RAM_FL1ADRL11)
// bitfield: FL1ADRL11_VAL
#define PBE_BLE5_RAM_FL1ADRL11_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM11
// 
#define PBE_BLE5_RAM_FL1ADRM11_ADR (PBE_BLE5_RAM_BASE + 0x0104UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM11 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM11_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM11 (*SP_PBE_BLE5_RAM_FL1ADRM11)
// bitfield: FL1ADRM11_VAL
#define PBE_BLE5_RAM_FL1ADRM11_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH11
// 
#define PBE_BLE5_RAM_FL1ADRH11_ADR (PBE_BLE5_RAM_BASE + 0x0106UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH11 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH11_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH11 (*SP_PBE_BLE5_RAM_FL1ADRH11)
// bitfield: FL1ADRH11_VAL
#define PBE_BLE5_RAM_FL1ADRH11_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1INFO12
// 
#define PBE_BLE5_RAM_FL1INFO12_ADR (PBE_BLE5_RAM_BASE + 0x0108UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO12 = (unsigned short*) PBE_BLE5_RAM_FL1INFO12_ADR;
#define S_PBE_BLE5_RAM_FL1INFO12 (*SP_PBE_BLE5_RAM_FL1INFO12)
// bitfield: FL1INFO12_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO12_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO12_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO12_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO12_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO12_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO12_RESERVED
#define PBE_BLE5_RAM_FL1INFO12_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO12_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO12_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO12_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO12_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO12_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO12_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO12_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO12_FALIGN
#define PBE_BLE5_RAM_FL1INFO12_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO12_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO12_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO12_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO12_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO12_TYPE
#define PBE_BLE5_RAM_FL1INFO12_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO12_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO12_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO12_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO12_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO12_EN
#define PBE_BLE5_RAM_FL1INFO12_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO12_EN_BM                          0x0001UL
// enums for bitfield FL1INFO12_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO12_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO12_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL12
// 
#define PBE_BLE5_RAM_FL1ADRL12_ADR (PBE_BLE5_RAM_BASE + 0x010AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL12 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL12_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL12 (*SP_PBE_BLE5_RAM_FL1ADRL12)
// bitfield: FL1ADRL12_VAL
#define PBE_BLE5_RAM_FL1ADRL12_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM12
// 
#define PBE_BLE5_RAM_FL1ADRM12_ADR (PBE_BLE5_RAM_BASE + 0x010CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM12 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM12_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM12 (*SP_PBE_BLE5_RAM_FL1ADRM12)
// bitfield: FL1ADRM12_VAL
#define PBE_BLE5_RAM_FL1ADRM12_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH12
// 
#define PBE_BLE5_RAM_FL1ADRH12_ADR (PBE_BLE5_RAM_BASE + 0x010EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH12 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH12_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH12 (*SP_PBE_BLE5_RAM_FL1ADRH12)
// bitfield: FL1ADRH12_VAL
#define PBE_BLE5_RAM_FL1ADRH12_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1INFO13
// 
#define PBE_BLE5_RAM_FL1INFO13_ADR (PBE_BLE5_RAM_BASE + 0x0110UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO13 = (unsigned short*) PBE_BLE5_RAM_FL1INFO13_ADR;
#define S_PBE_BLE5_RAM_FL1INFO13 (*SP_PBE_BLE5_RAM_FL1INFO13)
// bitfield: FL1INFO13_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO13_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO13_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO13_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO13_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO13_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO13_RESERVED
#define PBE_BLE5_RAM_FL1INFO13_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO13_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO13_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO13_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO13_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO13_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO13_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO13_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO13_FALIGN
#define PBE_BLE5_RAM_FL1INFO13_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO13_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO13_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO13_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO13_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO13_TYPE
#define PBE_BLE5_RAM_FL1INFO13_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO13_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO13_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO13_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO13_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO13_EN
#define PBE_BLE5_RAM_FL1INFO13_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO13_EN_BM                          0x0001UL
// enums for bitfield FL1INFO13_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO13_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO13_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL13
// 
#define PBE_BLE5_RAM_FL1ADRL13_ADR (PBE_BLE5_RAM_BASE + 0x0112UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL13 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL13_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL13 (*SP_PBE_BLE5_RAM_FL1ADRL13)
// bitfield: FL1ADRL13_VAL
#define PBE_BLE5_RAM_FL1ADRL13_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM13
// 
#define PBE_BLE5_RAM_FL1ADRM13_ADR (PBE_BLE5_RAM_BASE + 0x0114UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM13 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM13_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM13 (*SP_PBE_BLE5_RAM_FL1ADRM13)
// bitfield: FL1ADRM13_VAL
#define PBE_BLE5_RAM_FL1ADRM13_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH13
// 
#define PBE_BLE5_RAM_FL1ADRH13_ADR (PBE_BLE5_RAM_BASE + 0x0116UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH13 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH13_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH13 (*SP_PBE_BLE5_RAM_FL1ADRH13)
// bitfield: FL1ADRH13_VAL
#define PBE_BLE5_RAM_FL1ADRH13_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1INFO14
// 
#define PBE_BLE5_RAM_FL1INFO14_ADR (PBE_BLE5_RAM_BASE + 0x0118UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO14 = (unsigned short*) PBE_BLE5_RAM_FL1INFO14_ADR;
#define S_PBE_BLE5_RAM_FL1INFO14 (*SP_PBE_BLE5_RAM_FL1INFO14)
// bitfield: FL1INFO14_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO14_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO14_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO14_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO14_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO14_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO14_RESERVED
#define PBE_BLE5_RAM_FL1INFO14_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO14_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO14_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO14_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO14_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO14_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO14_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO14_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO14_FALIGN
#define PBE_BLE5_RAM_FL1INFO14_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO14_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO14_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO14_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO14_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO14_TYPE
#define PBE_BLE5_RAM_FL1INFO14_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO14_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO14_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO14_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO14_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO14_EN
#define PBE_BLE5_RAM_FL1INFO14_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO14_EN_BM                          0x0001UL
// enums for bitfield FL1INFO14_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO14_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO14_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL14
// 
#define PBE_BLE5_RAM_FL1ADRL14_ADR (PBE_BLE5_RAM_BASE + 0x011AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL14 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL14_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL14 (*SP_PBE_BLE5_RAM_FL1ADRL14)
// bitfield: FL1ADRL14_VAL
#define PBE_BLE5_RAM_FL1ADRL14_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM14
// 
#define PBE_BLE5_RAM_FL1ADRM14_ADR (PBE_BLE5_RAM_BASE + 0x011CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM14 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM14_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM14 (*SP_PBE_BLE5_RAM_FL1ADRM14)
// bitfield: FL1ADRM14_VAL
#define PBE_BLE5_RAM_FL1ADRM14_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH14
// 
#define PBE_BLE5_RAM_FL1ADRH14_ADR (PBE_BLE5_RAM_BASE + 0x011EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH14 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH14_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH14 (*SP_PBE_BLE5_RAM_FL1ADRH14)
// bitfield: FL1ADRH14_VAL
#define PBE_BLE5_RAM_FL1ADRH14_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1INFO15
// 
#define PBE_BLE5_RAM_FL1INFO15_ADR (PBE_BLE5_RAM_BASE + 0x0120UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1INFO15 = (unsigned short*) PBE_BLE5_RAM_FL1INFO15_ADR;
#define S_PBE_BLE5_RAM_FL1INFO15 (*SP_PBE_BLE5_RAM_FL1INFO15)
// bitfield: FL1INFO15_MATCHTMP
#define PBE_BLE5_RAM_FL1INFO15_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL1INFO15_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL1INFO15_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO15_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL1INFO15_MATCHTMP_MATCH                 0x1UL
// bitfield: FL1INFO15_RESERVED
#define PBE_BLE5_RAM_FL1INFO15_RESERVED                       4UL
#define PBE_BLE5_RAM_FL1INFO15_RESERVED_BM                    0x7FF0UL
// bitfield: FL1INFO15_PRIVIGN
#define PBE_BLE5_RAM_FL1INFO15_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL1INFO15_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL1INFO15_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO15_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL1INFO15_PRIVIGN_IGN                    0x1UL
// bitfield: FL1INFO15_FALIGN
#define PBE_BLE5_RAM_FL1INFO15_FALIGN                         2UL
#define PBE_BLE5_RAM_FL1INFO15_FALIGN_BM                      0x0004UL
// enums for bitfield FL1INFO15_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO15_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL1INFO15_FALIGN_IGN                     0x1UL
// bitfield: FL1INFO15_TYPE
#define PBE_BLE5_RAM_FL1INFO15_TYPE                           1UL
#define PBE_BLE5_RAM_FL1INFO15_TYPE_BM                        0x0002UL
// enums for bitfield FL1INFO15_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO15_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL1INFO15_TYPE_RANDOM                    0x1UL
// bitfield: FL1INFO15_EN
#define PBE_BLE5_RAM_FL1INFO15_EN                             0UL
#define PBE_BLE5_RAM_FL1INFO15_EN_BM                          0x0001UL
// enums for bitfield FL1INFO15_EN (width: 1)UL
#define PBE_BLE5_RAM_FL1INFO15_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL1INFO15_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL1ADRL15
// 
#define PBE_BLE5_RAM_FL1ADRL15_ADR (PBE_BLE5_RAM_BASE + 0x0122UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRL15 = (unsigned short*) PBE_BLE5_RAM_FL1ADRL15_ADR;
#define S_PBE_BLE5_RAM_FL1ADRL15 (*SP_PBE_BLE5_RAM_FL1ADRL15)
// bitfield: FL1ADRL15_VAL
#define PBE_BLE5_RAM_FL1ADRL15_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRL15_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRM15
// 
#define PBE_BLE5_RAM_FL1ADRM15_ADR (PBE_BLE5_RAM_BASE + 0x0124UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRM15 = (unsigned short*) PBE_BLE5_RAM_FL1ADRM15_ADR;
#define S_PBE_BLE5_RAM_FL1ADRM15 (*SP_PBE_BLE5_RAM_FL1ADRM15)
// bitfield: FL1ADRM15_VAL
#define PBE_BLE5_RAM_FL1ADRM15_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRM15_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL1ADRH15
// 
#define PBE_BLE5_RAM_FL1ADRH15_ADR (PBE_BLE5_RAM_BASE + 0x0126UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL1ADRH15 = (unsigned short*) PBE_BLE5_RAM_FL1ADRH15_ADR;
#define S_PBE_BLE5_RAM_FL1ADRH15 (*SP_PBE_BLE5_RAM_FL1ADRH15)
// bitfield: FL1ADRH15_VAL
#define PBE_BLE5_RAM_FL1ADRH15_VAL                            0UL
#define PBE_BLE5_RAM_FL1ADRH15_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO0
// 
#define PBE_BLE5_RAM_FL2INFO0_ADR (PBE_BLE5_RAM_BASE + 0x0128UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO0 = (unsigned short*) PBE_BLE5_RAM_FL2INFO0_ADR;
#define S_PBE_BLE5_RAM_FL2INFO0 (*SP_PBE_BLE5_RAM_FL2INFO0)
// bitfield: FL2INFO0_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO0_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO0_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO0_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO0_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO0_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO0_RESERVED
#define PBE_BLE5_RAM_FL2INFO0_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO0_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO0_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO0_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO0_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO0_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO0_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO0_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO0_FALIGN
#define PBE_BLE5_RAM_FL2INFO0_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO0_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO0_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO0_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO0_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO0_TYPE
#define PBE_BLE5_RAM_FL2INFO0_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO0_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO0_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO0_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO0_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO0_EN
#define PBE_BLE5_RAM_FL2INFO0_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO0_EN_BM                           0x0001UL
// enums for bitfield FL2INFO0_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO0_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO0_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL0
// 
#define PBE_BLE5_RAM_FL2ADRL0_ADR (PBE_BLE5_RAM_BASE + 0x012AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL0 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL0_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL0 (*SP_PBE_BLE5_RAM_FL2ADRL0)
// bitfield: FL2ADRL0_VAL
#define PBE_BLE5_RAM_FL2ADRL0_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM0
// 
#define PBE_BLE5_RAM_FL2ADRM0_ADR (PBE_BLE5_RAM_BASE + 0x012CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM0 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM0_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM0 (*SP_PBE_BLE5_RAM_FL2ADRM0)
// bitfield: FL2ADRM0_VAL
#define PBE_BLE5_RAM_FL2ADRM0_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH0
// 
#define PBE_BLE5_RAM_FL2ADRH0_ADR (PBE_BLE5_RAM_BASE + 0x012EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH0 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH0_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH0 (*SP_PBE_BLE5_RAM_FL2ADRH0)
// bitfield: FL2ADRH0_VAL
#define PBE_BLE5_RAM_FL2ADRH0_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH0_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO1
// 
#define PBE_BLE5_RAM_FL2INFO1_ADR (PBE_BLE5_RAM_BASE + 0x0130UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO1 = (unsigned short*) PBE_BLE5_RAM_FL2INFO1_ADR;
#define S_PBE_BLE5_RAM_FL2INFO1 (*SP_PBE_BLE5_RAM_FL2INFO1)
// bitfield: FL2INFO1_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO1_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO1_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO1_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO1_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO1_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO1_RESERVED
#define PBE_BLE5_RAM_FL2INFO1_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO1_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO1_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO1_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO1_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO1_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO1_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO1_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO1_FALIGN
#define PBE_BLE5_RAM_FL2INFO1_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO1_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO1_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO1_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO1_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO1_TYPE
#define PBE_BLE5_RAM_FL2INFO1_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO1_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO1_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO1_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO1_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO1_EN
#define PBE_BLE5_RAM_FL2INFO1_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO1_EN_BM                           0x0001UL
// enums for bitfield FL2INFO1_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO1_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO1_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL1
// 
#define PBE_BLE5_RAM_FL2ADRL1_ADR (PBE_BLE5_RAM_BASE + 0x0132UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL1 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL1_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL1 (*SP_PBE_BLE5_RAM_FL2ADRL1)
// bitfield: FL2ADRL1_VAL
#define PBE_BLE5_RAM_FL2ADRL1_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM1
// 
#define PBE_BLE5_RAM_FL2ADRM1_ADR (PBE_BLE5_RAM_BASE + 0x0134UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM1 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM1_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM1 (*SP_PBE_BLE5_RAM_FL2ADRM1)
// bitfield: FL2ADRM1_VAL
#define PBE_BLE5_RAM_FL2ADRM1_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH1
// 
#define PBE_BLE5_RAM_FL2ADRH1_ADR (PBE_BLE5_RAM_BASE + 0x0136UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH1 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH1_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH1 (*SP_PBE_BLE5_RAM_FL2ADRH1)
// bitfield: FL2ADRH1_VAL
#define PBE_BLE5_RAM_FL2ADRH1_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH1_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO2
// 
#define PBE_BLE5_RAM_FL2INFO2_ADR (PBE_BLE5_RAM_BASE + 0x0138UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO2 = (unsigned short*) PBE_BLE5_RAM_FL2INFO2_ADR;
#define S_PBE_BLE5_RAM_FL2INFO2 (*SP_PBE_BLE5_RAM_FL2INFO2)
// bitfield: FL2INFO2_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO2_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO2_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO2_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO2_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO2_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO2_RESERVED
#define PBE_BLE5_RAM_FL2INFO2_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO2_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO2_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO2_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO2_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO2_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO2_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO2_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO2_FALIGN
#define PBE_BLE5_RAM_FL2INFO2_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO2_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO2_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO2_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO2_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO2_TYPE
#define PBE_BLE5_RAM_FL2INFO2_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO2_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO2_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO2_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO2_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO2_EN
#define PBE_BLE5_RAM_FL2INFO2_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO2_EN_BM                           0x0001UL
// enums for bitfield FL2INFO2_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO2_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO2_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL2
// 
#define PBE_BLE5_RAM_FL2ADRL2_ADR (PBE_BLE5_RAM_BASE + 0x013AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL2 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL2_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL2 (*SP_PBE_BLE5_RAM_FL2ADRL2)
// bitfield: FL2ADRL2_VAL
#define PBE_BLE5_RAM_FL2ADRL2_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM2
// 
#define PBE_BLE5_RAM_FL2ADRM2_ADR (PBE_BLE5_RAM_BASE + 0x013CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM2 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM2_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM2 (*SP_PBE_BLE5_RAM_FL2ADRM2)
// bitfield: FL2ADRM2_VAL
#define PBE_BLE5_RAM_FL2ADRM2_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH2
// 
#define PBE_BLE5_RAM_FL2ADRH2_ADR (PBE_BLE5_RAM_BASE + 0x013EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH2 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH2_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH2 (*SP_PBE_BLE5_RAM_FL2ADRH2)
// bitfield: FL2ADRH2_VAL
#define PBE_BLE5_RAM_FL2ADRH2_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH2_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO3
// 
#define PBE_BLE5_RAM_FL2INFO3_ADR (PBE_BLE5_RAM_BASE + 0x0140UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO3 = (unsigned short*) PBE_BLE5_RAM_FL2INFO3_ADR;
#define S_PBE_BLE5_RAM_FL2INFO3 (*SP_PBE_BLE5_RAM_FL2INFO3)
// bitfield: FL2INFO3_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO3_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO3_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO3_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO3_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO3_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO3_RESERVED
#define PBE_BLE5_RAM_FL2INFO3_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO3_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO3_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO3_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO3_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO3_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO3_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO3_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO3_FALIGN
#define PBE_BLE5_RAM_FL2INFO3_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO3_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO3_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO3_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO3_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO3_TYPE
#define PBE_BLE5_RAM_FL2INFO3_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO3_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO3_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO3_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO3_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO3_EN
#define PBE_BLE5_RAM_FL2INFO3_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO3_EN_BM                           0x0001UL
// enums for bitfield FL2INFO3_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO3_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO3_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL3
// 
#define PBE_BLE5_RAM_FL2ADRL3_ADR (PBE_BLE5_RAM_BASE + 0x0142UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL3 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL3_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL3 (*SP_PBE_BLE5_RAM_FL2ADRL3)
// bitfield: FL2ADRL3_VAL
#define PBE_BLE5_RAM_FL2ADRL3_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM3
// 
#define PBE_BLE5_RAM_FL2ADRM3_ADR (PBE_BLE5_RAM_BASE + 0x0144UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM3 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM3_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM3 (*SP_PBE_BLE5_RAM_FL2ADRM3)
// bitfield: FL2ADRM3_VAL
#define PBE_BLE5_RAM_FL2ADRM3_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH3
// 
#define PBE_BLE5_RAM_FL2ADRH3_ADR (PBE_BLE5_RAM_BASE + 0x0146UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH3 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH3_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH3 (*SP_PBE_BLE5_RAM_FL2ADRH3)
// bitfield: FL2ADRH3_VAL
#define PBE_BLE5_RAM_FL2ADRH3_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH3_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO4
// 
#define PBE_BLE5_RAM_FL2INFO4_ADR (PBE_BLE5_RAM_BASE + 0x0148UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO4 = (unsigned short*) PBE_BLE5_RAM_FL2INFO4_ADR;
#define S_PBE_BLE5_RAM_FL2INFO4 (*SP_PBE_BLE5_RAM_FL2INFO4)
// bitfield: FL2INFO4_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO4_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO4_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO4_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO4_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO4_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO4_RESERVED
#define PBE_BLE5_RAM_FL2INFO4_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO4_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO4_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO4_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO4_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO4_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO4_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO4_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO4_FALIGN
#define PBE_BLE5_RAM_FL2INFO4_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO4_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO4_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO4_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO4_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO4_TYPE
#define PBE_BLE5_RAM_FL2INFO4_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO4_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO4_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO4_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO4_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO4_EN
#define PBE_BLE5_RAM_FL2INFO4_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO4_EN_BM                           0x0001UL
// enums for bitfield FL2INFO4_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO4_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO4_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL4
// 
#define PBE_BLE5_RAM_FL2ADRL4_ADR (PBE_BLE5_RAM_BASE + 0x014AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL4 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL4_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL4 (*SP_PBE_BLE5_RAM_FL2ADRL4)
// bitfield: FL2ADRL4_VAL
#define PBE_BLE5_RAM_FL2ADRL4_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM4
// 
#define PBE_BLE5_RAM_FL2ADRM4_ADR (PBE_BLE5_RAM_BASE + 0x014CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM4 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM4_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM4 (*SP_PBE_BLE5_RAM_FL2ADRM4)
// bitfield: FL2ADRM4_VAL
#define PBE_BLE5_RAM_FL2ADRM4_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH4
// 
#define PBE_BLE5_RAM_FL2ADRH4_ADR (PBE_BLE5_RAM_BASE + 0x014EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH4 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH4_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH4 (*SP_PBE_BLE5_RAM_FL2ADRH4)
// bitfield: FL2ADRH4_VAL
#define PBE_BLE5_RAM_FL2ADRH4_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH4_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO5
// 
#define PBE_BLE5_RAM_FL2INFO5_ADR (PBE_BLE5_RAM_BASE + 0x0150UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO5 = (unsigned short*) PBE_BLE5_RAM_FL2INFO5_ADR;
#define S_PBE_BLE5_RAM_FL2INFO5 (*SP_PBE_BLE5_RAM_FL2INFO5)
// bitfield: FL2INFO5_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO5_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO5_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO5_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO5_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO5_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO5_RESERVED
#define PBE_BLE5_RAM_FL2INFO5_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO5_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO5_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO5_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO5_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO5_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO5_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO5_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO5_FALIGN
#define PBE_BLE5_RAM_FL2INFO5_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO5_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO5_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO5_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO5_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO5_TYPE
#define PBE_BLE5_RAM_FL2INFO5_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO5_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO5_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO5_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO5_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO5_EN
#define PBE_BLE5_RAM_FL2INFO5_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO5_EN_BM                           0x0001UL
// enums for bitfield FL2INFO5_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO5_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO5_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL5
// 
#define PBE_BLE5_RAM_FL2ADRL5_ADR (PBE_BLE5_RAM_BASE + 0x0152UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL5 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL5_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL5 (*SP_PBE_BLE5_RAM_FL2ADRL5)
// bitfield: FL2ADRL5_VAL
#define PBE_BLE5_RAM_FL2ADRL5_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM5
// 
#define PBE_BLE5_RAM_FL2ADRM5_ADR (PBE_BLE5_RAM_BASE + 0x0154UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM5 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM5_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM5 (*SP_PBE_BLE5_RAM_FL2ADRM5)
// bitfield: FL2ADRM5_VAL
#define PBE_BLE5_RAM_FL2ADRM5_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH5
// 
#define PBE_BLE5_RAM_FL2ADRH5_ADR (PBE_BLE5_RAM_BASE + 0x0156UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH5 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH5_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH5 (*SP_PBE_BLE5_RAM_FL2ADRH5)
// bitfield: FL2ADRH5_VAL
#define PBE_BLE5_RAM_FL2ADRH5_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH5_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO6
// 
#define PBE_BLE5_RAM_FL2INFO6_ADR (PBE_BLE5_RAM_BASE + 0x0158UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO6 = (unsigned short*) PBE_BLE5_RAM_FL2INFO6_ADR;
#define S_PBE_BLE5_RAM_FL2INFO6 (*SP_PBE_BLE5_RAM_FL2INFO6)
// bitfield: FL2INFO6_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO6_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO6_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO6_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO6_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO6_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO6_RESERVED
#define PBE_BLE5_RAM_FL2INFO6_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO6_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO6_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO6_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO6_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO6_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO6_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO6_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO6_FALIGN
#define PBE_BLE5_RAM_FL2INFO6_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO6_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO6_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO6_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO6_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO6_TYPE
#define PBE_BLE5_RAM_FL2INFO6_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO6_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO6_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO6_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO6_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO6_EN
#define PBE_BLE5_RAM_FL2INFO6_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO6_EN_BM                           0x0001UL
// enums for bitfield FL2INFO6_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO6_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO6_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL6
// 
#define PBE_BLE5_RAM_FL2ADRL6_ADR (PBE_BLE5_RAM_BASE + 0x015AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL6 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL6_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL6 (*SP_PBE_BLE5_RAM_FL2ADRL6)
// bitfield: FL2ADRL6_VAL
#define PBE_BLE5_RAM_FL2ADRL6_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM6
// 
#define PBE_BLE5_RAM_FL2ADRM6_ADR (PBE_BLE5_RAM_BASE + 0x015CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM6 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM6_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM6 (*SP_PBE_BLE5_RAM_FL2ADRM6)
// bitfield: FL2ADRM6_VAL
#define PBE_BLE5_RAM_FL2ADRM6_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH6
// 
#define PBE_BLE5_RAM_FL2ADRH6_ADR (PBE_BLE5_RAM_BASE + 0x015EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH6 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH6_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH6 (*SP_PBE_BLE5_RAM_FL2ADRH6)
// bitfield: FL2ADRH6_VAL
#define PBE_BLE5_RAM_FL2ADRH6_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH6_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO7
// 
#define PBE_BLE5_RAM_FL2INFO7_ADR (PBE_BLE5_RAM_BASE + 0x0160UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO7 = (unsigned short*) PBE_BLE5_RAM_FL2INFO7_ADR;
#define S_PBE_BLE5_RAM_FL2INFO7 (*SP_PBE_BLE5_RAM_FL2INFO7)
// bitfield: FL2INFO7_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO7_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO7_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO7_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO7_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO7_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO7_RESERVED
#define PBE_BLE5_RAM_FL2INFO7_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO7_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO7_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO7_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO7_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO7_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO7_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO7_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO7_FALIGN
#define PBE_BLE5_RAM_FL2INFO7_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO7_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO7_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO7_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO7_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO7_TYPE
#define PBE_BLE5_RAM_FL2INFO7_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO7_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO7_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO7_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO7_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO7_EN
#define PBE_BLE5_RAM_FL2INFO7_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO7_EN_BM                           0x0001UL
// enums for bitfield FL2INFO7_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO7_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO7_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL7
// 
#define PBE_BLE5_RAM_FL2ADRL7_ADR (PBE_BLE5_RAM_BASE + 0x0162UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL7 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL7_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL7 (*SP_PBE_BLE5_RAM_FL2ADRL7)
// bitfield: FL2ADRL7_VAL
#define PBE_BLE5_RAM_FL2ADRL7_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM7
// 
#define PBE_BLE5_RAM_FL2ADRM7_ADR (PBE_BLE5_RAM_BASE + 0x0164UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM7 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM7_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM7 (*SP_PBE_BLE5_RAM_FL2ADRM7)
// bitfield: FL2ADRM7_VAL
#define PBE_BLE5_RAM_FL2ADRM7_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH7
// 
#define PBE_BLE5_RAM_FL2ADRH7_ADR (PBE_BLE5_RAM_BASE + 0x0166UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH7 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH7_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH7 (*SP_PBE_BLE5_RAM_FL2ADRH7)
// bitfield: FL2ADRH7_VAL
#define PBE_BLE5_RAM_FL2ADRH7_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH7_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO8
// 
#define PBE_BLE5_RAM_FL2INFO8_ADR (PBE_BLE5_RAM_BASE + 0x0168UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO8 = (unsigned short*) PBE_BLE5_RAM_FL2INFO8_ADR;
#define S_PBE_BLE5_RAM_FL2INFO8 (*SP_PBE_BLE5_RAM_FL2INFO8)
// bitfield: FL2INFO8_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO8_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO8_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO8_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO8_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO8_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO8_RESERVED
#define PBE_BLE5_RAM_FL2INFO8_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO8_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO8_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO8_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO8_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO8_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO8_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO8_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO8_FALIGN
#define PBE_BLE5_RAM_FL2INFO8_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO8_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO8_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO8_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO8_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO8_TYPE
#define PBE_BLE5_RAM_FL2INFO8_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO8_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO8_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO8_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO8_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO8_EN
#define PBE_BLE5_RAM_FL2INFO8_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO8_EN_BM                           0x0001UL
// enums for bitfield FL2INFO8_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO8_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO8_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL8
// 
#define PBE_BLE5_RAM_FL2ADRL8_ADR (PBE_BLE5_RAM_BASE + 0x016AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL8 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL8_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL8 (*SP_PBE_BLE5_RAM_FL2ADRL8)
// bitfield: FL2ADRL8_VAL
#define PBE_BLE5_RAM_FL2ADRL8_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM8
// 
#define PBE_BLE5_RAM_FL2ADRM8_ADR (PBE_BLE5_RAM_BASE + 0x016CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM8 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM8_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM8 (*SP_PBE_BLE5_RAM_FL2ADRM8)
// bitfield: FL2ADRM8_VAL
#define PBE_BLE5_RAM_FL2ADRM8_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH8
// 
#define PBE_BLE5_RAM_FL2ADRH8_ADR (PBE_BLE5_RAM_BASE + 0x016EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH8 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH8_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH8 (*SP_PBE_BLE5_RAM_FL2ADRH8)
// bitfield: FL2ADRH8_VAL
#define PBE_BLE5_RAM_FL2ADRH8_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH8_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO9
// 
#define PBE_BLE5_RAM_FL2INFO9_ADR (PBE_BLE5_RAM_BASE + 0x0170UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO9 = (unsigned short*) PBE_BLE5_RAM_FL2INFO9_ADR;
#define S_PBE_BLE5_RAM_FL2INFO9 (*SP_PBE_BLE5_RAM_FL2INFO9)
// bitfield: FL2INFO9_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO9_MATCHTMP                        15UL
#define PBE_BLE5_RAM_FL2INFO9_MATCHTMP_BM                     0x8000UL
// enums for bitfield FL2INFO9_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO9_MATCHTMP_NOMATCH                0x0UL
#define PBE_BLE5_RAM_FL2INFO9_MATCHTMP_MATCH                  0x1UL
// bitfield: FL2INFO9_RESERVED
#define PBE_BLE5_RAM_FL2INFO9_RESERVED                        4UL
#define PBE_BLE5_RAM_FL2INFO9_RESERVED_BM                     0x7FF0UL
// bitfield: FL2INFO9_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO9_PRIVIGN                         3UL
#define PBE_BLE5_RAM_FL2INFO9_PRIVIGN_BM                      0x0008UL
// enums for bitfield FL2INFO9_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO9_PRIVIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO9_PRIVIGN_IGN                     0x1UL
// bitfield: FL2INFO9_FALIGN
#define PBE_BLE5_RAM_FL2INFO9_FALIGN                          2UL
#define PBE_BLE5_RAM_FL2INFO9_FALIGN_BM                       0x0004UL
// enums for bitfield FL2INFO9_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO9_FALIGN_NIGN                     0x0UL
#define PBE_BLE5_RAM_FL2INFO9_FALIGN_IGN                      0x1UL
// bitfield: FL2INFO9_TYPE
#define PBE_BLE5_RAM_FL2INFO9_TYPE                            1UL
#define PBE_BLE5_RAM_FL2INFO9_TYPE_BM                         0x0002UL
// enums for bitfield FL2INFO9_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO9_TYPE_PUBLIC                     0x0UL
#define PBE_BLE5_RAM_FL2INFO9_TYPE_RANDOM                     0x1UL
// bitfield: FL2INFO9_EN
#define PBE_BLE5_RAM_FL2INFO9_EN                              0UL
#define PBE_BLE5_RAM_FL2INFO9_EN_BM                           0x0001UL
// enums for bitfield FL2INFO9_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO9_EN_DIS                          0x0UL
#define PBE_BLE5_RAM_FL2INFO9_EN_EN                           0x1UL
// --------------------------------------------------------------
// FL2ADRL9
// 
#define PBE_BLE5_RAM_FL2ADRL9_ADR (PBE_BLE5_RAM_BASE + 0x0172UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL9 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL9_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL9 (*SP_PBE_BLE5_RAM_FL2ADRL9)
// bitfield: FL2ADRL9_VAL
#define PBE_BLE5_RAM_FL2ADRL9_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRL9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM9
// 
#define PBE_BLE5_RAM_FL2ADRM9_ADR (PBE_BLE5_RAM_BASE + 0x0174UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM9 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM9_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM9 (*SP_PBE_BLE5_RAM_FL2ADRM9)
// bitfield: FL2ADRM9_VAL
#define PBE_BLE5_RAM_FL2ADRM9_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRM9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH9
// 
#define PBE_BLE5_RAM_FL2ADRH9_ADR (PBE_BLE5_RAM_BASE + 0x0176UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH9 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH9_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH9 (*SP_PBE_BLE5_RAM_FL2ADRH9)
// bitfield: FL2ADRH9_VAL
#define PBE_BLE5_RAM_FL2ADRH9_VAL                             0UL
#define PBE_BLE5_RAM_FL2ADRH9_VAL_BM                          0xFFFFUL
// --------------------------------------------------------------
// FL2INFO10
// 
#define PBE_BLE5_RAM_FL2INFO10_ADR (PBE_BLE5_RAM_BASE + 0x0178UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO10 = (unsigned short*) PBE_BLE5_RAM_FL2INFO10_ADR;
#define S_PBE_BLE5_RAM_FL2INFO10 (*SP_PBE_BLE5_RAM_FL2INFO10)
// bitfield: FL2INFO10_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO10_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO10_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO10_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO10_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO10_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO10_RESERVED
#define PBE_BLE5_RAM_FL2INFO10_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO10_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO10_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO10_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO10_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO10_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO10_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO10_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO10_FALIGN
#define PBE_BLE5_RAM_FL2INFO10_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO10_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO10_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO10_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO10_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO10_TYPE
#define PBE_BLE5_RAM_FL2INFO10_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO10_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO10_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO10_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO10_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO10_EN
#define PBE_BLE5_RAM_FL2INFO10_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO10_EN_BM                          0x0001UL
// enums for bitfield FL2INFO10_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO10_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO10_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL10
// 
#define PBE_BLE5_RAM_FL2ADRL10_ADR (PBE_BLE5_RAM_BASE + 0x017AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL10 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL10_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL10 (*SP_PBE_BLE5_RAM_FL2ADRL10)
// bitfield: FL2ADRL10_VAL
#define PBE_BLE5_RAM_FL2ADRL10_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM10
// 
#define PBE_BLE5_RAM_FL2ADRM10_ADR (PBE_BLE5_RAM_BASE + 0x017CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM10 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM10_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM10 (*SP_PBE_BLE5_RAM_FL2ADRM10)
// bitfield: FL2ADRM10_VAL
#define PBE_BLE5_RAM_FL2ADRM10_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH10
// 
#define PBE_BLE5_RAM_FL2ADRH10_ADR (PBE_BLE5_RAM_BASE + 0x017EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH10 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH10_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH10 (*SP_PBE_BLE5_RAM_FL2ADRH10)
// bitfield: FL2ADRH10_VAL
#define PBE_BLE5_RAM_FL2ADRH10_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH10_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO11
// 
#define PBE_BLE5_RAM_FL2INFO11_ADR (PBE_BLE5_RAM_BASE + 0x0180UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO11 = (unsigned short*) PBE_BLE5_RAM_FL2INFO11_ADR;
#define S_PBE_BLE5_RAM_FL2INFO11 (*SP_PBE_BLE5_RAM_FL2INFO11)
// bitfield: FL2INFO11_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO11_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO11_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO11_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO11_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO11_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO11_RESERVED
#define PBE_BLE5_RAM_FL2INFO11_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO11_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO11_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO11_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO11_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO11_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO11_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO11_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO11_FALIGN
#define PBE_BLE5_RAM_FL2INFO11_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO11_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO11_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO11_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO11_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO11_TYPE
#define PBE_BLE5_RAM_FL2INFO11_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO11_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO11_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO11_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO11_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO11_EN
#define PBE_BLE5_RAM_FL2INFO11_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO11_EN_BM                          0x0001UL
// enums for bitfield FL2INFO11_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO11_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO11_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL11
// 
#define PBE_BLE5_RAM_FL2ADRL11_ADR (PBE_BLE5_RAM_BASE + 0x0182UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL11 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL11_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL11 (*SP_PBE_BLE5_RAM_FL2ADRL11)
// bitfield: FL2ADRL11_VAL
#define PBE_BLE5_RAM_FL2ADRL11_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM11
// 
#define PBE_BLE5_RAM_FL2ADRM11_ADR (PBE_BLE5_RAM_BASE + 0x0184UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM11 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM11_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM11 (*SP_PBE_BLE5_RAM_FL2ADRM11)
// bitfield: FL2ADRM11_VAL
#define PBE_BLE5_RAM_FL2ADRM11_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH11
// 
#define PBE_BLE5_RAM_FL2ADRH11_ADR (PBE_BLE5_RAM_BASE + 0x0186UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH11 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH11_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH11 (*SP_PBE_BLE5_RAM_FL2ADRH11)
// bitfield: FL2ADRH11_VAL
#define PBE_BLE5_RAM_FL2ADRH11_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH11_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO12
// 
#define PBE_BLE5_RAM_FL2INFO12_ADR (PBE_BLE5_RAM_BASE + 0x0188UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO12 = (unsigned short*) PBE_BLE5_RAM_FL2INFO12_ADR;
#define S_PBE_BLE5_RAM_FL2INFO12 (*SP_PBE_BLE5_RAM_FL2INFO12)
// bitfield: FL2INFO12_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO12_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO12_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO12_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO12_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO12_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO12_RESERVED
#define PBE_BLE5_RAM_FL2INFO12_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO12_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO12_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO12_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO12_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO12_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO12_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO12_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO12_FALIGN
#define PBE_BLE5_RAM_FL2INFO12_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO12_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO12_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO12_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO12_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO12_TYPE
#define PBE_BLE5_RAM_FL2INFO12_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO12_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO12_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO12_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO12_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO12_EN
#define PBE_BLE5_RAM_FL2INFO12_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO12_EN_BM                          0x0001UL
// enums for bitfield FL2INFO12_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO12_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO12_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL12
// 
#define PBE_BLE5_RAM_FL2ADRL12_ADR (PBE_BLE5_RAM_BASE + 0x018AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL12 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL12_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL12 (*SP_PBE_BLE5_RAM_FL2ADRL12)
// bitfield: FL2ADRL12_VAL
#define PBE_BLE5_RAM_FL2ADRL12_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM12
// 
#define PBE_BLE5_RAM_FL2ADRM12_ADR (PBE_BLE5_RAM_BASE + 0x018CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM12 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM12_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM12 (*SP_PBE_BLE5_RAM_FL2ADRM12)
// bitfield: FL2ADRM12_VAL
#define PBE_BLE5_RAM_FL2ADRM12_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH12
// 
#define PBE_BLE5_RAM_FL2ADRH12_ADR (PBE_BLE5_RAM_BASE + 0x018EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH12 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH12_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH12 (*SP_PBE_BLE5_RAM_FL2ADRH12)
// bitfield: FL2ADRH12_VAL
#define PBE_BLE5_RAM_FL2ADRH12_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH12_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO13
// 
#define PBE_BLE5_RAM_FL2INFO13_ADR (PBE_BLE5_RAM_BASE + 0x0190UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO13 = (unsigned short*) PBE_BLE5_RAM_FL2INFO13_ADR;
#define S_PBE_BLE5_RAM_FL2INFO13 (*SP_PBE_BLE5_RAM_FL2INFO13)
// bitfield: FL2INFO13_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO13_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO13_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO13_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO13_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO13_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO13_RESERVED
#define PBE_BLE5_RAM_FL2INFO13_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO13_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO13_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO13_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO13_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO13_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO13_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO13_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO13_FALIGN
#define PBE_BLE5_RAM_FL2INFO13_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO13_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO13_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO13_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO13_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO13_TYPE
#define PBE_BLE5_RAM_FL2INFO13_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO13_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO13_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO13_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO13_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO13_EN
#define PBE_BLE5_RAM_FL2INFO13_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO13_EN_BM                          0x0001UL
// enums for bitfield FL2INFO13_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO13_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO13_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL13
// 
#define PBE_BLE5_RAM_FL2ADRL13_ADR (PBE_BLE5_RAM_BASE + 0x0192UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL13 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL13_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL13 (*SP_PBE_BLE5_RAM_FL2ADRL13)
// bitfield: FL2ADRL13_VAL
#define PBE_BLE5_RAM_FL2ADRL13_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM13
// 
#define PBE_BLE5_RAM_FL2ADRM13_ADR (PBE_BLE5_RAM_BASE + 0x0194UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM13 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM13_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM13 (*SP_PBE_BLE5_RAM_FL2ADRM13)
// bitfield: FL2ADRM13_VAL
#define PBE_BLE5_RAM_FL2ADRM13_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH13
// 
#define PBE_BLE5_RAM_FL2ADRH13_ADR (PBE_BLE5_RAM_BASE + 0x0196UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH13 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH13_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH13 (*SP_PBE_BLE5_RAM_FL2ADRH13)
// bitfield: FL2ADRH13_VAL
#define PBE_BLE5_RAM_FL2ADRH13_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH13_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO14
// 
#define PBE_BLE5_RAM_FL2INFO14_ADR (PBE_BLE5_RAM_BASE + 0x0198UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO14 = (unsigned short*) PBE_BLE5_RAM_FL2INFO14_ADR;
#define S_PBE_BLE5_RAM_FL2INFO14 (*SP_PBE_BLE5_RAM_FL2INFO14)
// bitfield: FL2INFO14_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO14_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO14_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO14_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO14_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO14_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO14_RESERVED
#define PBE_BLE5_RAM_FL2INFO14_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO14_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO14_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO14_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO14_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO14_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO14_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO14_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO14_FALIGN
#define PBE_BLE5_RAM_FL2INFO14_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO14_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO14_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO14_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO14_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO14_TYPE
#define PBE_BLE5_RAM_FL2INFO14_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO14_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO14_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO14_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO14_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO14_EN
#define PBE_BLE5_RAM_FL2INFO14_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO14_EN_BM                          0x0001UL
// enums for bitfield FL2INFO14_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO14_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO14_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL14
// 
#define PBE_BLE5_RAM_FL2ADRL14_ADR (PBE_BLE5_RAM_BASE + 0x019AUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL14 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL14_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL14 (*SP_PBE_BLE5_RAM_FL2ADRL14)
// bitfield: FL2ADRL14_VAL
#define PBE_BLE5_RAM_FL2ADRL14_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM14
// 
#define PBE_BLE5_RAM_FL2ADRM14_ADR (PBE_BLE5_RAM_BASE + 0x019CUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM14 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM14_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM14 (*SP_PBE_BLE5_RAM_FL2ADRM14)
// bitfield: FL2ADRM14_VAL
#define PBE_BLE5_RAM_FL2ADRM14_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH14
// 
#define PBE_BLE5_RAM_FL2ADRH14_ADR (PBE_BLE5_RAM_BASE + 0x019EUL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH14 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH14_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH14 (*SP_PBE_BLE5_RAM_FL2ADRH14)
// bitfield: FL2ADRH14_VAL
#define PBE_BLE5_RAM_FL2ADRH14_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH14_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2INFO15
// 
#define PBE_BLE5_RAM_FL2INFO15_ADR (PBE_BLE5_RAM_BASE + 0x01A0UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2INFO15 = (unsigned short*) PBE_BLE5_RAM_FL2INFO15_ADR;
#define S_PBE_BLE5_RAM_FL2INFO15 (*SP_PBE_BLE5_RAM_FL2INFO15)
// bitfield: FL2INFO15_MATCHTMP
#define PBE_BLE5_RAM_FL2INFO15_MATCHTMP                       15UL
#define PBE_BLE5_RAM_FL2INFO15_MATCHTMP_BM                    0x8000UL
// enums for bitfield FL2INFO15_MATCHTMP (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO15_MATCHTMP_NOMATCH               0x0UL
#define PBE_BLE5_RAM_FL2INFO15_MATCHTMP_MATCH                 0x1UL
// bitfield: FL2INFO15_RESERVED
#define PBE_BLE5_RAM_FL2INFO15_RESERVED                       4UL
#define PBE_BLE5_RAM_FL2INFO15_RESERVED_BM                    0x7FF0UL
// bitfield: FL2INFO15_PRIVIGN
#define PBE_BLE5_RAM_FL2INFO15_PRIVIGN                        3UL
#define PBE_BLE5_RAM_FL2INFO15_PRIVIGN_BM                     0x0008UL
// enums for bitfield FL2INFO15_PRIVIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO15_PRIVIGN_NIGN                   0x0UL
#define PBE_BLE5_RAM_FL2INFO15_PRIVIGN_IGN                    0x1UL
// bitfield: FL2INFO15_FALIGN
#define PBE_BLE5_RAM_FL2INFO15_FALIGN                         2UL
#define PBE_BLE5_RAM_FL2INFO15_FALIGN_BM                      0x0004UL
// enums for bitfield FL2INFO15_FALIGN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO15_FALIGN_NIGN                    0x0UL
#define PBE_BLE5_RAM_FL2INFO15_FALIGN_IGN                     0x1UL
// bitfield: FL2INFO15_TYPE
#define PBE_BLE5_RAM_FL2INFO15_TYPE                           1UL
#define PBE_BLE5_RAM_FL2INFO15_TYPE_BM                        0x0002UL
// enums for bitfield FL2INFO15_TYPE (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO15_TYPE_PUBLIC                    0x0UL
#define PBE_BLE5_RAM_FL2INFO15_TYPE_RANDOM                    0x1UL
// bitfield: FL2INFO15_EN
#define PBE_BLE5_RAM_FL2INFO15_EN                             0UL
#define PBE_BLE5_RAM_FL2INFO15_EN_BM                          0x0001UL
// enums for bitfield FL2INFO15_EN (width: 1)UL
#define PBE_BLE5_RAM_FL2INFO15_EN_DIS                         0x0UL
#define PBE_BLE5_RAM_FL2INFO15_EN_EN                          0x1UL
// --------------------------------------------------------------
// FL2ADRL15
// 
#define PBE_BLE5_RAM_FL2ADRL15_ADR (PBE_BLE5_RAM_BASE + 0x01A2UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRL15 = (unsigned short*) PBE_BLE5_RAM_FL2ADRL15_ADR;
#define S_PBE_BLE5_RAM_FL2ADRL15 (*SP_PBE_BLE5_RAM_FL2ADRL15)
// bitfield: FL2ADRL15_VAL
#define PBE_BLE5_RAM_FL2ADRL15_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRL15_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRM15
// 
#define PBE_BLE5_RAM_FL2ADRM15_ADR (PBE_BLE5_RAM_BASE + 0x01A4UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRM15 = (unsigned short*) PBE_BLE5_RAM_FL2ADRM15_ADR;
#define S_PBE_BLE5_RAM_FL2ADRM15 (*SP_PBE_BLE5_RAM_FL2ADRM15)
// bitfield: FL2ADRM15_VAL
#define PBE_BLE5_RAM_FL2ADRM15_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRM15_VAL_BM                         0xFFFFUL
// --------------------------------------------------------------
// FL2ADRH15
// 
#define PBE_BLE5_RAM_FL2ADRH15_ADR (PBE_BLE5_RAM_BASE + 0x01A6UL)
static volatile unsigned short* const SP_PBE_BLE5_RAM_FL2ADRH15 = (unsigned short*) PBE_BLE5_RAM_FL2ADRH15_ADR;
#define S_PBE_BLE5_RAM_FL2ADRH15 (*SP_PBE_BLE5_RAM_FL2ADRH15)
// bitfield: FL2ADRH15_VAL
#define PBE_BLE5_RAM_FL2ADRH15_VAL                            0UL
#define PBE_BLE5_RAM_FL2ADRH15_VAL_BM                         0xFFFFUL

#endif
