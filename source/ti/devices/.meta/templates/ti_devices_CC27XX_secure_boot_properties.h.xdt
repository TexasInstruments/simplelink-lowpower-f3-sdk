%%{
/*
 * Copyright (c) 2022-2025, Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== ti_devices_CC27XX_secure_boot_properties.h.xdt ========
 */

    var module = system.modules['/ti/devices/CCFG'];
    var inst = module.$static;

%%}
/*
 *  ======== ti_secure_boot_properties.h ========
 *  Secure Boot definitions for CC27XX devices.
 *
 *  DO NOT EDIT - This file is generated by the SysConfig tool.
 *
 */

#ifndef __SECURE_BOOT_PROPERTIES_H__
#define __SECURE_BOOT_PROPERTIES_H__

% if (inst.authMethod != "No Authentication") {
%   var slot_base=0, slot_size=0, imgTypeCode=0, imgType;
%   var prim0Start, prim0Len, sec0Start, sec0Len;
%   if (inst.authMethod != "No Authentication") {
%        imgTypeCode=0xabb0c380;
%        /* Get active imgType, and Primary/Secondary slots */
%        if (!(system.modules["/ti/utils/TrustZone"])) {
%            if (inst.mode == "Overwrite") {
%                imgType = inst.imgTypeSingleOvrWrt;
%            } else {
%                imgType = inst.imgTypeSingleXIP;
%            }
%
%            prim0Start = inst.prim0StartSingle;
%            prim0Len = inst.prim0LenSingle;
%            sec0Start = inst.sec0StartSingle;
%            sec0Len = inst.sec0LenSingle;
%
%        } else {
%            imgType = inst.imgTypeDual;
%
%            prim0Start = inst.prim0StartSecure;
%            prim0Len = inst.prim0LenSecure;
%            sec0Start = inst.sec0StartSecure;
%            sec0Len = inst.sec0LenSecure;
%
%        }
%
%        if (inst.mode == "Overwrite") {
%            if (system.modules["/ti/utils/TrustZone"]) {
%                if (imgType == "APP 1") {
%                    imgTypeCode = 0xabb11193;
%                    slot_base = inst.prim1Start;
%                    slot_size = inst.prim1Len;
%                } else {
%                    slot_base = prim0Start;
%                    slot_size = prim0Len;
%                }
%            } else {
%                slot_base = prim0Start;
%                slot_size = prim0Len;
%            }
%        } else { /* XIP */
%            if (imgType == "APP for Primary") {
%                slot_base = prim0Start;
%                slot_size = prim0Len;
%            } else {
%                slot_base = sec0Start;
%                slot_size = sec0Len;
%            }
%        }
%
%        if (imgType == "SSB") {
%            imgTypeCode = 0x53c0b001;
%            slot_base = inst.ssbStart;
%            slot_size = inst.ssbLen;
%        }
%   }
#define SB_BOOT_TARGET_SLOT_BASE 0x`slot_base.toString(16)`
#define SB_BOOT_TARGET_SLOT_SIZE 0x`slot_size.toString(16)`
#define SB_HEADER_BASE SB_BOOT_TARGET_SLOT_BASE
#define SB_HEADER_SIZE 0x`inst.hdrSize.toString(16)`
#define SB_SEC_CNT `inst.secCnt`
#define SB_IMG_TYPE 0x`imgTypeCode.toString(16)`
% } else {
/* Secure Boot is DISABLED - No definitions generated */
% }

#endif
