%%{
/*
 * Copyright (c) 2019-2023 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== rf_settings.h.xdt ========
 */
const DevInfo = system.getScript("/ti/devices/radioconfig/device_info.js");

/* Common utility functions */
const Common = system.getScript("/ti/devices/radioconfig/radioconfig_common.js");

/* RadioConfig base module */
const RadioConfig = system.getScript("/ti/devices/radioconfig/radioconfig");

/* Header templates */
const fileHeader = system.getTemplate("/ti/devices/radioconfig/templates/fileheader.xdt");

/* Get list of SysConfig modules name */
const modNames = Object.keys(system.modules).sort();

/* Code generation template for RF Settings (H file) */
const templateName = "/ti/devices/radioconfig/templates/rf_settings.h.xdt";

/* Get list of include files */
const includes = RadioConfig.generateIncludesH(modNames);

/* RF Frontend header */
const frontendHeader = system.getTemplate("/ti/devices/radioconfig/templates/rf_design.h.xdt");

/* Version information */
const versions = DevInfo.getVersionInfo();
const rfSettingsVersion = '#define RF_SETTINGS_VERSION "' + versions.settingsVersion + '"';

%%}
`fileHeader("ti_radio_config.h")`
#ifndef _TI_RADIO_CONFIG_H_
#define _TI_RADIO_CONFIG_H_

`includes`
// RF settings version
`rfSettingsVersion`

`frontendHeader()`
%
% /* loop over all modules in the current configuration */
% Common.paTableDone = false;
% for (let i = 0; i < modNames.length; i++) {
%   const mod = system.modules[modNames[i]];
%   if (mod.templates && mod.templates[templateName]) {
%     /* load its template and expand it */
%     const gen = system.getTemplate(mod.templates[templateName]);
`gen(mod)`
%   }
% }
#endif // _TI_RADIO_CONFIG_H_
