%%{
/*
 * Copyright (c) 2024 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

let GPIO = system.getScript("/ti/drivers/GPIO.syscfg.js");
let LogSinkTraceLPF3 = args[0];
let instances = LogSinkTraceLPF3.$instances;

%%}
/*
 *  ======== LogSinkTraceLPF3 ========
 */
#include <ti/log/LogSinkTraceLPF3.h>
#include "ti_drivers_config.h"
#include <ti/devices/DeviceFamily.h>
#include <ti/drivers/GPIO.h>

const LogSinkTraceLPF3_Config LogSinkTraceLPF3_config = {
%    let inst           = instances[0];
%    let pinInstance = inst[`tracePinInstance`];
%    let lrfdNumber = inst.lrfGpio.tracePin.$solution.peripheralPinName.replace("LRFD", "");
%    let pinNumber = GPIO.getDioForInst(pinInstance);

    .tracerConfig       = `inst.rfTraceMode` | `inst.rfTraceTimestamp` | `inst.rfTracePrescaler`,
    .tracerPin          = `pinNumber`,
    .lrfdTracerPin      = `lrfdNumber`,
    .tracerPinMux       = GPIO_MUX_PORTCFG_PFUNC`inst.lrfGpio.tracePin.$solution.muxMode`
};
